{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "mfVVcNkvWOgB"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Fungsi yang Digunakan"
      ],
      "metadata": {
        "id": "mfVVcNkvWOgB"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XAkL3FiAWFLH"
      },
      "outputs": [],
      "source": [
        "import itertools\n",
        "# Fungsi untuk mengecek hvsemigrup\n",
        "def cek_semihipergrup(H, op_table):\n",
        "    asosiatif_kuat = []\n",
        "    for x in H:\n",
        "        for y in H:\n",
        "            for z in H:\n",
        "                left_set = set()\n",
        "                for v in op_table[(x, y)]:\n",
        "                    left_set.update(op_table[(v, z)])\n",
        "\n",
        "                right_set = set()\n",
        "                for u in op_table[(y, z)]:\n",
        "                    right_set.update(op_table[(x, u)])\n",
        "\n",
        "                if left_set == right_set:\n",
        "                    asosiatif_kuat.append(f\"({x} ⊗ {y}) ⊗ {z} = {x} ⊗ ({y} ⊗ {z}) = {left_set}\")\n",
        "                else:\n",
        "                    print(f\"Contoh penyangkal: ({x} ⊗ {y}) ⊗ {z} = {left_set}, {x} ⊗ ({y} ⊗ {z}) = {right_set}\")\n",
        "                    return False\n",
        "\n",
        "    # Jika semua valid\n",
        "    for asosiatif in asosiatif_kuat:\n",
        "        print(asosiatif)\n",
        "    return True\n",
        "\n",
        "def cek_hvsemigrup(H, op_table, semihipergrup_terpenuhi):\n",
        "    if semihipergrup_terpenuhi:\n",
        "        return True\n",
        "\n",
        "    asosiatif_lemah = []\n",
        "    for x in H:\n",
        "        for y in H:\n",
        "            for z in H:\n",
        "                left_set = set()\n",
        "                for v in op_table[(x, y)]:\n",
        "                    left_set.update(op_table[(v, z)])\n",
        "\n",
        "                right_set = set()\n",
        "                for u in op_table[(y, z)]:\n",
        "                    right_set.update(op_table[(x, u)])\n",
        "\n",
        "                if left_set.intersection(right_set):\n",
        "                    asosiatif_lemah.append(f\"({x} ⊗ {y}) ⊗ {z} ∩ {x} ⊗ ({y} ⊗ {z}) = {left_set.intersection(right_set)}\")\n",
        "                else:\n",
        "                    print(f\"Contoh penyangkal: ({x} ⊗ {y}) ⊗ {z} = {left_set}, {x} ⊗ ({y} ⊗ {z}) = {right_set}\")\n",
        "                    return False\n",
        "\n",
        "    # Jika semua memenuhi asosiatif lemah\n",
        "    for asosiatif in asosiatif_lemah:\n",
        "        print(asosiatif)\n",
        "    return True\n",
        "\n",
        "# Fungsi untuk mengecek quasihipergrup\n",
        "def cek_kuasihipergrup(H, op_table):\n",
        "    for x in H:\n",
        "        # Hitung x ⊗ H\n",
        "        x_otimes_H = set()\n",
        "        for y in H:\n",
        "            x_otimes_H.update(op_table[(x, y)])\n",
        "        # Hitung H ⊗ x\n",
        "        H_otimes_x = set()\n",
        "        for y in H:\n",
        "            H_otimes_x.update(op_table[(y, x)])\n",
        "        # Cek apakah hasilnya sama dengan H\n",
        "        if x_otimes_H != set(H) or H_otimes_x != set(H):\n",
        "            return False\n",
        "    return True\n",
        "\n",
        "# Fungsi untuk mengecek hipergrup\n",
        "def cek_hipergrup(semihipergrup, kuasihipergrup):\n",
        "    if semihipergrup==True and kuasihipergrup==True:\n",
        "      return True\n",
        "    return False\n",
        "\n",
        "#Fungsi untuk mengecek komutatif\n",
        "def cek_komutatif(H, op_table):\n",
        "  for x in H:\n",
        "    for y in H:\n",
        "      if op_table[(x, y)] != op_table[(y, x)]:\n",
        "        return False\n",
        "  return True\n",
        "\n",
        "#Fungsi untuk mengecek identitas skalar\n",
        "def cek_identitas_skalar(H, op_table):\n",
        "    identitas = []\n",
        "    for x in H:\n",
        "        is_identitas = True  # Asumsikan x adalah identitas\n",
        "        for y in H:\n",
        "            if op_table[(x, y)] != {y} or op_table[(y, x)] != {y}:\n",
        "                is_identitas = False\n",
        "                break  # Jika satu kondisi gagal, x bukan identitas\n",
        "        if is_identitas:\n",
        "            identitas.append(x)\n",
        "    if len(identitas) == 1:\n",
        "        return True, identitas[0]\n",
        "    return False, None\n",
        "\n",
        "#Fungsi untuk mengecek hipergrup kanonik\n",
        "def cek_kanonik(H,op_table,semihipergrup,statiden,idenskalar,komutatif):\n",
        "  def invers_tunggal(H,op_table,idenskalar):\n",
        "    pasangan_invers = {}\n",
        "    for x in H:\n",
        "        invers_kandidat = []\n",
        "        for y in H:\n",
        "            if idenskalar in op_table[(x, y)] and idenskalar in op_table[(y, x)]:\n",
        "                invers_kandidat.append(y)\n",
        "        if len(invers_kandidat) != 1:\n",
        "            return False, {}\n",
        "        pasangan_invers[x] = invers_kandidat[0]\n",
        "    return True, pasangan_invers\n",
        "  tunggal, pasangan = invers_tunggal(H,op_table,idenskalar)\n",
        "  def cek_relasi_invers(H, op_table,pasangan):\n",
        "    for x in H:\n",
        "        for y in H:\n",
        "            hasil_xy = op_table.get((x, y), set())\n",
        "            for z in hasil_xy:\n",
        "                x_inv = pasangan.get(x)\n",
        "                y_inv = pasangan.get(y)\n",
        "                if y_inv is not None and y not in op_table.get((x_inv, z), set()):\n",
        "                    return False\n",
        "                if x_inv is not None and x not in op_table.get((z, y_inv), set()):\n",
        "                    return False\n",
        "    return True\n",
        "  relasi = cek_relasi_invers(H, op_table,pasangan)\n",
        "\n",
        "  if semihipergrup==True and komutatif==True and statiden==True and tunggal==True and relasi==True:\n",
        "    return True\n",
        "  return\n",
        "\n",
        "#Fungsi untuk mengecek identitas\n",
        "def cek_identitas(H, op_table):\n",
        "    identitas = []\n",
        "    for x in H:\n",
        "      simpan_x = []\n",
        "      for y in H:\n",
        "        cek_iden = set()\n",
        "        cek_iden.update(op_table[(x, y)])\n",
        "        if y in cek_iden:\n",
        "          simpan_x.append(x)\n",
        "      if len(simpan_x) == len(H):\n",
        "        identitas.append(x)\n",
        "    if len(identitas) != 0:\n",
        "      return True, identitas\n",
        "    return False, []\n",
        "\n",
        "#Fungsi untuk mengecek invers\n",
        "def cek_invers(H, op_table, identitas):\n",
        "  for x in identitas:\n",
        "    simpan_y = []\n",
        "    for y in H:\n",
        "      cek_invers = set()\n",
        "      cek_invers.update(op_table[(x, y)])\n",
        "      if x in cek_invers:\n",
        "        simpan_y.append(y)\n",
        "    if len(simpan_y) == 0:\n",
        "      return False\n",
        "  return True\n",
        "\n",
        "#Fungsi untuk mengecek hiperstruktur reguler\n",
        "def cek_reguler(identitas,invers,hipergrup):\n",
        "  if identitas==True and invers==True and hipergrup==True:\n",
        "    return True\n",
        "  return False\n",
        "\n",
        "# Fungsi untuk mengecek hipergrup siklik\n",
        "def cek_hipergrup_siklik(H, op_table,hipergrup):\n",
        "    generators = []  # Daftar untuk menyimpan semua generator beserta derajatnya\n",
        "\n",
        "    for h in H:\n",
        "        hasil = set([h])  # Mulai dengan elemen h\n",
        "        elemen_sebelumnya = set([h])  # Untuk memeriksa elemen yang dihasilkan\n",
        "        s = 1  # Pangkat awal\n",
        "        while len(hasil) < len(H) and s <= len(H):\n",
        "            s += 1\n",
        "            elemen_baru = set()\n",
        "            for x in elemen_sebelumnya:\n",
        "                elemen_baru.update(op_table[(x, h)])  # Operasikan dengan h\n",
        "\n",
        "            hasil.update(elemen_baru)  # Tambahkan hasil ke himpunan utama\n",
        "            elemen_sebelumnya = elemen_baru  # Perbarui elemen sebelumnya\n",
        "\n",
        "            # Cek apakah himpunan hasil sudah mencapai H\n",
        "            if hasil == set(H):\n",
        "                # Cek kondisi subset: h ∪ h^2 ∪ ···∪ h^(m−1) ⊆ h^m\n",
        "                subset_valid = True\n",
        "                for m in range(2, 1000):\n",
        "                    if not elemen_sebelumnya.issubset(op_table.get((h, h), set())):\n",
        "                        subset_valid = False\n",
        "                        break\n",
        "                # Jika kondisi subset terpenuhi, berarti h adalah generator\n",
        "                if subset_valid:\n",
        "                    generators.append((h, s))  # Menyimpan generator dan derajatnya\n",
        "                break  # Lanjutkan ke elemen berikutnya setelah menemukan generator\n",
        "    if generators and hipergrup==True:\n",
        "        return True, generators  # Kembalikan semua generator dan derajatnya\n",
        "    else:\n",
        "        return False, None\n",
        "\n",
        "#Fungsi untuk mengecek idempoten\n",
        "def cek_idempoten(H, op_table):\n",
        "  idempoten = []\n",
        "  for x in H:\n",
        "    if op_table[(x, x)] == {x}:\n",
        "      idempoten.append(x)\n",
        "  if len(idempoten) != 0:\n",
        "    return True, idempoten\n",
        "  return False, []\n",
        "\n",
        "#Fungsi subset H\n",
        "def cek_stabilitas_subset(subset, op_table):\n",
        "    for x in subset:\n",
        "        for y in subset:\n",
        "            if (x, y) in op_table:\n",
        "                if not op_table[(x, y)].issubset(subset):\n",
        "                    return False\n",
        "    return True\n",
        "\n",
        "#Subset stabil H\n",
        "def cari_subset_stabil(H, op_table):\n",
        "    subset_stabil = []\n",
        "    # Periksa semua subset (termasuk himpunan kosong dan H itu sendiri)\n",
        "    for i in range(len(H) + 1):\n",
        "        for subset in itertools.combinations(H, i):\n",
        "            subset_set = set(subset)\n",
        "            if cek_stabilitas_subset(subset_set, op_table):\n",
        "                subset_stabil.append(subset_set)\n",
        "    subset_stabil = [s for s in subset_stabil if s]\n",
        "    return subset_stabil\n",
        "\n",
        "#Fungsi untuk mengecek subhipergrup H\n",
        "def cek_subhipergrup(subset_stabil, op_table,hipergrup):\n",
        "  subhipergrup = []\n",
        "  for K in subset_stabil:\n",
        "    a_otimes_K = set()\n",
        "    for x in K:\n",
        "        # Hitung a ⊗ K\n",
        "        for a in K:\n",
        "            a_otimes_K.update(op_table[(x, a)])\n",
        "        # Hitung K ⊗ a\n",
        "        K_otimes_a = set()\n",
        "        for a in K:\n",
        "            K_otimes_a.update(op_table[(a, x)])\n",
        "        # Cek apakah hasilnya sama dengan H\n",
        "    if a_otimes_K == K and K_otimes_a == K:\n",
        "      subhipergrup.append(K)\n",
        "  if len(subhipergrup) != 0 and hipergrup==True:\n",
        "    return True, subhipergrup\n",
        "  return False, []\n",
        "\n",
        "#Fungsi untuk mengecek subhipergrup normal H\n",
        "def cek_subnormal(H,subhipergrup, op_table,hipergrup):\n",
        "  subnormal = []\n",
        "  for K in subset_stabil:\n",
        "    a_otimes_K = set()\n",
        "    for x in K:\n",
        "        # Hitung a ⊗ K\n",
        "        for a in H:\n",
        "            a_otimes_K.update(op_table[(x, a)])\n",
        "        # Hitung K ⊗ a\n",
        "        K_otimes_a = set()\n",
        "        for a in H:\n",
        "            K_otimes_a.update(op_table[(a, x)])\n",
        "        # Cek apakah hasilnya sama dengan H\n",
        "    if a_otimes_K == K and K_otimes_a == K:\n",
        "      subnormal.append(K)\n",
        "  if len(subnormal) != 0 and hipergrup==True:\n",
        "    return True, subnormal\n",
        "  return False, []\n",
        "\n",
        "#Fungsi untuk mengecek subset linier H\n",
        "def subset_linier(H,subset_stabil, op_table,hipergrup):\n",
        "  def cek1(subset_stabil,op_table):\n",
        "    sublin1 = []\n",
        "    for M in subset_stabil:\n",
        "      simpan_xy = set()\n",
        "      for x in M:\n",
        "        for y in M:\n",
        "          simpan_xy.update(op_table[(x, y)])\n",
        "      if simpan_xy.issubset(M):\n",
        "        sublin1.append(M)\n",
        "    if len(sublin1) != 0:\n",
        "      return True, sublin1\n",
        "    return False, []\n",
        "  def cek2(H,subset_stabil,op_table):\n",
        "    sublin2 = []\n",
        "    for M in subset_stabil:\n",
        "      simpan_z = []\n",
        "      for z in H:\n",
        "        simpan_zy = set()\n",
        "        for y in M:\n",
        "          op_table[(z,y)]\n",
        "          simpan_zy.update(op_table[(z,y)])\n",
        "        if all(x in simpan_zy for x in M):\n",
        "          simpan_z.append(z)\n",
        "      if set(simpan_z).issubset(M):\n",
        "        sublin2.append(M)\n",
        "    if len(sublin2) != 0:\n",
        "      return True, sublin2\n",
        "    return False, []\n",
        "  status1, sublin1 = cek1(subset_stabil, op_table)\n",
        "  status2, sublin2 = cek2(H, subset_stabil, op_table)\n",
        "  if status1==True and status2==True and hipergrup==True:\n",
        "    sublin = [M for M in sublin1 if M in sublin2]\n",
        "    return True, sublin\n",
        "  return False, []"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Proposisi 4.1"
      ],
      "metadata": {
        "id": "omSkt5Xdc1pw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import itertools\n",
        "# Himpunan H\n",
        "H = ['A1','A2','A3','A4']\n",
        "\n",
        "# Tabel operasi manual\n",
        "op_table = {\n",
        "    ('A1', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A1', 'A2'): {'A1','A2','A3','A4'},\n",
        "    ('A1', 'A3'): {'A1','A2','A3','A4'},\n",
        "    ('A1', 'A4'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A2'): {'A2','A4'},\n",
        "    ('A2', 'A3'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A4'): {'A2','A4'},\n",
        "    ('A3', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A3', 'A2'): {'A1','A2','A3','A4'},\n",
        "    ('A3', 'A3'): {'A3','A4'},\n",
        "    ('A3', 'A4'): {'A3','A4'},\n",
        "    ('A4', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A4', 'A2'): {'A2','A4'},\n",
        "    ('A4', 'A3'): {'A3','A4'},\n",
        "    ('A4', 'A4'): {'A4'}\n",
        "}\n",
        "\n",
        "# Periksa hiperstruktur aljabar dan sifat-sifatnya\n",
        "semihipergrup = cek_semihipergrup(H, op_table)\n",
        "if semihipergrup==True:\n",
        "    print(\"(H,⊗^H) adalah semihipergrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan semihipergrup\")\n",
        "\n",
        "hvsemigrup = cek_hvsemigrup(H, op_table,semihipergrup)\n",
        "if hvsemigrup==True:\n",
        "    print(\"(H,⊗^H) adalah hvsemigrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan hvsemigrup\")\n",
        "\n",
        "kuasihipergrup = cek_kuasihipergrup(H, op_table)\n",
        "if kuasihipergrup==True:\n",
        "    print(\"(H,⊗^H) adalah kuasihipergrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan kuasihipergrup\")\n",
        "\n",
        "hipergrup = cek_hipergrup(semihipergrup, kuasihipergrup)\n",
        "if hipergrup==True:\n",
        "    print(\"(H,⊗^H) adalah hipergrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan hipergrup\")\n",
        "\n",
        "komutatif = cek_komutatif(H, op_table)\n",
        "if komutatif==True:\n",
        "    print(\"(H,⊗^H) bersifat komutatif\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak bersifat komutatif\")\n",
        "\n",
        "idenskalar, data1 = cek_identitas_skalar(H, op_table)\n",
        "if idenskalar==True:\n",
        "    print(f\"Identitas skalar dari (H,⊗^H) = {data1}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak memiliki identitas skalar\")\n",
        "\n",
        "kanonik = cek_kanonik(H,op_table,semihipergrup,idenskalar,data1,komutatif)\n",
        "if kanonik==True:\n",
        "    print(\"(H,⊗^H) adalah hipergrup kanonik\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan hipergrup kanonik\")\n",
        "\n",
        "identitas, data2 = cek_identitas(H, op_table)\n",
        "if identitas==True:\n",
        "    print(f\"Identitas dari (H,⊗^H) = {data2}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak memiliki identitas\")\n",
        "\n",
        "invers = cek_invers(H, op_table, data2)\n",
        "reguler = cek_reguler(identitas,invers,hipergrup)\n",
        "if reguler==True:\n",
        "    print(\"(H,⊗^H) adalah hipergrup reguler\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan hipergrup reguler\")\n",
        "\n",
        "siklik, generator = cek_hipergrup_siklik(H, op_table,hipergrup)\n",
        "if siklik==True:\n",
        "    print(f\"(H,⊗^H) adalah hipergrup siklik dengan elemen generator dan derajatnya {generator}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan hipergrup siklik.\")\n",
        "\n",
        "idempoten, data3 = cek_idempoten(H, op_table)\n",
        "if idempoten==True:\n",
        "    print(f\"Elemen idempoten dari (H,⊗^H) = {data3}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak memiliki elemen idempoten\")\n",
        "\n",
        "subset_stabil = cari_subset_stabil(H, op_table)\n",
        "subhipergrup, data4 = cek_subhipergrup(subset_stabil, op_table,hipergrup)\n",
        "if subhipergrup==True:\n",
        "    print(f\"Subhipergrup dari (H,⊗^H) berjumlah {len(data4)} yaitu = {data4}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak memiliki subhipergrup\")\n",
        "\n",
        "subnormal, data5 = cek_subnormal(H,subhipergrup, op_table,hipergrup)\n",
        "if subnormal==True:\n",
        "    print(f\"Subhipergrup normal dari (H,⊗^H) berjumlah {len(data5)} yaitu = {data5}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak memiliki subhipergrup normal\")\n",
        "\n",
        "sublin, data6 = subset_linier(H,subset_stabil, op_table,hipergrup)\n",
        "if sublin==True:\n",
        "    print(f\"Subset linier dari (H,⊗^H) berjumlah {len(data6)} yaitu = {data6}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) tidak memiliki subset linier\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2ZHbGi0WYipx",
        "outputId": "1893ae06-d7f7-4cad-a392-54ed5cf92425"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(A1 ⊗ A1) ⊗ A1 = A1 ⊗ (A1 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A1 ⊗ A1) ⊗ A2 = A1 ⊗ (A1 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A1) ⊗ A3 = A1 ⊗ (A1 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A1) ⊗ A4 = A1 ⊗ (A1 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A1 = A1 ⊗ (A2 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A1 ⊗ A2) ⊗ A2 = A1 ⊗ (A2 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A3 = A1 ⊗ (A2 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A4 = A1 ⊗ (A2 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A3) ⊗ A1 = A1 ⊗ (A3 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A1 ⊗ A3) ⊗ A2 = A1 ⊗ (A3 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A3) ⊗ A3 = A1 ⊗ (A3 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A3) ⊗ A4 = A1 ⊗ (A3 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A4) ⊗ A1 = A1 ⊗ (A4 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A1 ⊗ A4) ⊗ A2 = A1 ⊗ (A4 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A4) ⊗ A3 = A1 ⊗ (A4 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A4) ⊗ A4 = A1 ⊗ (A4 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A1 = A2 ⊗ (A1 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A2 ⊗ A1) ⊗ A2 = A2 ⊗ (A1 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A3 = A2 ⊗ (A1 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A4 = A2 ⊗ (A1 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A1 = A2 ⊗ (A2 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A2 ⊗ A2) ⊗ A2 = A2 ⊗ (A2 ⊗ A2) = {'A4', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A3 = A2 ⊗ (A2 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A4 = A2 ⊗ (A2 ⊗ A4) = {'A4', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A1 = A2 ⊗ (A3 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A2 ⊗ A3) ⊗ A2 = A2 ⊗ (A3 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A3 = A2 ⊗ (A3 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A4 = A2 ⊗ (A3 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A1 = A2 ⊗ (A4 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A2 ⊗ A4) ⊗ A2 = A2 ⊗ (A4 ⊗ A2) = {'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A3 = A2 ⊗ (A4 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A4 = A2 ⊗ (A4 ⊗ A4) = {'A4', 'A2'}\n",
            "(A3 ⊗ A1) ⊗ A1 = A3 ⊗ (A1 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A3 ⊗ A1) ⊗ A2 = A3 ⊗ (A1 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A1) ⊗ A3 = A3 ⊗ (A1 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A1) ⊗ A4 = A3 ⊗ (A1 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A1 = A3 ⊗ (A2 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A3 ⊗ A2) ⊗ A2 = A3 ⊗ (A2 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A3 = A3 ⊗ (A2 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A4 = A3 ⊗ (A2 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A3) ⊗ A1 = A3 ⊗ (A3 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A3 ⊗ A3) ⊗ A2 = A3 ⊗ (A3 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A3) ⊗ A3 = A3 ⊗ (A3 ⊗ A3) = {'A4', 'A3'}\n",
            "(A3 ⊗ A3) ⊗ A4 = A3 ⊗ (A3 ⊗ A4) = {'A4', 'A3'}\n",
            "(A3 ⊗ A4) ⊗ A1 = A3 ⊗ (A4 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A3 ⊗ A4) ⊗ A2 = A3 ⊗ (A4 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A3 ⊗ A4) ⊗ A3 = A3 ⊗ (A4 ⊗ A3) = {'A4', 'A3'}\n",
            "(A3 ⊗ A4) ⊗ A4 = A3 ⊗ (A4 ⊗ A4) = {'A4', 'A3'}\n",
            "(A4 ⊗ A1) ⊗ A1 = A4 ⊗ (A1 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A4 ⊗ A1) ⊗ A2 = A4 ⊗ (A1 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A1) ⊗ A3 = A4 ⊗ (A1 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A1) ⊗ A4 = A4 ⊗ (A1 ⊗ A4) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A1 = A4 ⊗ (A2 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A4 ⊗ A2) ⊗ A2 = A4 ⊗ (A2 ⊗ A2) = {'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A3 = A4 ⊗ (A2 ⊗ A3) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A4 = A4 ⊗ (A2 ⊗ A4) = {'A4', 'A2'}\n",
            "(A4 ⊗ A3) ⊗ A1 = A4 ⊗ (A3 ⊗ A1) = {'A3', 'A4', 'A2', 'A1'}\n",
            "(A4 ⊗ A3) ⊗ A2 = A4 ⊗ (A3 ⊗ A2) = {'A3', 'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A3) ⊗ A3 = A4 ⊗ (A3 ⊗ A3) = {'A4', 'A3'}\n",
            "(A4 ⊗ A3) ⊗ A4 = A4 ⊗ (A3 ⊗ A4) = {'A4', 'A3'}\n",
            "(A4 ⊗ A4) ⊗ A1 = A4 ⊗ (A4 ⊗ A1) = {'A4', 'A3', 'A2', 'A1'}\n",
            "(A4 ⊗ A4) ⊗ A2 = A4 ⊗ (A4 ⊗ A2) = {'A4', 'A2'}\n",
            "(A4 ⊗ A4) ⊗ A3 = A4 ⊗ (A4 ⊗ A3) = {'A4', 'A3'}\n",
            "(A4 ⊗ A4) ⊗ A4 = A4 ⊗ (A4 ⊗ A4) = {'A4'}\n",
            "(H,⊗^H) adalah semihipergrup\n",
            "(H,⊗^H) adalah hvsemigrup\n",
            "(H,⊗^H) adalah kuasihipergrup\n",
            "(H,⊗^H) adalah hipergrup\n",
            "(H,⊗^H) bersifat komutatif\n",
            "(H,⊗^H) tidak memiliki identitas skalar\n",
            "(H,⊗^H) bukan hipergrup kanonik\n",
            "Identitas dari (H,⊗^H) = ['A1', 'A2', 'A3', 'A4']\n",
            "(H,⊗^H) adalah hipergrup reguler\n",
            "(H,⊗^H) adalah hipergrup siklik dengan elemen generator dan derajatnya [('A1', 2)]\n",
            "Elemen idempotent dari (H,⊗^H) = ['A4']\n",
            "Subhipergrup dari (H,⊗^H) berjumlah 4 yaitu = [{'A4'}, {'A4', 'A2'}, {'A4', 'A3'}, {'A4', 'A3', 'A2', 'A1'}]\n",
            "Subhipergrup normal dari (H,⊗^H) berjumlah 1 yaitu = [{'A4', 'A3', 'A2', 'A1'}]\n",
            "Subset linier dari (H,⊗^H) berjumlah 1 yaitu = [{'A4', 'A3', 'A2', 'A1'}]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Proposisi 4.2"
      ],
      "metadata": {
        "id": "TgpesDjpYe62"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import itertools\n",
        "# Himpunan H\n",
        "H = ['A1','A2','A3','A4']\n",
        "\n",
        "# Tabel operasi manual\n",
        "op_table = {\n",
        "    ('A1', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A1', 'A2'): {'A1','A2','A3','A4'},\n",
        "    ('A1', 'A3'): {'A1','A2','A3','A4'},\n",
        "    ('A1', 'A4'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A2'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A3'): {'A1','A2','A3','A4'},\n",
        "    ('A2', 'A4'): {'A1','A2','A3','A4'},\n",
        "    ('A3', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A3', 'A2'): {'A1','A2','A3','A4'},\n",
        "    ('A3', 'A3'): {'A1','A2','A3','A4'},\n",
        "    ('A3', 'A4'): {'A1','A2','A3','A4'},\n",
        "    ('A4', 'A1'): {'A1','A2','A3','A4'},\n",
        "    ('A4', 'A2'): {'A1','A2','A3','A4'},\n",
        "    ('A4', 'A3'): {'A1','A2','A3','A4'},\n",
        "    ('A4', 'A4'): {'A1','A2','A3','A4'}\n",
        "}\n",
        "\n",
        "# Periksa hiperstruktur aljabar dan sifat-sifatnya\n",
        "hvsemigrup = cek_hvsemigrup(H, op_table)\n",
        "semihipergrup = cek_semihipergrup(H, op_table)\n",
        "quasihipergrup = cek_quasihipergrup(H, op_table)\n",
        "hipergrup = cek_hipergrup(semihipergrup, quasihipergrup)\n",
        "komutatif = cek_komutatif(H, op_table)\n",
        "idenskalar, data1 = cek_identitas_skalar(H, op_table)\n",
        "kanonik = cek_kanonik(H,op_table,semihipergrup,idenskalar,data1,komutatif)\n",
        "identitas, data2 = cek_identitas(H, op_table)\n",
        "invers = cek_invers(H, op_table, data2)\n",
        "reguler = cek_reguler(identitas,invers,hipergrup)\n",
        "siklik, generator= cek_hipergrup_siklik(H, op_table,hipergrup)\n",
        "idempoten, data3 = cek_idempoten(H, op_table)\n",
        "subset_stabil = cari_subset_stabil(H, op_table)\n",
        "subhipergrup, data4 = cek_subhipergrup(subset_stabil, op_table,hipergrup)\n",
        "subnormal, data5 = cek_subnormal(H,subhipergrup, op_table,hipergrup)\n",
        "sublin, data6 = subset_linier(H,subset_stabil, op_table,hipergrup)\n",
        "\n",
        "if hvsemigrup==True:\n",
        "    print(\"(H,⊗^H') adalah hvsemigrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') bukan hvsemigrup\")\n",
        "if semihipergrup==True:\n",
        "    print(\"(H,⊗^H') adalah semihipergrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') bukan semihipergrup\")\n",
        "if quasihipergrup==True:\n",
        "    print(\"(H,⊗^H') adalah quasihipergrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') bukan quasihipergrup\")\n",
        "if hipergrup==True:\n",
        "    print(\"(H,⊗^H') adalah hipergrup\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') bukan hipergrup\")\n",
        "if komutatif==True:\n",
        "    print(\"(H,⊗^H') bersifat komutatif\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak bersifat komutatif\")\n",
        "if idenskalar==True:\n",
        "    print(f\"Identitas skalar dari (H,⊗^H') = {data1}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak memiliki identitas skalar\")\n",
        "if kanonik==True:\n",
        "    print(\"(H,⊗^H') adalah hipergrup kanonik\")\n",
        "else:\n",
        "    print(\"(H,⊗^H) bukan hipergrup kanonik\")\n",
        "if identitas==True:\n",
        "    print(f\"Identitas dari (H,⊗^H') = {data2}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak memiliki identitas\")\n",
        "if reguler==True:\n",
        "    print(\"(H,⊗^H') adalah hipergrup reguler\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') bukan hipergrup reguler\")\n",
        "if siklik==True:\n",
        "    print(f\"(H,⊗^H') adalah hipergrup siklik dengan elemen generator dan derajatnya {generator}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') bukan hipergrup siklik.\")\n",
        "if idempoten==True:\n",
        "    print(f\"Elemen idempoten dari (H,⊗^H') = {data3}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak memiliki elemen idempoten\")\n",
        "if subhipergrup==True:\n",
        "    print(f\"Subhipergrup dari (H,⊗^H') berjumlah {len(data4)} yaitu = {data4}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak memiliki subhipergrup\")\n",
        "if subnormal==True:\n",
        "    print(f\"Subhipergrup normal dari (H,⊗^H') berjumlah {len(data5)} yaitu = {data5}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak memiliki subhipergrup normal\")\n",
        "if sublin==True:\n",
        "    print(f\"Subset linier dari (H,⊗^H') berjumlah {len(data6)} yaitu = {data6}\")\n",
        "else:\n",
        "    print(\"(H,⊗^H') tidak memiliki subset linier\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yPl6Kk5TahEL",
        "outputId": "ba0e401d-cfdb-49f2-b222-94aa3c4bf6f7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(H,⊗^H') adalah hvsemigrup\n",
            "(H,⊗^H') adalah semihipergrup\n",
            "(H,⊗^H') adalah quasihipergrup\n",
            "(H,⊗^H') adalah hipergrup\n",
            "(H,⊗^H') bersifat komutatif\n",
            "(H,⊗^H') tidak memiliki identitas skalar\n",
            "(H,⊗^H) bukan hipergrup kanonik\n",
            "Identitas dari (H,⊗^H') = ['A1', 'A2', 'A3', 'A4']\n",
            "(H,⊗^H') adalah hipergrup reguler\n",
            "(H,⊗^H') adalah hipergrup siklik dengan elemen generator dan derajatnya [('A1', 2), ('A2', 2), ('A3', 2), ('A4', 2)]\n",
            "(H,⊗^H') tidak memiliki elemen idempotent\n",
            "Subhipergrup dari (H,⊗^H') berjumlah 1 yaitu = [{'A4', 'A3', 'A2', 'A1'}]\n",
            "Subhipergrup normal dari (H,⊗^H') berjumlah 1 yaitu = [{'A4', 'A3', 'A2', 'A1'}]\n",
            "Subset linier dari (H,⊗^H') berjumlah 1 yaitu = [{'A4', 'A3', 'A2', 'A1'}]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Proposisi 4.3"
      ],
      "metadata": {
        "id": "TXZZw_Vsc8EX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Himpunan J\n",
        "J = ['A1','A2','A3','A4','A5','A6','A7']\n",
        "\n",
        "#Hiperoperasi\n",
        "op_table = {\n",
        "    ('A1', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A1', 'A2'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A1', 'A3'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A1', 'A4'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A1', 'A5'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A1', 'A6'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A1', 'A7'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A2', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A2', 'A2'): {'A2'},\n",
        "    ('A2', 'A3'): {'A2','A3'},\n",
        "    ('A2', 'A4'): {'A2','A4'},\n",
        "    ('A2', 'A5'): {'A2','A5'},\n",
        "    ('A2', 'A6'): {'A2','A6'},\n",
        "    ('A2', 'A7'): {'A2','A7'},\n",
        "    ('A3', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A3', 'A2'): {'A2','A3'},\n",
        "    ('A3', 'A3'): {'A3'},\n",
        "    ('A3', 'A4'): {'A3','A4'},\n",
        "    ('A3', 'A5'): {'A3','A5'},\n",
        "    ('A3', 'A6'): {'A3','A6'},\n",
        "    ('A3', 'A7'): {'A3','A7'},\n",
        "    ('A4', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A4', 'A2'): {'A2','A4'},\n",
        "    ('A4', 'A3'): {'A3','A4'},\n",
        "    ('A4', 'A4'): {'A4'},\n",
        "    ('A4', 'A5'): {'A4','A5'},\n",
        "    ('A4', 'A6'): {'A4','A6'},\n",
        "    ('A4', 'A7'): {'A4','A7'},\n",
        "    ('A5', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A5', 'A2'): {'A2','A5'},\n",
        "    ('A5', 'A3'): {'A3','A5'},\n",
        "    ('A5', 'A4'): {'A4','A5'},\n",
        "    ('A5', 'A5'): {'A5'},\n",
        "    ('A5', 'A6'): {'A5','A6'},\n",
        "    ('A5', 'A7'): {'A5','A7'},\n",
        "    ('A6', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A6', 'A2'): {'A2','A6'},\n",
        "    ('A6', 'A3'): {'A3','A6'},\n",
        "    ('A6', 'A4'): {'A4','A6'},\n",
        "    ('A6', 'A5'): {'A5','A6'},\n",
        "    ('A6', 'A6'): {'A6'},\n",
        "    ('A6', 'A7'): {'A6','A7'},\n",
        "    ('A7', 'A1'): {'A1','A2','A3','A4','A5','A6','A7'},\n",
        "    ('A7', 'A2'): {'A2','A7'},\n",
        "    ('A7', 'A3'): {'A3','A7'},\n",
        "    ('A7', 'A4'): {'A4','A7'},\n",
        "    ('A7', 'A5'): {'A5','A7'},\n",
        "    ('A7', 'A6'): {'A6','A7'},\n",
        "    ('A7', 'A7'): {'A7'}\n",
        "}\n",
        "\n",
        "# Periksa hiperstruktur aljabar dan sifat-sifatnya\n",
        "semihipergrup = cek_semihipergrup(J, op_table)\n",
        "if semihipergrup==True:\n",
        "    print(\"(J,⊗^J) adalah semihipergrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan semihipergrup\")\n",
        "\n",
        "hvsemigrup = cek_hvsemigrup(J, op_table,semihipergrup)\n",
        "if hvsemigrup==True:\n",
        "    print(\"(J,⊗^J) adalah hvsemigrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan hvsemigrup\")\n",
        "\n",
        "kuasihipergrup = cek_kuasihipergrup(J, op_table)\n",
        "if kuasihipergrup==True:\n",
        "    print(\"(J,⊗^J) adalah quasihipergrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan quasihipergrup\")\n",
        "\n",
        "hipergrup = cek_hipergrup(semihipergrup, kuasihipergrup)\n",
        "if hipergrup==True:\n",
        "    print(\"(J,⊗^J) adalah hipergrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan hipergrup\")\n",
        "\n",
        "komutatif = cek_komutatif(J, op_table)\n",
        "if komutatif==True:\n",
        "    print(\"(J,⊗^J) bersifat komutatif\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak bersifat komutatif\")\n",
        "\n",
        "idenskalar, data1 = cek_identitas_skalar(J, op_table)\n",
        "if idenskalar==True:\n",
        "    print(f\"Identitas skalar dari (J,⊗^J) = {data1}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak memiliki identitas skalar\")\n",
        "\n",
        "kanonik = cek_kanonik(J,op_table,semihipergrup,idenskalar,data1,komutatif)\n",
        "if kanonik==True:\n",
        "    print(\"(J,⊗^J) adalah hipergrup kanonik\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan hipergrup kanonik\")\n",
        "\n",
        "identitas, data2 = cek_identitas(J, op_table)\n",
        "if identitas==True:\n",
        "    print(f\"Identitas dari (J,⊗^J) = {data2}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak memiliki identitas\")\n",
        "\n",
        "invers = cek_invers(J, op_table, data2)\n",
        "reguler = cek_reguler(identitas,invers,hipergrup)\n",
        "if reguler==True:\n",
        "    print(\"(J,⊗^J) adalah hipergrup reguler\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan hipergrup reguler\")\n",
        "\n",
        "siklik, generator= cek_hipergrup_siklik(J, op_table,hipergrup)\n",
        "if siklik==True:\n",
        "    print(f\"(J,⊗^J) adalah hipergrup siklik dengan elemen generator dan derajatnya {generator}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) bukan hipergrup siklik.\")\n",
        "\n",
        "idempoten, data3 = cek_idempoten(J, op_table)\n",
        "if idempoten==True:\n",
        "    print(f\"Elemen idempoten dari (J,⊗^J) = {data3}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak memiliki elemen idempoten\")\n",
        "\n",
        "subset_stabil = cari_subset_stabil(J, op_table)\n",
        "subhipergrup, data4 = cek_subhipergrup(subset_stabil, op_table,hipergrup)\n",
        "if subhipergrup==True:\n",
        "    print(f\"Subhipergrup dari (J,⊗^J) berjumlah {len(data4)} yaitu = {data4}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak memiliki subhipergrup\")\n",
        "\n",
        "subnormal, data5 = cek_subnormal(J,subhipergrup, op_table,hipergrup)\n",
        "if subnormal==True:\n",
        "    print(f\"Subhipergrup normal dari (J,⊗^J) berjumlah {len(data5)} yaitu = {data5}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak memiliki subhipergrup normal\")\n",
        "\n",
        "sublin, data6 = subset_linier(J,subset_stabil, op_table,hipergrup)\n",
        "if sublin==True:\n",
        "    print(f\"Subset linier dari (J,⊗^J) berjumlah {len(data6)} yaitu = {data6}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J) tidak memiliki subset linier\")"
      ],
      "metadata": {
        "id": "npzFGvNwc9ST",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fb549f95-8e60-4543-b6d6-87c3d724c25a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(A1 ⊗ A1) ⊗ A1 = A1 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A2 = A1 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A3 = A1 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A4 = A1 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A5 = A1 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A6 = A1 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A7 = A1 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A1 = A1 ⊗ (A2 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A2 = A1 ⊗ (A2 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A3 = A1 ⊗ (A2 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A4 = A1 ⊗ (A2 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A5 = A1 ⊗ (A2 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A6 = A1 ⊗ (A2 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A2) ⊗ A7 = A1 ⊗ (A2 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A1 = A1 ⊗ (A3 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A2 = A1 ⊗ (A3 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A3 = A1 ⊗ (A3 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A4 = A1 ⊗ (A3 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A5 = A1 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A6 = A1 ⊗ (A3 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A3) ⊗ A7 = A1 ⊗ (A3 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A1 = A1 ⊗ (A4 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A2 = A1 ⊗ (A4 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A3 = A1 ⊗ (A4 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A4 = A1 ⊗ (A4 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A5 = A1 ⊗ (A4 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A6 = A1 ⊗ (A4 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A7 = A1 ⊗ (A4 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A1 = A1 ⊗ (A5 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A2 = A1 ⊗ (A5 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A3 = A1 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A4 = A1 ⊗ (A5 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A5 = A1 ⊗ (A5 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A6 = A1 ⊗ (A5 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A5) ⊗ A7 = A1 ⊗ (A5 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A1 = A1 ⊗ (A6 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A2 = A1 ⊗ (A6 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A3 = A1 ⊗ (A6 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A4 = A1 ⊗ (A6 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A5 = A1 ⊗ (A6 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A6 = A1 ⊗ (A6 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A6) ⊗ A7 = A1 ⊗ (A6 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A1 = A1 ⊗ (A7 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A2 = A1 ⊗ (A7 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A3 = A1 ⊗ (A7 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A4 = A1 ⊗ (A7 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A5 = A1 ⊗ (A7 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A6 = A1 ⊗ (A7 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A1 ⊗ A7) ⊗ A7 = A1 ⊗ (A7 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A1 = A2 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A2 = A2 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A3 = A2 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A4 = A2 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A5 = A2 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A6 = A2 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A1) ⊗ A7 = A2 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A2) ⊗ A1 = A2 ⊗ (A2 ⊗ A1) = {'A5', 'A4', 'A6', 'A1', 'A3', 'A2', 'A7'}\n",
            "(A2 ⊗ A2) ⊗ A2 = A2 ⊗ (A2 ⊗ A2) = {'A2'}\n",
            "(A2 ⊗ A2) ⊗ A3 = A2 ⊗ (A2 ⊗ A3) = {'A3', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A4 = A2 ⊗ (A2 ⊗ A4) = {'A4', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A5 = A2 ⊗ (A2 ⊗ A5) = {'A5', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A6 = A2 ⊗ (A2 ⊗ A6) = {'A2', 'A6'}\n",
            "(A2 ⊗ A2) ⊗ A7 = A2 ⊗ (A2 ⊗ A7) = {'A2', 'A7'}\n",
            "(A2 ⊗ A3) ⊗ A1 = A2 ⊗ (A3 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A3) ⊗ A2 = A2 ⊗ (A3 ⊗ A2) = {'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A3 = A2 ⊗ (A3 ⊗ A3) = {'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A4 = A2 ⊗ (A3 ⊗ A4) = {'A3', 'A4', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A5 = A2 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A6 = A2 ⊗ (A3 ⊗ A6) = {'A3', 'A2', 'A6'}\n",
            "(A2 ⊗ A3) ⊗ A7 = A2 ⊗ (A3 ⊗ A7) = {'A3', 'A2', 'A7'}\n",
            "(A2 ⊗ A4) ⊗ A1 = A2 ⊗ (A4 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A4) ⊗ A2 = A2 ⊗ (A4 ⊗ A2) = {'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A3 = A2 ⊗ (A4 ⊗ A3) = {'A3', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A4 = A2 ⊗ (A4 ⊗ A4) = {'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A5 = A2 ⊗ (A4 ⊗ A5) = {'A5', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A6 = A2 ⊗ (A4 ⊗ A6) = {'A4', 'A2', 'A6'}\n",
            "(A2 ⊗ A4) ⊗ A7 = A2 ⊗ (A4 ⊗ A7) = {'A4', 'A2', 'A7'}\n",
            "(A2 ⊗ A5) ⊗ A1 = A2 ⊗ (A5 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A5) ⊗ A2 = A2 ⊗ (A5 ⊗ A2) = {'A5', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A3 = A2 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A4 = A2 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A5 = A2 ⊗ (A5 ⊗ A5) = {'A5', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A6 = A2 ⊗ (A5 ⊗ A6) = {'A5', 'A2', 'A6'}\n",
            "(A2 ⊗ A5) ⊗ A7 = A2 ⊗ (A5 ⊗ A7) = {'A5', 'A2', 'A7'}\n",
            "(A2 ⊗ A6) ⊗ A1 = A2 ⊗ (A6 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A6) ⊗ A2 = A2 ⊗ (A6 ⊗ A2) = {'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A3 = A2 ⊗ (A6 ⊗ A3) = {'A3', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A4 = A2 ⊗ (A6 ⊗ A4) = {'A4', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A5 = A2 ⊗ (A6 ⊗ A5) = {'A5', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A6 = A2 ⊗ (A6 ⊗ A6) = {'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A7 = A2 ⊗ (A6 ⊗ A7) = {'A6', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A1 = A2 ⊗ (A7 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A2 ⊗ A7) ⊗ A2 = A2 ⊗ (A7 ⊗ A2) = {'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A3 = A2 ⊗ (A7 ⊗ A3) = {'A3', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A4 = A2 ⊗ (A7 ⊗ A4) = {'A4', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A5 = A2 ⊗ (A7 ⊗ A5) = {'A5', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A6 = A2 ⊗ (A7 ⊗ A6) = {'A7', 'A2', 'A6'}\n",
            "(A2 ⊗ A7) ⊗ A7 = A2 ⊗ (A7 ⊗ A7) = {'A2', 'A7'}\n",
            "(A3 ⊗ A1) ⊗ A1 = A3 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A1) ⊗ A2 = A3 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A1) ⊗ A3 = A3 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A1) ⊗ A4 = A3 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A1) ⊗ A5 = A3 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A1) ⊗ A6 = A3 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A1) ⊗ A7 = A3 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A2) ⊗ A1 = A3 ⊗ (A2 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A2) ⊗ A2 = A3 ⊗ (A2 ⊗ A2) = {'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A3 = A3 ⊗ (A2 ⊗ A3) = {'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A4 = A3 ⊗ (A2 ⊗ A4) = {'A3', 'A4', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A5 = A3 ⊗ (A2 ⊗ A5) = {'A5', 'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A6 = A3 ⊗ (A2 ⊗ A6) = {'A3', 'A2', 'A6'}\n",
            "(A3 ⊗ A2) ⊗ A7 = A3 ⊗ (A2 ⊗ A7) = {'A3', 'A2', 'A7'}\n",
            "(A3 ⊗ A3) ⊗ A1 = A3 ⊗ (A3 ⊗ A1) = {'A5', 'A4', 'A6', 'A1', 'A3', 'A2', 'A7'}\n",
            "(A3 ⊗ A3) ⊗ A2 = A3 ⊗ (A3 ⊗ A2) = {'A3', 'A2'}\n",
            "(A3 ⊗ A3) ⊗ A3 = A3 ⊗ (A3 ⊗ A3) = {'A3'}\n",
            "(A3 ⊗ A3) ⊗ A4 = A3 ⊗ (A3 ⊗ A4) = {'A3', 'A4'}\n",
            "(A3 ⊗ A3) ⊗ A5 = A3 ⊗ (A3 ⊗ A5) = {'A5', 'A3'}\n",
            "(A3 ⊗ A3) ⊗ A6 = A3 ⊗ (A3 ⊗ A6) = {'A3', 'A6'}\n",
            "(A3 ⊗ A3) ⊗ A7 = A3 ⊗ (A3 ⊗ A7) = {'A3', 'A7'}\n",
            "(A3 ⊗ A4) ⊗ A1 = A3 ⊗ (A4 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A2 = A3 ⊗ (A4 ⊗ A2) = {'A3', 'A4', 'A2'}\n",
            "(A3 ⊗ A4) ⊗ A3 = A3 ⊗ (A4 ⊗ A3) = {'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A4 = A3 ⊗ (A4 ⊗ A4) = {'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A5 = A3 ⊗ (A4 ⊗ A5) = {'A5', 'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A6 = A3 ⊗ (A4 ⊗ A6) = {'A3', 'A4', 'A6'}\n",
            "(A3 ⊗ A4) ⊗ A7 = A3 ⊗ (A4 ⊗ A7) = {'A3', 'A4', 'A7'}\n",
            "(A3 ⊗ A5) ⊗ A1 = A3 ⊗ (A5 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A5) ⊗ A2 = A3 ⊗ (A5 ⊗ A2) = {'A5', 'A3', 'A2'}\n",
            "(A3 ⊗ A5) ⊗ A3 = A3 ⊗ (A5 ⊗ A3) = {'A5', 'A3'}\n",
            "(A3 ⊗ A5) ⊗ A4 = A3 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A3'}\n",
            "(A3 ⊗ A5) ⊗ A5 = A3 ⊗ (A5 ⊗ A5) = {'A5', 'A3'}\n",
            "(A3 ⊗ A5) ⊗ A6 = A3 ⊗ (A5 ⊗ A6) = {'A5', 'A3', 'A6'}\n",
            "(A3 ⊗ A5) ⊗ A7 = A3 ⊗ (A5 ⊗ A7) = {'A5', 'A3', 'A7'}\n",
            "(A3 ⊗ A6) ⊗ A1 = A3 ⊗ (A6 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A6) ⊗ A2 = A3 ⊗ (A6 ⊗ A2) = {'A3', 'A2', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A3 = A3 ⊗ (A6 ⊗ A3) = {'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A4 = A3 ⊗ (A6 ⊗ A4) = {'A3', 'A4', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A5 = A3 ⊗ (A6 ⊗ A5) = {'A5', 'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A6 = A3 ⊗ (A6 ⊗ A6) = {'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A7 = A3 ⊗ (A6 ⊗ A7) = {'A3', 'A6', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A1 = A3 ⊗ (A7 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A3 ⊗ A7) ⊗ A2 = A3 ⊗ (A7 ⊗ A2) = {'A3', 'A2', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A3 = A3 ⊗ (A7 ⊗ A3) = {'A3', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A4 = A3 ⊗ (A7 ⊗ A4) = {'A3', 'A4', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A5 = A3 ⊗ (A7 ⊗ A5) = {'A5', 'A3', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A6 = A3 ⊗ (A7 ⊗ A6) = {'A3', 'A7', 'A6'}\n",
            "(A3 ⊗ A7) ⊗ A7 = A3 ⊗ (A7 ⊗ A7) = {'A3', 'A7'}\n",
            "(A4 ⊗ A1) ⊗ A1 = A4 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A2 = A4 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A3 = A4 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A4 = A4 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A5 = A4 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A6 = A4 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A7 = A4 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A2) ⊗ A1 = A4 ⊗ (A2 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A2) ⊗ A2 = A4 ⊗ (A2 ⊗ A2) = {'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A3 = A4 ⊗ (A2 ⊗ A3) = {'A3', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A4 = A4 ⊗ (A2 ⊗ A4) = {'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A5 = A4 ⊗ (A2 ⊗ A5) = {'A5', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A6 = A4 ⊗ (A2 ⊗ A6) = {'A4', 'A2', 'A6'}\n",
            "(A4 ⊗ A2) ⊗ A7 = A4 ⊗ (A2 ⊗ A7) = {'A4', 'A2', 'A7'}\n",
            "(A4 ⊗ A3) ⊗ A1 = A4 ⊗ (A3 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A2 = A4 ⊗ (A3 ⊗ A2) = {'A3', 'A4', 'A2'}\n",
            "(A4 ⊗ A3) ⊗ A3 = A4 ⊗ (A3 ⊗ A3) = {'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A4 = A4 ⊗ (A3 ⊗ A4) = {'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A5 = A4 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A6 = A4 ⊗ (A3 ⊗ A6) = {'A3', 'A4', 'A6'}\n",
            "(A4 ⊗ A3) ⊗ A7 = A4 ⊗ (A3 ⊗ A7) = {'A3', 'A4', 'A7'}\n",
            "(A4 ⊗ A4) ⊗ A1 = A4 ⊗ (A4 ⊗ A1) = {'A5', 'A4', 'A6', 'A1', 'A3', 'A2', 'A7'}\n",
            "(A4 ⊗ A4) ⊗ A2 = A4 ⊗ (A4 ⊗ A2) = {'A4', 'A2'}\n",
            "(A4 ⊗ A4) ⊗ A3 = A4 ⊗ (A4 ⊗ A3) = {'A3', 'A4'}\n",
            "(A4 ⊗ A4) ⊗ A4 = A4 ⊗ (A4 ⊗ A4) = {'A4'}\n",
            "(A4 ⊗ A4) ⊗ A5 = A4 ⊗ (A4 ⊗ A5) = {'A5', 'A4'}\n",
            "(A4 ⊗ A4) ⊗ A6 = A4 ⊗ (A4 ⊗ A6) = {'A4', 'A6'}\n",
            "(A4 ⊗ A4) ⊗ A7 = A4 ⊗ (A4 ⊗ A7) = {'A4', 'A7'}\n",
            "(A4 ⊗ A5) ⊗ A1 = A4 ⊗ (A5 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A2 = A4 ⊗ (A5 ⊗ A2) = {'A5', 'A4', 'A2'}\n",
            "(A4 ⊗ A5) ⊗ A3 = A4 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A4 = A4 ⊗ (A5 ⊗ A4) = {'A5', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A5 = A4 ⊗ (A5 ⊗ A5) = {'A5', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A6 = A4 ⊗ (A5 ⊗ A6) = {'A5', 'A4', 'A6'}\n",
            "(A4 ⊗ A5) ⊗ A7 = A4 ⊗ (A5 ⊗ A7) = {'A5', 'A4', 'A7'}\n",
            "(A4 ⊗ A6) ⊗ A1 = A4 ⊗ (A6 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A6) ⊗ A2 = A4 ⊗ (A6 ⊗ A2) = {'A4', 'A2', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A3 = A4 ⊗ (A6 ⊗ A3) = {'A3', 'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A4 = A4 ⊗ (A6 ⊗ A4) = {'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A5 = A4 ⊗ (A6 ⊗ A5) = {'A5', 'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A6 = A4 ⊗ (A6 ⊗ A6) = {'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A7 = A4 ⊗ (A6 ⊗ A7) = {'A4', 'A6', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A1 = A4 ⊗ (A7 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A4 ⊗ A7) ⊗ A2 = A4 ⊗ (A7 ⊗ A2) = {'A4', 'A2', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A3 = A4 ⊗ (A7 ⊗ A3) = {'A3', 'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A4 = A4 ⊗ (A7 ⊗ A4) = {'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A5 = A4 ⊗ (A7 ⊗ A5) = {'A5', 'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A6 = A4 ⊗ (A7 ⊗ A6) = {'A4', 'A7', 'A6'}\n",
            "(A4 ⊗ A7) ⊗ A7 = A4 ⊗ (A7 ⊗ A7) = {'A4', 'A7'}\n",
            "(A5 ⊗ A1) ⊗ A1 = A5 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A1) ⊗ A2 = A5 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A1) ⊗ A3 = A5 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A1) ⊗ A4 = A5 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A1) ⊗ A5 = A5 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A1) ⊗ A6 = A5 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A1) ⊗ A7 = A5 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A2) ⊗ A1 = A5 ⊗ (A2 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A2) ⊗ A2 = A5 ⊗ (A2 ⊗ A2) = {'A5', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A3 = A5 ⊗ (A2 ⊗ A3) = {'A5', 'A3', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A4 = A5 ⊗ (A2 ⊗ A4) = {'A5', 'A4', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A5 = A5 ⊗ (A2 ⊗ A5) = {'A5', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A6 = A5 ⊗ (A2 ⊗ A6) = {'A5', 'A2', 'A6'}\n",
            "(A5 ⊗ A2) ⊗ A7 = A5 ⊗ (A2 ⊗ A7) = {'A5', 'A2', 'A7'}\n",
            "(A5 ⊗ A3) ⊗ A1 = A5 ⊗ (A3 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A3) ⊗ A2 = A5 ⊗ (A3 ⊗ A2) = {'A5', 'A3', 'A2'}\n",
            "(A5 ⊗ A3) ⊗ A3 = A5 ⊗ (A3 ⊗ A3) = {'A5', 'A3'}\n",
            "(A5 ⊗ A3) ⊗ A4 = A5 ⊗ (A3 ⊗ A4) = {'A5', 'A4', 'A3'}\n",
            "(A5 ⊗ A3) ⊗ A5 = A5 ⊗ (A3 ⊗ A5) = {'A5', 'A3'}\n",
            "(A5 ⊗ A3) ⊗ A6 = A5 ⊗ (A3 ⊗ A6) = {'A5', 'A3', 'A6'}\n",
            "(A5 ⊗ A3) ⊗ A7 = A5 ⊗ (A3 ⊗ A7) = {'A5', 'A3', 'A7'}\n",
            "(A5 ⊗ A4) ⊗ A1 = A5 ⊗ (A4 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A2 = A5 ⊗ (A4 ⊗ A2) = {'A5', 'A4', 'A2'}\n",
            "(A5 ⊗ A4) ⊗ A3 = A5 ⊗ (A4 ⊗ A3) = {'A5', 'A3', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A4 = A5 ⊗ (A4 ⊗ A4) = {'A5', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A5 = A5 ⊗ (A4 ⊗ A5) = {'A5', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A6 = A5 ⊗ (A4 ⊗ A6) = {'A5', 'A4', 'A6'}\n",
            "(A5 ⊗ A4) ⊗ A7 = A5 ⊗ (A4 ⊗ A7) = {'A5', 'A4', 'A7'}\n",
            "(A5 ⊗ A5) ⊗ A1 = A5 ⊗ (A5 ⊗ A1) = {'A5', 'A4', 'A6', 'A1', 'A3', 'A2', 'A7'}\n",
            "(A5 ⊗ A5) ⊗ A2 = A5 ⊗ (A5 ⊗ A2) = {'A5', 'A2'}\n",
            "(A5 ⊗ A5) ⊗ A3 = A5 ⊗ (A5 ⊗ A3) = {'A5', 'A3'}\n",
            "(A5 ⊗ A5) ⊗ A4 = A5 ⊗ (A5 ⊗ A4) = {'A5', 'A4'}\n",
            "(A5 ⊗ A5) ⊗ A5 = A5 ⊗ (A5 ⊗ A5) = {'A5'}\n",
            "(A5 ⊗ A5) ⊗ A6 = A5 ⊗ (A5 ⊗ A6) = {'A5', 'A6'}\n",
            "(A5 ⊗ A5) ⊗ A7 = A5 ⊗ (A5 ⊗ A7) = {'A5', 'A7'}\n",
            "(A5 ⊗ A6) ⊗ A1 = A5 ⊗ (A6 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A6) ⊗ A2 = A5 ⊗ (A6 ⊗ A2) = {'A5', 'A2', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A3 = A5 ⊗ (A6 ⊗ A3) = {'A5', 'A3', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A4 = A5 ⊗ (A6 ⊗ A4) = {'A5', 'A4', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A5 = A5 ⊗ (A6 ⊗ A5) = {'A5', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A6 = A5 ⊗ (A6 ⊗ A6) = {'A5', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A7 = A5 ⊗ (A6 ⊗ A7) = {'A5', 'A6', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A1 = A5 ⊗ (A7 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A5 ⊗ A7) ⊗ A2 = A5 ⊗ (A7 ⊗ A2) = {'A5', 'A2', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A3 = A5 ⊗ (A7 ⊗ A3) = {'A5', 'A3', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A4 = A5 ⊗ (A7 ⊗ A4) = {'A5', 'A4', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A5 = A5 ⊗ (A7 ⊗ A5) = {'A5', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A6 = A5 ⊗ (A7 ⊗ A6) = {'A5', 'A7', 'A6'}\n",
            "(A5 ⊗ A7) ⊗ A7 = A5 ⊗ (A7 ⊗ A7) = {'A5', 'A7'}\n",
            "(A6 ⊗ A1) ⊗ A1 = A6 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A1) ⊗ A2 = A6 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A1) ⊗ A3 = A6 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A1) ⊗ A4 = A6 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A1) ⊗ A5 = A6 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A1) ⊗ A6 = A6 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A1) ⊗ A7 = A6 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A2) ⊗ A1 = A6 ⊗ (A2 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A2) ⊗ A2 = A6 ⊗ (A2 ⊗ A2) = {'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A3 = A6 ⊗ (A2 ⊗ A3) = {'A3', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A4 = A6 ⊗ (A2 ⊗ A4) = {'A4', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A5 = A6 ⊗ (A2 ⊗ A5) = {'A5', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A6 = A6 ⊗ (A2 ⊗ A6) = {'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A7 = A6 ⊗ (A2 ⊗ A7) = {'A6', 'A2', 'A7'}\n",
            "(A6 ⊗ A3) ⊗ A1 = A6 ⊗ (A3 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A3) ⊗ A2 = A6 ⊗ (A3 ⊗ A2) = {'A3', 'A2', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A3 = A6 ⊗ (A3 ⊗ A3) = {'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A4 = A6 ⊗ (A3 ⊗ A4) = {'A3', 'A4', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A5 = A6 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A6 = A6 ⊗ (A3 ⊗ A6) = {'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A7 = A6 ⊗ (A3 ⊗ A7) = {'A3', 'A6', 'A7'}\n",
            "(A6 ⊗ A4) ⊗ A1 = A6 ⊗ (A4 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A4) ⊗ A2 = A6 ⊗ (A4 ⊗ A2) = {'A4', 'A2', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A3 = A6 ⊗ (A4 ⊗ A3) = {'A3', 'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A4 = A6 ⊗ (A4 ⊗ A4) = {'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A5 = A6 ⊗ (A4 ⊗ A5) = {'A5', 'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A6 = A6 ⊗ (A4 ⊗ A6) = {'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A7 = A6 ⊗ (A4 ⊗ A7) = {'A4', 'A6', 'A7'}\n",
            "(A6 ⊗ A5) ⊗ A1 = A6 ⊗ (A5 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A5) ⊗ A2 = A6 ⊗ (A5 ⊗ A2) = {'A5', 'A2', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A3 = A6 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A4 = A6 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A5 = A6 ⊗ (A5 ⊗ A5) = {'A5', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A6 = A6 ⊗ (A5 ⊗ A6) = {'A5', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A7 = A6 ⊗ (A5 ⊗ A7) = {'A5', 'A6', 'A7'}\n",
            "(A6 ⊗ A6) ⊗ A1 = A6 ⊗ (A6 ⊗ A1) = {'A5', 'A4', 'A6', 'A1', 'A3', 'A2', 'A7'}\n",
            "(A6 ⊗ A6) ⊗ A2 = A6 ⊗ (A6 ⊗ A2) = {'A2', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A3 = A6 ⊗ (A6 ⊗ A3) = {'A3', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A4 = A6 ⊗ (A6 ⊗ A4) = {'A4', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A5 = A6 ⊗ (A6 ⊗ A5) = {'A5', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A6 = A6 ⊗ (A6 ⊗ A6) = {'A6'}\n",
            "(A6 ⊗ A6) ⊗ A7 = A6 ⊗ (A6 ⊗ A7) = {'A7', 'A6'}\n",
            "(A6 ⊗ A7) ⊗ A1 = A6 ⊗ (A7 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A6 ⊗ A7) ⊗ A2 = A6 ⊗ (A7 ⊗ A2) = {'A6', 'A2', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A3 = A6 ⊗ (A7 ⊗ A3) = {'A3', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A4 = A6 ⊗ (A7 ⊗ A4) = {'A4', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A5 = A6 ⊗ (A7 ⊗ A5) = {'A5', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A6 = A6 ⊗ (A7 ⊗ A6) = {'A7', 'A6'}\n",
            "(A6 ⊗ A7) ⊗ A7 = A6 ⊗ (A7 ⊗ A7) = {'A6', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A1 = A7 ⊗ (A1 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A1) ⊗ A2 = A7 ⊗ (A1 ⊗ A2) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A1) ⊗ A3 = A7 ⊗ (A1 ⊗ A3) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A1) ⊗ A4 = A7 ⊗ (A1 ⊗ A4) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A1) ⊗ A5 = A7 ⊗ (A1 ⊗ A5) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A1) ⊗ A6 = A7 ⊗ (A1 ⊗ A6) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A1) ⊗ A7 = A7 ⊗ (A1 ⊗ A7) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A2) ⊗ A1 = A7 ⊗ (A2 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A2) ⊗ A2 = A7 ⊗ (A2 ⊗ A2) = {'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A3 = A7 ⊗ (A2 ⊗ A3) = {'A3', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A4 = A7 ⊗ (A2 ⊗ A4) = {'A4', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A5 = A7 ⊗ (A2 ⊗ A5) = {'A5', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A6 = A7 ⊗ (A2 ⊗ A6) = {'A7', 'A2', 'A6'}\n",
            "(A7 ⊗ A2) ⊗ A7 = A7 ⊗ (A2 ⊗ A7) = {'A2', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A1 = A7 ⊗ (A3 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A3) ⊗ A2 = A7 ⊗ (A3 ⊗ A2) = {'A3', 'A2', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A3 = A7 ⊗ (A3 ⊗ A3) = {'A3', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A4 = A7 ⊗ (A3 ⊗ A4) = {'A3', 'A4', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A5 = A7 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A6 = A7 ⊗ (A3 ⊗ A6) = {'A3', 'A7', 'A6'}\n",
            "(A7 ⊗ A3) ⊗ A7 = A7 ⊗ (A3 ⊗ A7) = {'A3', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A1 = A7 ⊗ (A4 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A4) ⊗ A2 = A7 ⊗ (A4 ⊗ A2) = {'A4', 'A2', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A3 = A7 ⊗ (A4 ⊗ A3) = {'A3', 'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A4 = A7 ⊗ (A4 ⊗ A4) = {'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A5 = A7 ⊗ (A4 ⊗ A5) = {'A5', 'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A6 = A7 ⊗ (A4 ⊗ A6) = {'A4', 'A7', 'A6'}\n",
            "(A7 ⊗ A4) ⊗ A7 = A7 ⊗ (A4 ⊗ A7) = {'A4', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A1 = A7 ⊗ (A5 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A5) ⊗ A2 = A7 ⊗ (A5 ⊗ A2) = {'A5', 'A2', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A3 = A7 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A4 = A7 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A5 = A7 ⊗ (A5 ⊗ A5) = {'A5', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A6 = A7 ⊗ (A5 ⊗ A6) = {'A5', 'A7', 'A6'}\n",
            "(A7 ⊗ A5) ⊗ A7 = A7 ⊗ (A5 ⊗ A7) = {'A5', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A1 = A7 ⊗ (A6 ⊗ A1) = {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}\n",
            "(A7 ⊗ A6) ⊗ A2 = A7 ⊗ (A6 ⊗ A2) = {'A6', 'A2', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A3 = A7 ⊗ (A6 ⊗ A3) = {'A3', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A4 = A7 ⊗ (A6 ⊗ A4) = {'A4', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A5 = A7 ⊗ (A6 ⊗ A5) = {'A5', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A6 = A7 ⊗ (A6 ⊗ A6) = {'A7', 'A6'}\n",
            "(A7 ⊗ A6) ⊗ A7 = A7 ⊗ (A6 ⊗ A7) = {'A6', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A1 = A7 ⊗ (A7 ⊗ A1) = {'A5', 'A4', 'A6', 'A1', 'A3', 'A2', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A2 = A7 ⊗ (A7 ⊗ A2) = {'A2', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A3 = A7 ⊗ (A7 ⊗ A3) = {'A3', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A4 = A7 ⊗ (A7 ⊗ A4) = {'A4', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A5 = A7 ⊗ (A7 ⊗ A5) = {'A5', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A6 = A7 ⊗ (A7 ⊗ A6) = {'A7', 'A6'}\n",
            "(A7 ⊗ A7) ⊗ A7 = A7 ⊗ (A7 ⊗ A7) = {'A7'}\n",
            "(J,⊗^J) adalah semihipergrup\n",
            "(J,⊗^J) adalah hvsemigrup\n",
            "(J,⊗^J) adalah quasihipergrup\n",
            "(J,⊗^J) adalah hipergrup\n",
            "(J,⊗^J) bersifat komutatif\n",
            "(J,⊗^J) tidak memiliki identitas skalar\n",
            "(J,⊗^J) bukan hipergrup kanonik\n",
            "Identitas dari (J,⊗^J) = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7']\n",
            "(J,⊗^J) adalah hipergrup reguler\n",
            "(J,⊗^J) adalah hipergrup siklik dengan elemen generator dan derajatnya [('A1', 2)]\n",
            "Elemen idempoten dari (J,⊗^J) = ['A2', 'A3', 'A4', 'A5', 'A6', 'A7']\n",
            "Subhipergrup dari (J,⊗^J) berjumlah 64 yaitu = [{'A2'}, {'A3'}, {'A4'}, {'A5'}, {'A6'}, {'A7'}, {'A3', 'A2'}, {'A4', 'A2'}, {'A5', 'A2'}, {'A2', 'A6'}, {'A2', 'A7'}, {'A3', 'A4'}, {'A5', 'A3'}, {'A3', 'A6'}, {'A3', 'A7'}, {'A5', 'A4'}, {'A4', 'A6'}, {'A4', 'A7'}, {'A5', 'A6'}, {'A5', 'A7'}, {'A7', 'A6'}, {'A3', 'A4', 'A2'}, {'A5', 'A3', 'A2'}, {'A3', 'A2', 'A6'}, {'A3', 'A2', 'A7'}, {'A5', 'A4', 'A2'}, {'A4', 'A2', 'A6'}, {'A4', 'A2', 'A7'}, {'A5', 'A2', 'A6'}, {'A5', 'A2', 'A7'}, {'A7', 'A2', 'A6'}, {'A5', 'A3', 'A4'}, {'A3', 'A4', 'A6'}, {'A3', 'A4', 'A7'}, {'A5', 'A3', 'A6'}, {'A5', 'A3', 'A7'}, {'A3', 'A7', 'A6'}, {'A5', 'A4', 'A6'}, {'A5', 'A4', 'A7'}, {'A4', 'A7', 'A6'}, {'A5', 'A7', 'A6'}, {'A5', 'A3', 'A4', 'A2'}, {'A3', 'A4', 'A2', 'A6'}, {'A3', 'A4', 'A2', 'A7'}, {'A5', 'A3', 'A2', 'A6'}, {'A5', 'A3', 'A2', 'A7'}, {'A3', 'A7', 'A2', 'A6'}, {'A5', 'A4', 'A2', 'A6'}, {'A5', 'A4', 'A2', 'A7'}, {'A4', 'A7', 'A2', 'A6'}, {'A5', 'A7', 'A2', 'A6'}, {'A5', 'A3', 'A4', 'A6'}, {'A5', 'A3', 'A4', 'A7'}, {'A3', 'A7', 'A4', 'A6'}, {'A5', 'A3', 'A7', 'A6'}, {'A5', 'A4', 'A7', 'A6'}, {'A5', 'A3', 'A2', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A4'}, {'A3', 'A2', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6'}, {'A5', 'A2', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}]\n",
            "Subhipergrup normal dari (J,⊗^J) berjumlah 1 yaitu = [{'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}]\n",
            "Subset linier dari (J,⊗^J) berjumlah 1 yaitu = [{'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Proposisi 4.4"
      ],
      "metadata": {
        "id": "6OOqI2xarp0T"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Himpunan J\n",
        "J = ['A1','A2','A3','A4','A5','A6','A7']\n",
        "\n",
        "#Hiperoperasi\n",
        "op_table = {\n",
        "    ('A1', 'A1'): {'A1'},\n",
        "    ('A1', 'A2'): {'A1','A2'},\n",
        "    ('A1', 'A3'): {'A1','A3'},\n",
        "    ('A1', 'A4'): {'A1','A4'},\n",
        "    ('A1', 'A5'): {'A1','A5'},\n",
        "    ('A1', 'A6'): {'A1','A6'},\n",
        "    ('A1', 'A7'): {'A1','A7'},\n",
        "    ('A2', 'A1'): {'A1','A2'},\n",
        "    ('A2', 'A2'): {'A2'},\n",
        "    ('A2', 'A3'): {'A2','A3'},\n",
        "    ('A2', 'A4'): {'A2','A4'},\n",
        "    ('A2', 'A5'): {'A2','A5'},\n",
        "    ('A2', 'A6'): {'A2','A6'},\n",
        "    ('A2', 'A7'): {'A2','A7'},\n",
        "    ('A3', 'A1'): {'A1','A3'},\n",
        "    ('A3', 'A2'): {'A2','A3'},\n",
        "    ('A3', 'A3'): {'A3'},\n",
        "    ('A3', 'A4'): {'A3','A4'},\n",
        "    ('A3', 'A5'): {'A3','A5'},\n",
        "    ('A3', 'A6'): {'A3','A6'},\n",
        "    ('A3', 'A7'): {'A3','A7'},\n",
        "    ('A4', 'A1'): {'A1','A4'},\n",
        "    ('A4', 'A2'): {'A2','A4'},\n",
        "    ('A4', 'A3'): {'A3','A4'},\n",
        "    ('A4', 'A4'): {'A4'},\n",
        "    ('A4', 'A5'): {'A4','A5'},\n",
        "    ('A4', 'A6'): {'A4','A6'},\n",
        "    ('A4', 'A7'): {'A4','A7'},\n",
        "    ('A5', 'A1'): {'A1','A5'},\n",
        "    ('A5', 'A2'): {'A2','A5'},\n",
        "    ('A5', 'A3'): {'A3','A5'},\n",
        "    ('A5', 'A4'): {'A4','A5'},\n",
        "    ('A5', 'A5'): {'A5'},\n",
        "    ('A5', 'A6'): {'A5','A6'},\n",
        "    ('A5', 'A7'): {'A5','A7'},\n",
        "    ('A6', 'A1'): {'A1','A6'},\n",
        "    ('A6', 'A2'): {'A2','A6'},\n",
        "    ('A6', 'A3'): {'A3','A6'},\n",
        "    ('A6', 'A4'): {'A4','A6'},\n",
        "    ('A6', 'A5'): {'A5','A6'},\n",
        "    ('A6', 'A6'): {'A6'},\n",
        "    ('A6', 'A7'): {'A6','A7'},\n",
        "    ('A7', 'A1'): {'A1','A7'},\n",
        "    ('A7', 'A2'): {'A2','A7'},\n",
        "    ('A7', 'A3'): {'A3','A7'},\n",
        "    ('A7', 'A4'): {'A4','A7'},\n",
        "    ('A7', 'A5'): {'A5','A7'},\n",
        "    ('A7', 'A6'): {'A6','A7'},\n",
        "    ('A7', 'A7'): {'A7'},\n",
        "}\n",
        "\n",
        "# Periksa hiperstruktur aljabar dan sifat-sifatnya\n",
        "semihipergrup = cek_semihipergrup(J, op_table)\n",
        "if semihipergrup==True:\n",
        "    print(\"(J,⊗^J') adalah semihipergrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan semihipergrup\")\n",
        "\n",
        "hvsemigrup = cek_hvsemigrup(J, op_table,semihipergrup)\n",
        "if hvsemigrup==True:\n",
        "    print(\"(J,⊗^J') adalah hvsemigrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan hvsemigrup\")\n",
        "\n",
        "kuasihipergrup = cek_kuasihipergrup(J, op_table)\n",
        "if kuasihipergrup==True:\n",
        "    print(\"(J,⊗^J') adalah quasihipergrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan quasihipergrup\")\n",
        "\n",
        "hipergrup = cek_hipergrup(semihipergrup, kuasihipergrup)\n",
        "if hipergrup==True:\n",
        "    print(\"(J,⊗^J') adalah hipergrup\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan hipergrup\")\n",
        "\n",
        "komutatif = cek_komutatif(J, op_table)\n",
        "if komutatif==True:\n",
        "    print(\"(J,⊗^J') bersifat komutatif\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak bersifat komutatif\")\n",
        "\n",
        "idenskalar, data1 = cek_identitas_skalar(J, op_table)\n",
        "if idenskalar==True:\n",
        "    print(f\"Identitas skalar dari (J,⊗^J') = {data1}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak memiliki identitas skalar\")\n",
        "\n",
        "kanonik = cek_kanonik(J,op_table,semihipergrup,idenskalar,data1,komutatif)\n",
        "if kanonik==True:\n",
        "    print(\"(J,⊗^J') adalah hipergrup kanonik\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan hipergrup kanonik\")\n",
        "\n",
        "identitas, data2 = cek_identitas(J, op_table)\n",
        "if identitas==True:\n",
        "    print(f\"Identitas dari (J,⊗^J') = {data2}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak memiliki identitas\")\n",
        "\n",
        "invers = cek_invers(J, op_table, data2)\n",
        "reguler = cek_reguler(identitas,invers,hipergrup)\n",
        "if reguler==True:\n",
        "    print(\"(J,⊗^J') adalah hipergrup reguler\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan hipergrup reguler\")\n",
        "\n",
        "siklik, generator= cek_hipergrup_siklik(J, op_table,hipergrup)\n",
        "if siklik==True:\n",
        "    print(f\"(J,⊗^J') adalah hipergrup siklik dengan elemen generator dan derajatnya {generator}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') bukan hipergrup siklik.\")\n",
        "\n",
        "idempoten, data3 = cek_idempoten(J, op_table)\n",
        "if idempoten==True:\n",
        "    print(f\"Elemen idempoten dari (J,⊗^J') = {data3}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak memiliki elemen idempoten\")\n",
        "\n",
        "subset_stabil = cari_subset_stabil(J, op_table)\n",
        "subhipergrup, data4 = cek_subhipergrup(subset_stabil, op_table,hipergrup)\n",
        "if subhipergrup==True:\n",
        "    print(f\"Subhipergrup dari (J,⊗^J') berjumlah {len(data4)} yaitu = {data4}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak memiliki subhipergrup\")\n",
        "\n",
        "subnormal, data5 = cek_subnormal(J,subhipergrup, op_table,hipergrup)\n",
        "if subnormal==True:\n",
        "    print(f\"Subhipergrup normal dari (J,⊗^J') berjumlah {len(data5)} yaitu = {data5}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak memiliki subhipergrup normal\")\n",
        "\n",
        "sublin, data6 = subset_linier(J,subset_stabil, op_table,hipergrup)\n",
        "if sublin==True:\n",
        "    print(f\"Subset linier dari (J,⊗^J') berjumlah {len(data6)} yaitu = {data6}\")\n",
        "else:\n",
        "    print(\"(J,⊗^J') tidak memiliki subset linier\")"
      ],
      "metadata": {
        "id": "Ps6KlKffpzji",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bb17b352-4fe2-45dd-d1c4-2530cb9b3036"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(A1 ⊗ A1) ⊗ A1 = A1 ⊗ (A1 ⊗ A1) = {'A1'}\n",
            "(A1 ⊗ A1) ⊗ A2 = A1 ⊗ (A1 ⊗ A2) = {'A1', 'A2'}\n",
            "(A1 ⊗ A1) ⊗ A3 = A1 ⊗ (A1 ⊗ A3) = {'A1', 'A3'}\n",
            "(A1 ⊗ A1) ⊗ A4 = A1 ⊗ (A1 ⊗ A4) = {'A1', 'A4'}\n",
            "(A1 ⊗ A1) ⊗ A5 = A1 ⊗ (A1 ⊗ A5) = {'A1', 'A5'}\n",
            "(A1 ⊗ A1) ⊗ A6 = A1 ⊗ (A1 ⊗ A6) = {'A1', 'A6'}\n",
            "(A1 ⊗ A1) ⊗ A7 = A1 ⊗ (A1 ⊗ A7) = {'A1', 'A7'}\n",
            "(A1 ⊗ A2) ⊗ A1 = A1 ⊗ (A2 ⊗ A1) = {'A1', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A2 = A1 ⊗ (A2 ⊗ A2) = {'A1', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A3 = A1 ⊗ (A2 ⊗ A3) = {'A1', 'A3', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A4 = A1 ⊗ (A2 ⊗ A4) = {'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A5 = A1 ⊗ (A2 ⊗ A5) = {'A1', 'A5', 'A2'}\n",
            "(A1 ⊗ A2) ⊗ A6 = A1 ⊗ (A2 ⊗ A6) = {'A1', 'A2', 'A6'}\n",
            "(A1 ⊗ A2) ⊗ A7 = A1 ⊗ (A2 ⊗ A7) = {'A1', 'A2', 'A7'}\n",
            "(A1 ⊗ A3) ⊗ A1 = A1 ⊗ (A3 ⊗ A1) = {'A1', 'A3'}\n",
            "(A1 ⊗ A3) ⊗ A2 = A1 ⊗ (A3 ⊗ A2) = {'A1', 'A3', 'A2'}\n",
            "(A1 ⊗ A3) ⊗ A3 = A1 ⊗ (A3 ⊗ A3) = {'A1', 'A3'}\n",
            "(A1 ⊗ A3) ⊗ A4 = A1 ⊗ (A3 ⊗ A4) = {'A1', 'A4', 'A3'}\n",
            "(A1 ⊗ A3) ⊗ A5 = A1 ⊗ (A3 ⊗ A5) = {'A1', 'A3', 'A5'}\n",
            "(A1 ⊗ A3) ⊗ A6 = A1 ⊗ (A3 ⊗ A6) = {'A1', 'A3', 'A6'}\n",
            "(A1 ⊗ A3) ⊗ A7 = A1 ⊗ (A3 ⊗ A7) = {'A1', 'A3', 'A7'}\n",
            "(A1 ⊗ A4) ⊗ A1 = A1 ⊗ (A4 ⊗ A1) = {'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A2 = A1 ⊗ (A4 ⊗ A2) = {'A1', 'A4', 'A2'}\n",
            "(A1 ⊗ A4) ⊗ A3 = A1 ⊗ (A4 ⊗ A3) = {'A1', 'A3', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A4 = A1 ⊗ (A4 ⊗ A4) = {'A1', 'A4'}\n",
            "(A1 ⊗ A4) ⊗ A5 = A1 ⊗ (A4 ⊗ A5) = {'A1', 'A4', 'A5'}\n",
            "(A1 ⊗ A4) ⊗ A6 = A1 ⊗ (A4 ⊗ A6) = {'A1', 'A4', 'A6'}\n",
            "(A1 ⊗ A4) ⊗ A7 = A1 ⊗ (A4 ⊗ A7) = {'A1', 'A4', 'A7'}\n",
            "(A1 ⊗ A5) ⊗ A1 = A1 ⊗ (A5 ⊗ A1) = {'A1', 'A5'}\n",
            "(A1 ⊗ A5) ⊗ A2 = A1 ⊗ (A5 ⊗ A2) = {'A1', 'A5', 'A2'}\n",
            "(A1 ⊗ A5) ⊗ A3 = A1 ⊗ (A5 ⊗ A3) = {'A1', 'A3', 'A5'}\n",
            "(A1 ⊗ A5) ⊗ A4 = A1 ⊗ (A5 ⊗ A4) = {'A1', 'A4', 'A5'}\n",
            "(A1 ⊗ A5) ⊗ A5 = A1 ⊗ (A5 ⊗ A5) = {'A1', 'A5'}\n",
            "(A1 ⊗ A5) ⊗ A6 = A1 ⊗ (A5 ⊗ A6) = {'A1', 'A5', 'A6'}\n",
            "(A1 ⊗ A5) ⊗ A7 = A1 ⊗ (A5 ⊗ A7) = {'A1', 'A5', 'A7'}\n",
            "(A1 ⊗ A6) ⊗ A1 = A1 ⊗ (A6 ⊗ A1) = {'A1', 'A6'}\n",
            "(A1 ⊗ A6) ⊗ A2 = A1 ⊗ (A6 ⊗ A2) = {'A1', 'A2', 'A6'}\n",
            "(A1 ⊗ A6) ⊗ A3 = A1 ⊗ (A6 ⊗ A3) = {'A1', 'A3', 'A6'}\n",
            "(A1 ⊗ A6) ⊗ A4 = A1 ⊗ (A6 ⊗ A4) = {'A1', 'A4', 'A6'}\n",
            "(A1 ⊗ A6) ⊗ A5 = A1 ⊗ (A6 ⊗ A5) = {'A1', 'A5', 'A6'}\n",
            "(A1 ⊗ A6) ⊗ A6 = A1 ⊗ (A6 ⊗ A6) = {'A1', 'A6'}\n",
            "(A1 ⊗ A6) ⊗ A7 = A1 ⊗ (A6 ⊗ A7) = {'A1', 'A6', 'A7'}\n",
            "(A1 ⊗ A7) ⊗ A1 = A1 ⊗ (A7 ⊗ A1) = {'A1', 'A7'}\n",
            "(A1 ⊗ A7) ⊗ A2 = A1 ⊗ (A7 ⊗ A2) = {'A1', 'A2', 'A7'}\n",
            "(A1 ⊗ A7) ⊗ A3 = A1 ⊗ (A7 ⊗ A3) = {'A1', 'A3', 'A7'}\n",
            "(A1 ⊗ A7) ⊗ A4 = A1 ⊗ (A7 ⊗ A4) = {'A1', 'A4', 'A7'}\n",
            "(A1 ⊗ A7) ⊗ A5 = A1 ⊗ (A7 ⊗ A5) = {'A1', 'A5', 'A7'}\n",
            "(A1 ⊗ A7) ⊗ A6 = A1 ⊗ (A7 ⊗ A6) = {'A1', 'A7', 'A6'}\n",
            "(A1 ⊗ A7) ⊗ A7 = A1 ⊗ (A7 ⊗ A7) = {'A1', 'A7'}\n",
            "(A2 ⊗ A1) ⊗ A1 = A2 ⊗ (A1 ⊗ A1) = {'A1', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A2 = A2 ⊗ (A1 ⊗ A2) = {'A1', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A3 = A2 ⊗ (A1 ⊗ A3) = {'A1', 'A3', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A4 = A2 ⊗ (A1 ⊗ A4) = {'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A5 = A2 ⊗ (A1 ⊗ A5) = {'A1', 'A5', 'A2'}\n",
            "(A2 ⊗ A1) ⊗ A6 = A2 ⊗ (A1 ⊗ A6) = {'A1', 'A2', 'A6'}\n",
            "(A2 ⊗ A1) ⊗ A7 = A2 ⊗ (A1 ⊗ A7) = {'A1', 'A2', 'A7'}\n",
            "(A2 ⊗ A2) ⊗ A1 = A2 ⊗ (A2 ⊗ A1) = {'A1', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A2 = A2 ⊗ (A2 ⊗ A2) = {'A2'}\n",
            "(A2 ⊗ A2) ⊗ A3 = A2 ⊗ (A2 ⊗ A3) = {'A3', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A4 = A2 ⊗ (A2 ⊗ A4) = {'A4', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A5 = A2 ⊗ (A2 ⊗ A5) = {'A5', 'A2'}\n",
            "(A2 ⊗ A2) ⊗ A6 = A2 ⊗ (A2 ⊗ A6) = {'A2', 'A6'}\n",
            "(A2 ⊗ A2) ⊗ A7 = A2 ⊗ (A2 ⊗ A7) = {'A2', 'A7'}\n",
            "(A2 ⊗ A3) ⊗ A1 = A2 ⊗ (A3 ⊗ A1) = {'A1', 'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A2 = A2 ⊗ (A3 ⊗ A2) = {'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A3 = A2 ⊗ (A3 ⊗ A3) = {'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A4 = A2 ⊗ (A3 ⊗ A4) = {'A3', 'A4', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A5 = A2 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A2'}\n",
            "(A2 ⊗ A3) ⊗ A6 = A2 ⊗ (A3 ⊗ A6) = {'A3', 'A2', 'A6'}\n",
            "(A2 ⊗ A3) ⊗ A7 = A2 ⊗ (A3 ⊗ A7) = {'A3', 'A2', 'A7'}\n",
            "(A2 ⊗ A4) ⊗ A1 = A2 ⊗ (A4 ⊗ A1) = {'A1', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A2 = A2 ⊗ (A4 ⊗ A2) = {'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A3 = A2 ⊗ (A4 ⊗ A3) = {'A3', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A4 = A2 ⊗ (A4 ⊗ A4) = {'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A5 = A2 ⊗ (A4 ⊗ A5) = {'A5', 'A4', 'A2'}\n",
            "(A2 ⊗ A4) ⊗ A6 = A2 ⊗ (A4 ⊗ A6) = {'A4', 'A2', 'A6'}\n",
            "(A2 ⊗ A4) ⊗ A7 = A2 ⊗ (A4 ⊗ A7) = {'A4', 'A2', 'A7'}\n",
            "(A2 ⊗ A5) ⊗ A1 = A2 ⊗ (A5 ⊗ A1) = {'A1', 'A5', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A2 = A2 ⊗ (A5 ⊗ A2) = {'A5', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A3 = A2 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A4 = A2 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A5 = A2 ⊗ (A5 ⊗ A5) = {'A5', 'A2'}\n",
            "(A2 ⊗ A5) ⊗ A6 = A2 ⊗ (A5 ⊗ A6) = {'A5', 'A2', 'A6'}\n",
            "(A2 ⊗ A5) ⊗ A7 = A2 ⊗ (A5 ⊗ A7) = {'A5', 'A2', 'A7'}\n",
            "(A2 ⊗ A6) ⊗ A1 = A2 ⊗ (A6 ⊗ A1) = {'A1', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A2 = A2 ⊗ (A6 ⊗ A2) = {'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A3 = A2 ⊗ (A6 ⊗ A3) = {'A3', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A4 = A2 ⊗ (A6 ⊗ A4) = {'A4', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A5 = A2 ⊗ (A6 ⊗ A5) = {'A5', 'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A6 = A2 ⊗ (A6 ⊗ A6) = {'A2', 'A6'}\n",
            "(A2 ⊗ A6) ⊗ A7 = A2 ⊗ (A6 ⊗ A7) = {'A6', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A1 = A2 ⊗ (A7 ⊗ A1) = {'A1', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A2 = A2 ⊗ (A7 ⊗ A2) = {'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A3 = A2 ⊗ (A7 ⊗ A3) = {'A3', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A4 = A2 ⊗ (A7 ⊗ A4) = {'A4', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A5 = A2 ⊗ (A7 ⊗ A5) = {'A5', 'A2', 'A7'}\n",
            "(A2 ⊗ A7) ⊗ A6 = A2 ⊗ (A7 ⊗ A6) = {'A7', 'A2', 'A6'}\n",
            "(A2 ⊗ A7) ⊗ A7 = A2 ⊗ (A7 ⊗ A7) = {'A2', 'A7'}\n",
            "(A3 ⊗ A1) ⊗ A1 = A3 ⊗ (A1 ⊗ A1) = {'A1', 'A3'}\n",
            "(A3 ⊗ A1) ⊗ A2 = A3 ⊗ (A1 ⊗ A2) = {'A1', 'A3', 'A2'}\n",
            "(A3 ⊗ A1) ⊗ A3 = A3 ⊗ (A1 ⊗ A3) = {'A1', 'A3'}\n",
            "(A3 ⊗ A1) ⊗ A4 = A3 ⊗ (A1 ⊗ A4) = {'A1', 'A4', 'A3'}\n",
            "(A3 ⊗ A1) ⊗ A5 = A3 ⊗ (A1 ⊗ A5) = {'A1', 'A3', 'A5'}\n",
            "(A3 ⊗ A1) ⊗ A6 = A3 ⊗ (A1 ⊗ A6) = {'A1', 'A3', 'A6'}\n",
            "(A3 ⊗ A1) ⊗ A7 = A3 ⊗ (A1 ⊗ A7) = {'A1', 'A3', 'A7'}\n",
            "(A3 ⊗ A2) ⊗ A1 = A3 ⊗ (A2 ⊗ A1) = {'A1', 'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A2 = A3 ⊗ (A2 ⊗ A2) = {'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A3 = A3 ⊗ (A2 ⊗ A3) = {'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A4 = A3 ⊗ (A2 ⊗ A4) = {'A3', 'A4', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A5 = A3 ⊗ (A2 ⊗ A5) = {'A5', 'A3', 'A2'}\n",
            "(A3 ⊗ A2) ⊗ A6 = A3 ⊗ (A2 ⊗ A6) = {'A3', 'A2', 'A6'}\n",
            "(A3 ⊗ A2) ⊗ A7 = A3 ⊗ (A2 ⊗ A7) = {'A3', 'A2', 'A7'}\n",
            "(A3 ⊗ A3) ⊗ A1 = A3 ⊗ (A3 ⊗ A1) = {'A1', 'A3'}\n",
            "(A3 ⊗ A3) ⊗ A2 = A3 ⊗ (A3 ⊗ A2) = {'A3', 'A2'}\n",
            "(A3 ⊗ A3) ⊗ A3 = A3 ⊗ (A3 ⊗ A3) = {'A3'}\n",
            "(A3 ⊗ A3) ⊗ A4 = A3 ⊗ (A3 ⊗ A4) = {'A3', 'A4'}\n",
            "(A3 ⊗ A3) ⊗ A5 = A3 ⊗ (A3 ⊗ A5) = {'A5', 'A3'}\n",
            "(A3 ⊗ A3) ⊗ A6 = A3 ⊗ (A3 ⊗ A6) = {'A3', 'A6'}\n",
            "(A3 ⊗ A3) ⊗ A7 = A3 ⊗ (A3 ⊗ A7) = {'A3', 'A7'}\n",
            "(A3 ⊗ A4) ⊗ A1 = A3 ⊗ (A4 ⊗ A1) = {'A1', 'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A2 = A3 ⊗ (A4 ⊗ A2) = {'A3', 'A4', 'A2'}\n",
            "(A3 ⊗ A4) ⊗ A3 = A3 ⊗ (A4 ⊗ A3) = {'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A4 = A3 ⊗ (A4 ⊗ A4) = {'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A5 = A3 ⊗ (A4 ⊗ A5) = {'A5', 'A3', 'A4'}\n",
            "(A3 ⊗ A4) ⊗ A6 = A3 ⊗ (A4 ⊗ A6) = {'A3', 'A4', 'A6'}\n",
            "(A3 ⊗ A4) ⊗ A7 = A3 ⊗ (A4 ⊗ A7) = {'A3', 'A4', 'A7'}\n",
            "(A3 ⊗ A5) ⊗ A1 = A3 ⊗ (A5 ⊗ A1) = {'A1', 'A3', 'A5'}\n",
            "(A3 ⊗ A5) ⊗ A2 = A3 ⊗ (A5 ⊗ A2) = {'A5', 'A3', 'A2'}\n",
            "(A3 ⊗ A5) ⊗ A3 = A3 ⊗ (A5 ⊗ A3) = {'A5', 'A3'}\n",
            "(A3 ⊗ A5) ⊗ A4 = A3 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A3'}\n",
            "(A3 ⊗ A5) ⊗ A5 = A3 ⊗ (A5 ⊗ A5) = {'A5', 'A3'}\n",
            "(A3 ⊗ A5) ⊗ A6 = A3 ⊗ (A5 ⊗ A6) = {'A5', 'A3', 'A6'}\n",
            "(A3 ⊗ A5) ⊗ A7 = A3 ⊗ (A5 ⊗ A7) = {'A5', 'A3', 'A7'}\n",
            "(A3 ⊗ A6) ⊗ A1 = A3 ⊗ (A6 ⊗ A1) = {'A1', 'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A2 = A3 ⊗ (A6 ⊗ A2) = {'A3', 'A2', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A3 = A3 ⊗ (A6 ⊗ A3) = {'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A4 = A3 ⊗ (A6 ⊗ A4) = {'A3', 'A4', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A5 = A3 ⊗ (A6 ⊗ A5) = {'A5', 'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A6 = A3 ⊗ (A6 ⊗ A6) = {'A3', 'A6'}\n",
            "(A3 ⊗ A6) ⊗ A7 = A3 ⊗ (A6 ⊗ A7) = {'A3', 'A6', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A1 = A3 ⊗ (A7 ⊗ A1) = {'A1', 'A3', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A2 = A3 ⊗ (A7 ⊗ A2) = {'A3', 'A2', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A3 = A3 ⊗ (A7 ⊗ A3) = {'A3', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A4 = A3 ⊗ (A7 ⊗ A4) = {'A3', 'A4', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A5 = A3 ⊗ (A7 ⊗ A5) = {'A5', 'A3', 'A7'}\n",
            "(A3 ⊗ A7) ⊗ A6 = A3 ⊗ (A7 ⊗ A6) = {'A3', 'A7', 'A6'}\n",
            "(A3 ⊗ A7) ⊗ A7 = A3 ⊗ (A7 ⊗ A7) = {'A3', 'A7'}\n",
            "(A4 ⊗ A1) ⊗ A1 = A4 ⊗ (A1 ⊗ A1) = {'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A2 = A4 ⊗ (A1 ⊗ A2) = {'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A1) ⊗ A3 = A4 ⊗ (A1 ⊗ A3) = {'A1', 'A3', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A4 = A4 ⊗ (A1 ⊗ A4) = {'A1', 'A4'}\n",
            "(A4 ⊗ A1) ⊗ A5 = A4 ⊗ (A1 ⊗ A5) = {'A1', 'A4', 'A5'}\n",
            "(A4 ⊗ A1) ⊗ A6 = A4 ⊗ (A1 ⊗ A6) = {'A1', 'A4', 'A6'}\n",
            "(A4 ⊗ A1) ⊗ A7 = A4 ⊗ (A1 ⊗ A7) = {'A1', 'A4', 'A7'}\n",
            "(A4 ⊗ A2) ⊗ A1 = A4 ⊗ (A2 ⊗ A1) = {'A1', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A2 = A4 ⊗ (A2 ⊗ A2) = {'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A3 = A4 ⊗ (A2 ⊗ A3) = {'A3', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A4 = A4 ⊗ (A2 ⊗ A4) = {'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A5 = A4 ⊗ (A2 ⊗ A5) = {'A5', 'A4', 'A2'}\n",
            "(A4 ⊗ A2) ⊗ A6 = A4 ⊗ (A2 ⊗ A6) = {'A4', 'A2', 'A6'}\n",
            "(A4 ⊗ A2) ⊗ A7 = A4 ⊗ (A2 ⊗ A7) = {'A4', 'A2', 'A7'}\n",
            "(A4 ⊗ A3) ⊗ A1 = A4 ⊗ (A3 ⊗ A1) = {'A1', 'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A2 = A4 ⊗ (A3 ⊗ A2) = {'A3', 'A4', 'A2'}\n",
            "(A4 ⊗ A3) ⊗ A3 = A4 ⊗ (A3 ⊗ A3) = {'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A4 = A4 ⊗ (A3 ⊗ A4) = {'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A5 = A4 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A4'}\n",
            "(A4 ⊗ A3) ⊗ A6 = A4 ⊗ (A3 ⊗ A6) = {'A3', 'A4', 'A6'}\n",
            "(A4 ⊗ A3) ⊗ A7 = A4 ⊗ (A3 ⊗ A7) = {'A3', 'A4', 'A7'}\n",
            "(A4 ⊗ A4) ⊗ A1 = A4 ⊗ (A4 ⊗ A1) = {'A1', 'A4'}\n",
            "(A4 ⊗ A4) ⊗ A2 = A4 ⊗ (A4 ⊗ A2) = {'A4', 'A2'}\n",
            "(A4 ⊗ A4) ⊗ A3 = A4 ⊗ (A4 ⊗ A3) = {'A3', 'A4'}\n",
            "(A4 ⊗ A4) ⊗ A4 = A4 ⊗ (A4 ⊗ A4) = {'A4'}\n",
            "(A4 ⊗ A4) ⊗ A5 = A4 ⊗ (A4 ⊗ A5) = {'A5', 'A4'}\n",
            "(A4 ⊗ A4) ⊗ A6 = A4 ⊗ (A4 ⊗ A6) = {'A4', 'A6'}\n",
            "(A4 ⊗ A4) ⊗ A7 = A4 ⊗ (A4 ⊗ A7) = {'A4', 'A7'}\n",
            "(A4 ⊗ A5) ⊗ A1 = A4 ⊗ (A5 ⊗ A1) = {'A1', 'A4', 'A5'}\n",
            "(A4 ⊗ A5) ⊗ A2 = A4 ⊗ (A5 ⊗ A2) = {'A5', 'A4', 'A2'}\n",
            "(A4 ⊗ A5) ⊗ A3 = A4 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A4 = A4 ⊗ (A5 ⊗ A4) = {'A5', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A5 = A4 ⊗ (A5 ⊗ A5) = {'A5', 'A4'}\n",
            "(A4 ⊗ A5) ⊗ A6 = A4 ⊗ (A5 ⊗ A6) = {'A5', 'A4', 'A6'}\n",
            "(A4 ⊗ A5) ⊗ A7 = A4 ⊗ (A5 ⊗ A7) = {'A5', 'A4', 'A7'}\n",
            "(A4 ⊗ A6) ⊗ A1 = A4 ⊗ (A6 ⊗ A1) = {'A1', 'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A2 = A4 ⊗ (A6 ⊗ A2) = {'A4', 'A2', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A3 = A4 ⊗ (A6 ⊗ A3) = {'A3', 'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A4 = A4 ⊗ (A6 ⊗ A4) = {'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A5 = A4 ⊗ (A6 ⊗ A5) = {'A5', 'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A6 = A4 ⊗ (A6 ⊗ A6) = {'A4', 'A6'}\n",
            "(A4 ⊗ A6) ⊗ A7 = A4 ⊗ (A6 ⊗ A7) = {'A4', 'A6', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A1 = A4 ⊗ (A7 ⊗ A1) = {'A1', 'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A2 = A4 ⊗ (A7 ⊗ A2) = {'A4', 'A2', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A3 = A4 ⊗ (A7 ⊗ A3) = {'A3', 'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A4 = A4 ⊗ (A7 ⊗ A4) = {'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A5 = A4 ⊗ (A7 ⊗ A5) = {'A5', 'A4', 'A7'}\n",
            "(A4 ⊗ A7) ⊗ A6 = A4 ⊗ (A7 ⊗ A6) = {'A4', 'A7', 'A6'}\n",
            "(A4 ⊗ A7) ⊗ A7 = A4 ⊗ (A7 ⊗ A7) = {'A4', 'A7'}\n",
            "(A5 ⊗ A1) ⊗ A1 = A5 ⊗ (A1 ⊗ A1) = {'A1', 'A5'}\n",
            "(A5 ⊗ A1) ⊗ A2 = A5 ⊗ (A1 ⊗ A2) = {'A1', 'A5', 'A2'}\n",
            "(A5 ⊗ A1) ⊗ A3 = A5 ⊗ (A1 ⊗ A3) = {'A1', 'A3', 'A5'}\n",
            "(A5 ⊗ A1) ⊗ A4 = A5 ⊗ (A1 ⊗ A4) = {'A1', 'A4', 'A5'}\n",
            "(A5 ⊗ A1) ⊗ A5 = A5 ⊗ (A1 ⊗ A5) = {'A1', 'A5'}\n",
            "(A5 ⊗ A1) ⊗ A6 = A5 ⊗ (A1 ⊗ A6) = {'A1', 'A5', 'A6'}\n",
            "(A5 ⊗ A1) ⊗ A7 = A5 ⊗ (A1 ⊗ A7) = {'A1', 'A5', 'A7'}\n",
            "(A5 ⊗ A2) ⊗ A1 = A5 ⊗ (A2 ⊗ A1) = {'A1', 'A5', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A2 = A5 ⊗ (A2 ⊗ A2) = {'A5', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A3 = A5 ⊗ (A2 ⊗ A3) = {'A5', 'A3', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A4 = A5 ⊗ (A2 ⊗ A4) = {'A5', 'A4', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A5 = A5 ⊗ (A2 ⊗ A5) = {'A5', 'A2'}\n",
            "(A5 ⊗ A2) ⊗ A6 = A5 ⊗ (A2 ⊗ A6) = {'A5', 'A2', 'A6'}\n",
            "(A5 ⊗ A2) ⊗ A7 = A5 ⊗ (A2 ⊗ A7) = {'A5', 'A2', 'A7'}\n",
            "(A5 ⊗ A3) ⊗ A1 = A5 ⊗ (A3 ⊗ A1) = {'A1', 'A3', 'A5'}\n",
            "(A5 ⊗ A3) ⊗ A2 = A5 ⊗ (A3 ⊗ A2) = {'A5', 'A3', 'A2'}\n",
            "(A5 ⊗ A3) ⊗ A3 = A5 ⊗ (A3 ⊗ A3) = {'A5', 'A3'}\n",
            "(A5 ⊗ A3) ⊗ A4 = A5 ⊗ (A3 ⊗ A4) = {'A5', 'A4', 'A3'}\n",
            "(A5 ⊗ A3) ⊗ A5 = A5 ⊗ (A3 ⊗ A5) = {'A5', 'A3'}\n",
            "(A5 ⊗ A3) ⊗ A6 = A5 ⊗ (A3 ⊗ A6) = {'A5', 'A3', 'A6'}\n",
            "(A5 ⊗ A3) ⊗ A7 = A5 ⊗ (A3 ⊗ A7) = {'A5', 'A3', 'A7'}\n",
            "(A5 ⊗ A4) ⊗ A1 = A5 ⊗ (A4 ⊗ A1) = {'A1', 'A4', 'A5'}\n",
            "(A5 ⊗ A4) ⊗ A2 = A5 ⊗ (A4 ⊗ A2) = {'A5', 'A4', 'A2'}\n",
            "(A5 ⊗ A4) ⊗ A3 = A5 ⊗ (A4 ⊗ A3) = {'A5', 'A3', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A4 = A5 ⊗ (A4 ⊗ A4) = {'A5', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A5 = A5 ⊗ (A4 ⊗ A5) = {'A5', 'A4'}\n",
            "(A5 ⊗ A4) ⊗ A6 = A5 ⊗ (A4 ⊗ A6) = {'A5', 'A4', 'A6'}\n",
            "(A5 ⊗ A4) ⊗ A7 = A5 ⊗ (A4 ⊗ A7) = {'A5', 'A4', 'A7'}\n",
            "(A5 ⊗ A5) ⊗ A1 = A5 ⊗ (A5 ⊗ A1) = {'A1', 'A5'}\n",
            "(A5 ⊗ A5) ⊗ A2 = A5 ⊗ (A5 ⊗ A2) = {'A5', 'A2'}\n",
            "(A5 ⊗ A5) ⊗ A3 = A5 ⊗ (A5 ⊗ A3) = {'A5', 'A3'}\n",
            "(A5 ⊗ A5) ⊗ A4 = A5 ⊗ (A5 ⊗ A4) = {'A5', 'A4'}\n",
            "(A5 ⊗ A5) ⊗ A5 = A5 ⊗ (A5 ⊗ A5) = {'A5'}\n",
            "(A5 ⊗ A5) ⊗ A6 = A5 ⊗ (A5 ⊗ A6) = {'A5', 'A6'}\n",
            "(A5 ⊗ A5) ⊗ A7 = A5 ⊗ (A5 ⊗ A7) = {'A5', 'A7'}\n",
            "(A5 ⊗ A6) ⊗ A1 = A5 ⊗ (A6 ⊗ A1) = {'A1', 'A5', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A2 = A5 ⊗ (A6 ⊗ A2) = {'A5', 'A2', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A3 = A5 ⊗ (A6 ⊗ A3) = {'A5', 'A3', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A4 = A5 ⊗ (A6 ⊗ A4) = {'A5', 'A4', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A5 = A5 ⊗ (A6 ⊗ A5) = {'A5', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A6 = A5 ⊗ (A6 ⊗ A6) = {'A5', 'A6'}\n",
            "(A5 ⊗ A6) ⊗ A7 = A5 ⊗ (A6 ⊗ A7) = {'A5', 'A6', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A1 = A5 ⊗ (A7 ⊗ A1) = {'A1', 'A5', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A2 = A5 ⊗ (A7 ⊗ A2) = {'A5', 'A2', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A3 = A5 ⊗ (A7 ⊗ A3) = {'A5', 'A3', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A4 = A5 ⊗ (A7 ⊗ A4) = {'A5', 'A4', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A5 = A5 ⊗ (A7 ⊗ A5) = {'A5', 'A7'}\n",
            "(A5 ⊗ A7) ⊗ A6 = A5 ⊗ (A7 ⊗ A6) = {'A5', 'A7', 'A6'}\n",
            "(A5 ⊗ A7) ⊗ A7 = A5 ⊗ (A7 ⊗ A7) = {'A5', 'A7'}\n",
            "(A6 ⊗ A1) ⊗ A1 = A6 ⊗ (A1 ⊗ A1) = {'A1', 'A6'}\n",
            "(A6 ⊗ A1) ⊗ A2 = A6 ⊗ (A1 ⊗ A2) = {'A1', 'A2', 'A6'}\n",
            "(A6 ⊗ A1) ⊗ A3 = A6 ⊗ (A1 ⊗ A3) = {'A1', 'A3', 'A6'}\n",
            "(A6 ⊗ A1) ⊗ A4 = A6 ⊗ (A1 ⊗ A4) = {'A1', 'A4', 'A6'}\n",
            "(A6 ⊗ A1) ⊗ A5 = A6 ⊗ (A1 ⊗ A5) = {'A1', 'A5', 'A6'}\n",
            "(A6 ⊗ A1) ⊗ A6 = A6 ⊗ (A1 ⊗ A6) = {'A1', 'A6'}\n",
            "(A6 ⊗ A1) ⊗ A7 = A6 ⊗ (A1 ⊗ A7) = {'A1', 'A6', 'A7'}\n",
            "(A6 ⊗ A2) ⊗ A1 = A6 ⊗ (A2 ⊗ A1) = {'A1', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A2 = A6 ⊗ (A2 ⊗ A2) = {'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A3 = A6 ⊗ (A2 ⊗ A3) = {'A3', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A4 = A6 ⊗ (A2 ⊗ A4) = {'A4', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A5 = A6 ⊗ (A2 ⊗ A5) = {'A5', 'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A6 = A6 ⊗ (A2 ⊗ A6) = {'A2', 'A6'}\n",
            "(A6 ⊗ A2) ⊗ A7 = A6 ⊗ (A2 ⊗ A7) = {'A6', 'A2', 'A7'}\n",
            "(A6 ⊗ A3) ⊗ A1 = A6 ⊗ (A3 ⊗ A1) = {'A1', 'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A2 = A6 ⊗ (A3 ⊗ A2) = {'A3', 'A2', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A3 = A6 ⊗ (A3 ⊗ A3) = {'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A4 = A6 ⊗ (A3 ⊗ A4) = {'A3', 'A4', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A5 = A6 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A6 = A6 ⊗ (A3 ⊗ A6) = {'A3', 'A6'}\n",
            "(A6 ⊗ A3) ⊗ A7 = A6 ⊗ (A3 ⊗ A7) = {'A3', 'A6', 'A7'}\n",
            "(A6 ⊗ A4) ⊗ A1 = A6 ⊗ (A4 ⊗ A1) = {'A1', 'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A2 = A6 ⊗ (A4 ⊗ A2) = {'A4', 'A2', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A3 = A6 ⊗ (A4 ⊗ A3) = {'A3', 'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A4 = A6 ⊗ (A4 ⊗ A4) = {'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A5 = A6 ⊗ (A4 ⊗ A5) = {'A5', 'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A6 = A6 ⊗ (A4 ⊗ A6) = {'A4', 'A6'}\n",
            "(A6 ⊗ A4) ⊗ A7 = A6 ⊗ (A4 ⊗ A7) = {'A4', 'A6', 'A7'}\n",
            "(A6 ⊗ A5) ⊗ A1 = A6 ⊗ (A5 ⊗ A1) = {'A1', 'A5', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A2 = A6 ⊗ (A5 ⊗ A2) = {'A5', 'A2', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A3 = A6 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A4 = A6 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A5 = A6 ⊗ (A5 ⊗ A5) = {'A5', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A6 = A6 ⊗ (A5 ⊗ A6) = {'A5', 'A6'}\n",
            "(A6 ⊗ A5) ⊗ A7 = A6 ⊗ (A5 ⊗ A7) = {'A5', 'A6', 'A7'}\n",
            "(A6 ⊗ A6) ⊗ A1 = A6 ⊗ (A6 ⊗ A1) = {'A1', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A2 = A6 ⊗ (A6 ⊗ A2) = {'A2', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A3 = A6 ⊗ (A6 ⊗ A3) = {'A3', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A4 = A6 ⊗ (A6 ⊗ A4) = {'A4', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A5 = A6 ⊗ (A6 ⊗ A5) = {'A5', 'A6'}\n",
            "(A6 ⊗ A6) ⊗ A6 = A6 ⊗ (A6 ⊗ A6) = {'A6'}\n",
            "(A6 ⊗ A6) ⊗ A7 = A6 ⊗ (A6 ⊗ A7) = {'A7', 'A6'}\n",
            "(A6 ⊗ A7) ⊗ A1 = A6 ⊗ (A7 ⊗ A1) = {'A1', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A2 = A6 ⊗ (A7 ⊗ A2) = {'A6', 'A2', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A3 = A6 ⊗ (A7 ⊗ A3) = {'A3', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A4 = A6 ⊗ (A7 ⊗ A4) = {'A4', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A5 = A6 ⊗ (A7 ⊗ A5) = {'A5', 'A6', 'A7'}\n",
            "(A6 ⊗ A7) ⊗ A6 = A6 ⊗ (A7 ⊗ A6) = {'A7', 'A6'}\n",
            "(A6 ⊗ A7) ⊗ A7 = A6 ⊗ (A7 ⊗ A7) = {'A6', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A1 = A7 ⊗ (A1 ⊗ A1) = {'A1', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A2 = A7 ⊗ (A1 ⊗ A2) = {'A1', 'A2', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A3 = A7 ⊗ (A1 ⊗ A3) = {'A1', 'A3', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A4 = A7 ⊗ (A1 ⊗ A4) = {'A1', 'A4', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A5 = A7 ⊗ (A1 ⊗ A5) = {'A1', 'A5', 'A7'}\n",
            "(A7 ⊗ A1) ⊗ A6 = A7 ⊗ (A1 ⊗ A6) = {'A1', 'A7', 'A6'}\n",
            "(A7 ⊗ A1) ⊗ A7 = A7 ⊗ (A1 ⊗ A7) = {'A1', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A1 = A7 ⊗ (A2 ⊗ A1) = {'A1', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A2 = A7 ⊗ (A2 ⊗ A2) = {'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A3 = A7 ⊗ (A2 ⊗ A3) = {'A3', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A4 = A7 ⊗ (A2 ⊗ A4) = {'A4', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A5 = A7 ⊗ (A2 ⊗ A5) = {'A5', 'A2', 'A7'}\n",
            "(A7 ⊗ A2) ⊗ A6 = A7 ⊗ (A2 ⊗ A6) = {'A7', 'A2', 'A6'}\n",
            "(A7 ⊗ A2) ⊗ A7 = A7 ⊗ (A2 ⊗ A7) = {'A2', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A1 = A7 ⊗ (A3 ⊗ A1) = {'A1', 'A3', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A2 = A7 ⊗ (A3 ⊗ A2) = {'A3', 'A2', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A3 = A7 ⊗ (A3 ⊗ A3) = {'A3', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A4 = A7 ⊗ (A3 ⊗ A4) = {'A3', 'A4', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A5 = A7 ⊗ (A3 ⊗ A5) = {'A5', 'A3', 'A7'}\n",
            "(A7 ⊗ A3) ⊗ A6 = A7 ⊗ (A3 ⊗ A6) = {'A3', 'A7', 'A6'}\n",
            "(A7 ⊗ A3) ⊗ A7 = A7 ⊗ (A3 ⊗ A7) = {'A3', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A1 = A7 ⊗ (A4 ⊗ A1) = {'A1', 'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A2 = A7 ⊗ (A4 ⊗ A2) = {'A4', 'A2', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A3 = A7 ⊗ (A4 ⊗ A3) = {'A3', 'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A4 = A7 ⊗ (A4 ⊗ A4) = {'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A5 = A7 ⊗ (A4 ⊗ A5) = {'A5', 'A4', 'A7'}\n",
            "(A7 ⊗ A4) ⊗ A6 = A7 ⊗ (A4 ⊗ A6) = {'A4', 'A7', 'A6'}\n",
            "(A7 ⊗ A4) ⊗ A7 = A7 ⊗ (A4 ⊗ A7) = {'A4', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A1 = A7 ⊗ (A5 ⊗ A1) = {'A1', 'A5', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A2 = A7 ⊗ (A5 ⊗ A2) = {'A5', 'A2', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A3 = A7 ⊗ (A5 ⊗ A3) = {'A5', 'A3', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A4 = A7 ⊗ (A5 ⊗ A4) = {'A5', 'A4', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A5 = A7 ⊗ (A5 ⊗ A5) = {'A5', 'A7'}\n",
            "(A7 ⊗ A5) ⊗ A6 = A7 ⊗ (A5 ⊗ A6) = {'A5', 'A7', 'A6'}\n",
            "(A7 ⊗ A5) ⊗ A7 = A7 ⊗ (A5 ⊗ A7) = {'A5', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A1 = A7 ⊗ (A6 ⊗ A1) = {'A1', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A2 = A7 ⊗ (A6 ⊗ A2) = {'A6', 'A2', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A3 = A7 ⊗ (A6 ⊗ A3) = {'A3', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A4 = A7 ⊗ (A6 ⊗ A4) = {'A4', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A5 = A7 ⊗ (A6 ⊗ A5) = {'A5', 'A6', 'A7'}\n",
            "(A7 ⊗ A6) ⊗ A6 = A7 ⊗ (A6 ⊗ A6) = {'A7', 'A6'}\n",
            "(A7 ⊗ A6) ⊗ A7 = A7 ⊗ (A6 ⊗ A7) = {'A6', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A1 = A7 ⊗ (A7 ⊗ A1) = {'A1', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A2 = A7 ⊗ (A7 ⊗ A2) = {'A2', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A3 = A7 ⊗ (A7 ⊗ A3) = {'A3', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A4 = A7 ⊗ (A7 ⊗ A4) = {'A4', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A5 = A7 ⊗ (A7 ⊗ A5) = {'A5', 'A7'}\n",
            "(A7 ⊗ A7) ⊗ A6 = A7 ⊗ (A7 ⊗ A6) = {'A7', 'A6'}\n",
            "(A7 ⊗ A7) ⊗ A7 = A7 ⊗ (A7 ⊗ A7) = {'A7'}\n",
            "(J,⊗^J') adalah semihipergrup\n",
            "(J,⊗^J') adalah hvsemigrup\n",
            "(J,⊗^J') adalah quasihipergrup\n",
            "(J,⊗^J') adalah hipergrup\n",
            "(J,⊗^J') bersifat komutatif\n",
            "(J,⊗^J') tidak memiliki identitas skalar\n",
            "(J,⊗^J') bukan hipergrup kanonik\n",
            "Identitas dari (J,⊗^J') = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7']\n",
            "(J,⊗^J') adalah hipergrup reguler\n",
            "(J,⊗^J') bukan hipergrup siklik.\n",
            "Elemen idempoten dari (J,⊗^J') = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7']\n",
            "Subhipergrup dari (J,⊗^J') berjumlah 127 yaitu = [{'A1'}, {'A2'}, {'A3'}, {'A4'}, {'A5'}, {'A6'}, {'A7'}, {'A1', 'A2'}, {'A1', 'A3'}, {'A1', 'A4'}, {'A1', 'A5'}, {'A1', 'A6'}, {'A1', 'A7'}, {'A3', 'A2'}, {'A4', 'A2'}, {'A5', 'A2'}, {'A2', 'A6'}, {'A2', 'A7'}, {'A3', 'A4'}, {'A5', 'A3'}, {'A3', 'A6'}, {'A3', 'A7'}, {'A5', 'A4'}, {'A4', 'A6'}, {'A4', 'A7'}, {'A5', 'A6'}, {'A5', 'A7'}, {'A7', 'A6'}, {'A1', 'A3', 'A2'}, {'A1', 'A4', 'A2'}, {'A1', 'A5', 'A2'}, {'A1', 'A2', 'A6'}, {'A1', 'A2', 'A7'}, {'A1', 'A3', 'A4'}, {'A1', 'A3', 'A5'}, {'A1', 'A3', 'A6'}, {'A1', 'A3', 'A7'}, {'A1', 'A4', 'A5'}, {'A1', 'A4', 'A6'}, {'A1', 'A4', 'A7'}, {'A1', 'A5', 'A6'}, {'A1', 'A5', 'A7'}, {'A1', 'A7', 'A6'}, {'A3', 'A4', 'A2'}, {'A5', 'A3', 'A2'}, {'A3', 'A2', 'A6'}, {'A3', 'A2', 'A7'}, {'A5', 'A4', 'A2'}, {'A4', 'A2', 'A6'}, {'A4', 'A2', 'A7'}, {'A5', 'A2', 'A6'}, {'A5', 'A2', 'A7'}, {'A7', 'A2', 'A6'}, {'A5', 'A3', 'A4'}, {'A3', 'A4', 'A6'}, {'A3', 'A4', 'A7'}, {'A5', 'A3', 'A6'}, {'A5', 'A3', 'A7'}, {'A3', 'A7', 'A6'}, {'A5', 'A4', 'A6'}, {'A5', 'A4', 'A7'}, {'A4', 'A7', 'A6'}, {'A5', 'A7', 'A6'}, {'A1', 'A3', 'A4', 'A2'}, {'A1', 'A3', 'A5', 'A2'}, {'A1', 'A3', 'A2', 'A6'}, {'A1', 'A3', 'A2', 'A7'}, {'A1', 'A4', 'A5', 'A2'}, {'A1', 'A4', 'A2', 'A6'}, {'A1', 'A4', 'A2', 'A7'}, {'A1', 'A5', 'A2', 'A6'}, {'A1', 'A5', 'A2', 'A7'}, {'A1', 'A7', 'A2', 'A6'}, {'A1', 'A3', 'A5', 'A4'}, {'A1', 'A3', 'A4', 'A6'}, {'A1', 'A3', 'A4', 'A7'}, {'A1', 'A3', 'A5', 'A6'}, {'A1', 'A3', 'A5', 'A7'}, {'A1', 'A3', 'A7', 'A6'}, {'A1', 'A4', 'A5', 'A6'}, {'A1', 'A4', 'A5', 'A7'}, {'A1', 'A4', 'A7', 'A6'}, {'A1', 'A7', 'A5', 'A6'}, {'A5', 'A3', 'A4', 'A2'}, {'A3', 'A4', 'A2', 'A6'}, {'A3', 'A4', 'A2', 'A7'}, {'A5', 'A3', 'A2', 'A6'}, {'A5', 'A3', 'A2', 'A7'}, {'A3', 'A7', 'A2', 'A6'}, {'A5', 'A4', 'A2', 'A6'}, {'A5', 'A4', 'A2', 'A7'}, {'A4', 'A7', 'A2', 'A6'}, {'A5', 'A7', 'A2', 'A6'}, {'A5', 'A3', 'A4', 'A6'}, {'A5', 'A3', 'A4', 'A7'}, {'A3', 'A7', 'A4', 'A6'}, {'A5', 'A3', 'A7', 'A6'}, {'A5', 'A4', 'A7', 'A6'}, {'A5', 'A3', 'A2', 'A1', 'A4'}, {'A3', 'A2', 'A6', 'A1', 'A4'}, {'A3', 'A2', 'A7', 'A1', 'A4'}, {'A5', 'A3', 'A2', 'A6', 'A1'}, {'A5', 'A3', 'A2', 'A7', 'A1'}, {'A3', 'A2', 'A7', 'A6', 'A1'}, {'A5', 'A2', 'A6', 'A1', 'A4'}, {'A5', 'A2', 'A7', 'A1', 'A4'}, {'A2', 'A7', 'A6', 'A1', 'A4'}, {'A5', 'A2', 'A7', 'A6', 'A1'}, {'A5', 'A3', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A7', 'A1', 'A4'}, {'A3', 'A7', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A7', 'A6', 'A1'}, {'A5', 'A7', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A2', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A4'}, {'A3', 'A2', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6'}, {'A5', 'A2', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A1', 'A4'}, {'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6', 'A1'}, {'A5', 'A2', 'A7', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A7', 'A6', 'A1', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6', 'A4'}, {'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}]\n",
            "Subhipergrup normal dari (J,⊗^J') berjumlah 1 yaitu = [{'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}]\n",
            "Subset linier dari (J,⊗^J') berjumlah 1 yaitu = [{'A5', 'A3', 'A2', 'A7', 'A6', 'A1', 'A4'}]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Proposisi 4.5"
      ],
      "metadata": {
        "id": "YyHHN3N9y6Ps"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Himpunan L\n",
        "L = ['C1','C2','C3','C4','C5','C6','C7','C8','C9']\n",
        "\n",
        "#Hiperoperasi\n",
        "op_table = {\n",
        "    ('C1', 'C1'): {'C1'},\n",
        "    ('C1', 'C2'): {'C1'},\n",
        "    ('C1', 'C3'): {'C1'},\n",
        "    ('C1', 'C4'): {'C1'},\n",
        "    ('C1', 'C5'): {'C1'},\n",
        "    ('C1', 'C6'): {'C1'},\n",
        "    ('C1', 'C7'): {'C1'},\n",
        "    ('C1', 'C8'): {'C1'},\n",
        "    ('C1', 'C9'): {'C1'},\n",
        "    ('C2', 'C1'): {'C2'},\n",
        "    ('C2', 'C2'): {'C2'},\n",
        "    ('C2', 'C3'): {'C2'},\n",
        "    ('C2', 'C4'): {'C2'},\n",
        "    ('C2', 'C5'): {'C2'},\n",
        "    ('C2', 'C6'): {'C2'},\n",
        "    ('C2', 'C7'): {'C2'},\n",
        "    ('C2', 'C8'): {'C2'},\n",
        "    ('C2', 'C9'): {'C2'},\n",
        "    ('C3', 'C1'): {'C3'},\n",
        "    ('C3', 'C2'): {'C3'},\n",
        "    ('C3', 'C3'): {'C3'},\n",
        "    ('C3', 'C4'): {'C3'},\n",
        "    ('C3', 'C5'): {'C3'},\n",
        "    ('C3', 'C6'): {'C3'},\n",
        "    ('C3', 'C7'): {'C3'},\n",
        "    ('C3', 'C8'): {'C3'},\n",
        "    ('C3', 'C9'): {'C3'},\n",
        "    ('C4', 'C1'): {'C4'},\n",
        "    ('C4', 'C2'): {'C4'},\n",
        "    ('C4', 'C3'): {'C4'},\n",
        "    ('C4', 'C4'): {'C4'},\n",
        "    ('C4', 'C5'): {'C4'},\n",
        "    ('C4', 'C6'): {'C4'},\n",
        "    ('C4', 'C7'): {'C4'},\n",
        "    ('C4', 'C8'): {'C4'},\n",
        "    ('C4', 'C9'): {'C4'},\n",
        "    ('C5', 'C1'): {'C5'},\n",
        "    ('C5', 'C2'): {'C5'},\n",
        "    ('C5', 'C3'): {'C5'},\n",
        "    ('C5', 'C4'): {'C5'},\n",
        "    ('C5', 'C5'): {'C5'},\n",
        "    ('C5', 'C6'): {'C5'},\n",
        "    ('C5', 'C7'): {'C5'},\n",
        "    ('C5', 'C8'): {'C5'},\n",
        "    ('C5', 'C9'): {'C5'},\n",
        "    ('C6', 'C1'): {'C6'},\n",
        "    ('C6', 'C2'): {'C6'},\n",
        "    ('C6', 'C3'): {'C6'},\n",
        "    ('C6', 'C4'): {'C6'},\n",
        "    ('C6', 'C5'): {'C6'},\n",
        "    ('C6', 'C6'): {'C6'},\n",
        "    ('C6', 'C7'): {'C6'},\n",
        "    ('C6', 'C8'): {'C6'},\n",
        "    ('C6', 'C9'): {'C6'},\n",
        "    ('C7', 'C1'): {'C7'},\n",
        "    ('C7', 'C2'): {'C7'},\n",
        "    ('C7', 'C3'): {'C7'},\n",
        "    ('C7', 'C4'): {'C7'},\n",
        "    ('C7', 'C5'): {'C7'},\n",
        "    ('C7', 'C6'): {'C7'},\n",
        "    ('C7', 'C7'): {'C7'},\n",
        "    ('C7', 'C8'): {'C7'},\n",
        "    ('C7', 'C9'): {'C7'},\n",
        "    ('C8', 'C1'): {'C8'},\n",
        "    ('C8', 'C2'): {'C8'},\n",
        "    ('C8', 'C3'): {'C8'},\n",
        "    ('C8', 'C4'): {'C8'},\n",
        "    ('C8', 'C5'): {'C8'},\n",
        "    ('C8', 'C6'): {'C8'},\n",
        "    ('C8', 'C7'): {'C8'},\n",
        "    ('C8', 'C8'): {'C8'},\n",
        "    ('C8', 'C9'): {'C8'},\n",
        "    ('C9', 'C1'): {'C9'},\n",
        "    ('C9', 'C2'): {'C9'},\n",
        "    ('C9', 'C3'): {'C9'},\n",
        "    ('C9', 'C4'): {'C9'},\n",
        "    ('C9', 'C5'): {'C9'},\n",
        "    ('C9', 'C6'): {'C9'},\n",
        "    ('C9', 'C7'): {'C9'},\n",
        "    ('C9', 'C8'): {'C9'},\n",
        "    ('C9', 'C9'): {'C9'},\n",
        "}\n",
        "\n",
        "# Periksa hiperstruktur aljabar dan sifat-sifatnya\n",
        "semihipergrup = cek_semihipergrup(L, op_table)\n",
        "if semihipergrup==True:\n",
        "    print(\"(L,⊗^L) adalah semihipergrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan semihipergrup\")\n",
        "\n",
        "hvsemigrup = cek_hvsemigrup(L, op_table,semihipergrup)\n",
        "if hvsemigrup==True:\n",
        "    print(\"(L,⊗^L) adalah hvsemigrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan hvsemigrup\")\n",
        "\n",
        "kuasihipergrup = cek_kuasihipergrup(L, op_table)\n",
        "if kuasihipergrup==True:\n",
        "    print(\"(L,⊗^L) adalah quasihipergrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan quasihipergrup\")\n",
        "\n",
        "hipergrup = cek_hipergrup(semihipergrup, kuasihipergrup)\n",
        "if hipergrup==True:\n",
        "    print(\"(L,⊗^L) adalah hipergrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan hipergrup\")\n",
        "\n",
        "komutatif = cek_komutatif(L, op_table)\n",
        "if komutatif==True:\n",
        "    print(\"(L,⊗^L) bersifat komutatif\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak bersifat komutatif\")\n",
        "\n",
        "idenskalar, data1 = cek_identitas_skalar(L, op_table)\n",
        "if idenskalar==True:\n",
        "    print(f\"Identitas skalar dari (L,⊗^L) = {data1}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak memiliki identitas skalar\")\n",
        "\n",
        "kanonik = cek_kanonik(L,op_table,semihipergrup,idenskalar,data1,komutatif)\n",
        "if kanonik==True:\n",
        "    print(\"(L,⊗^L) adalah hipergrup kanonik\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan hipergrup kanonik\")\n",
        "\n",
        "identitas, data2 = cek_identitas(L, op_table)\n",
        "if identitas==True:\n",
        "    print(f\"Identitas dari (L,⊗^L) = {data2}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak memiliki identitas\")\n",
        "\n",
        "invers = cek_invers(L, op_table, data2)\n",
        "reguler = cek_reguler(identitas,invers,hipergrup)\n",
        "if reguler==True:\n",
        "    print(\"(L,⊗^L) adalah hipergrup reguler\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan hipergrup reguler\")\n",
        "\n",
        "siklik, generator= cek_hipergrup_siklik(L, op_table,hipergrup)\n",
        "if siklik==True:\n",
        "    print(f\"(L,⊗^L) adalah hipergrup siklik dengan elemen generator dan derajatnya {generator}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) bukan hipergrup siklik.\")\n",
        "\n",
        "idempoten, data3 = cek_idempoten(L, op_table)\n",
        "if idempoten==True:\n",
        "    print(f\"Elemen idempoten dari (L,⊗^L) = {data3}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak memiliki elemen idempoten\")\n",
        "\n",
        "subset_stabil = cari_subset_stabil(L, op_table)\n",
        "subhipergrup, data4 = cek_subhipergrup(subset_stabil, op_table,hipergrup)\n",
        "if subhipergrup==True:\n",
        "    print(f\"Subhipergrup dari (L,⊗^L) berjumlah {len(data4)} yaitu = {data4}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak memiliki subhipergrup\")\n",
        "\n",
        "subnormal, data5 = cek_subnormal(L,subhipergrup, op_table,hipergrup)\n",
        "if subnormal==True:\n",
        "    print(f\"Subhipergrup normal dari (L,⊗^L) berjumlah {len(data5)} yaitu = {data5}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak memiliki subhipergrup normal\")\n",
        "\n",
        "sublin, data6 = subset_linier(L,subset_stabil, op_table,hipergrup)\n",
        "if sublin==True:\n",
        "    print(f\"Subset linier dari (L,⊗^L) berjumlah {len(data6)} yaitu = {data6}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L) tidak memiliki subset linier\")"
      ],
      "metadata": {
        "id": "rW4Lc7hwy7CA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fe5dcb6a-0e31-48e9-8ec4-4512bd92b107"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(C1 ⊗ C1) ⊗ C1 = C1 ⊗ (C1 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C2 = C1 ⊗ (C1 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C3 = C1 ⊗ (C1 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C4 = C1 ⊗ (C1 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C5 = C1 ⊗ (C1 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C6 = C1 ⊗ (C1 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C7 = C1 ⊗ (C1 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C8 = C1 ⊗ (C1 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C9 = C1 ⊗ (C1 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C1 = C1 ⊗ (C2 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C2 = C1 ⊗ (C2 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C3 = C1 ⊗ (C2 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C4 = C1 ⊗ (C2 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C5 = C1 ⊗ (C2 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C6 = C1 ⊗ (C2 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C7 = C1 ⊗ (C2 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C8 = C1 ⊗ (C2 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C2) ⊗ C9 = C1 ⊗ (C2 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C1 = C1 ⊗ (C3 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C2 = C1 ⊗ (C3 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C3 = C1 ⊗ (C3 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C4 = C1 ⊗ (C3 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C5 = C1 ⊗ (C3 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C6 = C1 ⊗ (C3 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C7 = C1 ⊗ (C3 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C8 = C1 ⊗ (C3 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C9 = C1 ⊗ (C3 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C1 = C1 ⊗ (C4 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C2 = C1 ⊗ (C4 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C3 = C1 ⊗ (C4 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C4 = C1 ⊗ (C4 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C5 = C1 ⊗ (C4 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C6 = C1 ⊗ (C4 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C7 = C1 ⊗ (C4 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C8 = C1 ⊗ (C4 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C9 = C1 ⊗ (C4 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C1 = C1 ⊗ (C5 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C2 = C1 ⊗ (C5 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C3 = C1 ⊗ (C5 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C4 = C1 ⊗ (C5 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C5 = C1 ⊗ (C5 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C6 = C1 ⊗ (C5 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C7 = C1 ⊗ (C5 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C8 = C1 ⊗ (C5 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C9 = C1 ⊗ (C5 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C1 = C1 ⊗ (C6 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C2 = C1 ⊗ (C6 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C3 = C1 ⊗ (C6 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C4 = C1 ⊗ (C6 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C5 = C1 ⊗ (C6 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C6 = C1 ⊗ (C6 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C7 = C1 ⊗ (C6 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C8 = C1 ⊗ (C6 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C9 = C1 ⊗ (C6 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C1 = C1 ⊗ (C7 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C2 = C1 ⊗ (C7 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C3 = C1 ⊗ (C7 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C4 = C1 ⊗ (C7 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C5 = C1 ⊗ (C7 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C6 = C1 ⊗ (C7 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C7 = C1 ⊗ (C7 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C8 = C1 ⊗ (C7 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C9 = C1 ⊗ (C7 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C1 = C1 ⊗ (C8 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C2 = C1 ⊗ (C8 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C3 = C1 ⊗ (C8 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C4 = C1 ⊗ (C8 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C5 = C1 ⊗ (C8 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C6 = C1 ⊗ (C8 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C7 = C1 ⊗ (C8 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C8 = C1 ⊗ (C8 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C9 = C1 ⊗ (C8 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C1 = C1 ⊗ (C9 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C2 = C1 ⊗ (C9 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C3 = C1 ⊗ (C9 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C4 = C1 ⊗ (C9 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C5 = C1 ⊗ (C9 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C6 = C1 ⊗ (C9 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C7 = C1 ⊗ (C9 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C8 = C1 ⊗ (C9 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C9 = C1 ⊗ (C9 ⊗ C9) = {'C1'}\n",
            "(C2 ⊗ C1) ⊗ C1 = C2 ⊗ (C1 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C2 = C2 ⊗ (C1 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C3 = C2 ⊗ (C1 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C4 = C2 ⊗ (C1 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C5 = C2 ⊗ (C1 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C6 = C2 ⊗ (C1 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C7 = C2 ⊗ (C1 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C8 = C2 ⊗ (C1 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C9 = C2 ⊗ (C1 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C1 = C2 ⊗ (C2 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C2 = C2 ⊗ (C2 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C3 = C2 ⊗ (C2 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C4 = C2 ⊗ (C2 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C5 = C2 ⊗ (C2 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C6 = C2 ⊗ (C2 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C7 = C2 ⊗ (C2 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C8 = C2 ⊗ (C2 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C2) ⊗ C9 = C2 ⊗ (C2 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C1 = C2 ⊗ (C3 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C2 = C2 ⊗ (C3 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C3 = C2 ⊗ (C3 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C4 = C2 ⊗ (C3 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C5 = C2 ⊗ (C3 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C6 = C2 ⊗ (C3 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C7 = C2 ⊗ (C3 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C8 = C2 ⊗ (C3 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C9 = C2 ⊗ (C3 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C1 = C2 ⊗ (C4 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C2 = C2 ⊗ (C4 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C3 = C2 ⊗ (C4 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C4 = C2 ⊗ (C4 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C5 = C2 ⊗ (C4 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C6 = C2 ⊗ (C4 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C7 = C2 ⊗ (C4 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C8 = C2 ⊗ (C4 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C9 = C2 ⊗ (C4 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C1 = C2 ⊗ (C5 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C2 = C2 ⊗ (C5 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C3 = C2 ⊗ (C5 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C4 = C2 ⊗ (C5 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C5 = C2 ⊗ (C5 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C6 = C2 ⊗ (C5 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C7 = C2 ⊗ (C5 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C8 = C2 ⊗ (C5 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C9 = C2 ⊗ (C5 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C1 = C2 ⊗ (C6 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C2 = C2 ⊗ (C6 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C3 = C2 ⊗ (C6 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C4 = C2 ⊗ (C6 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C5 = C2 ⊗ (C6 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C6 = C2 ⊗ (C6 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C7 = C2 ⊗ (C6 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C8 = C2 ⊗ (C6 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C9 = C2 ⊗ (C6 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C1 = C2 ⊗ (C7 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C2 = C2 ⊗ (C7 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C3 = C2 ⊗ (C7 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C4 = C2 ⊗ (C7 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C5 = C2 ⊗ (C7 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C6 = C2 ⊗ (C7 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C7 = C2 ⊗ (C7 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C8 = C2 ⊗ (C7 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C9 = C2 ⊗ (C7 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C1 = C2 ⊗ (C8 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C2 = C2 ⊗ (C8 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C3 = C2 ⊗ (C8 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C4 = C2 ⊗ (C8 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C5 = C2 ⊗ (C8 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C6 = C2 ⊗ (C8 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C7 = C2 ⊗ (C8 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C8 = C2 ⊗ (C8 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C9 = C2 ⊗ (C8 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C1 = C2 ⊗ (C9 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C2 = C2 ⊗ (C9 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C3 = C2 ⊗ (C9 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C4 = C2 ⊗ (C9 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C5 = C2 ⊗ (C9 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C6 = C2 ⊗ (C9 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C7 = C2 ⊗ (C9 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C8 = C2 ⊗ (C9 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C9 = C2 ⊗ (C9 ⊗ C9) = {'C2'}\n",
            "(C3 ⊗ C1) ⊗ C1 = C3 ⊗ (C1 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C2 = C3 ⊗ (C1 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C3 = C3 ⊗ (C1 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C4 = C3 ⊗ (C1 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C5 = C3 ⊗ (C1 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C6 = C3 ⊗ (C1 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C7 = C3 ⊗ (C1 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C8 = C3 ⊗ (C1 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C9 = C3 ⊗ (C1 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C1 = C3 ⊗ (C2 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C2 = C3 ⊗ (C2 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C3 = C3 ⊗ (C2 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C4 = C3 ⊗ (C2 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C5 = C3 ⊗ (C2 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C6 = C3 ⊗ (C2 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C7 = C3 ⊗ (C2 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C8 = C3 ⊗ (C2 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C2) ⊗ C9 = C3 ⊗ (C2 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C1 = C3 ⊗ (C3 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C2 = C3 ⊗ (C3 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C3 = C3 ⊗ (C3 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C4 = C3 ⊗ (C3 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C5 = C3 ⊗ (C3 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C6 = C3 ⊗ (C3 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C7 = C3 ⊗ (C3 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C8 = C3 ⊗ (C3 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C9 = C3 ⊗ (C3 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C1 = C3 ⊗ (C4 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C2 = C3 ⊗ (C4 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C3 = C3 ⊗ (C4 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C4 = C3 ⊗ (C4 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C5 = C3 ⊗ (C4 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C6 = C3 ⊗ (C4 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C7 = C3 ⊗ (C4 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C8 = C3 ⊗ (C4 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C9 = C3 ⊗ (C4 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C1 = C3 ⊗ (C5 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C2 = C3 ⊗ (C5 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C3 = C3 ⊗ (C5 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C4 = C3 ⊗ (C5 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C5 = C3 ⊗ (C5 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C6 = C3 ⊗ (C5 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C7 = C3 ⊗ (C5 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C8 = C3 ⊗ (C5 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C9 = C3 ⊗ (C5 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C1 = C3 ⊗ (C6 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C2 = C3 ⊗ (C6 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C3 = C3 ⊗ (C6 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C4 = C3 ⊗ (C6 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C5 = C3 ⊗ (C6 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C6 = C3 ⊗ (C6 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C7 = C3 ⊗ (C6 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C8 = C3 ⊗ (C6 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C9 = C3 ⊗ (C6 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C1 = C3 ⊗ (C7 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C2 = C3 ⊗ (C7 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C3 = C3 ⊗ (C7 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C4 = C3 ⊗ (C7 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C5 = C3 ⊗ (C7 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C6 = C3 ⊗ (C7 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C7 = C3 ⊗ (C7 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C8 = C3 ⊗ (C7 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C9 = C3 ⊗ (C7 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C1 = C3 ⊗ (C8 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C2 = C3 ⊗ (C8 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C3 = C3 ⊗ (C8 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C4 = C3 ⊗ (C8 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C5 = C3 ⊗ (C8 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C6 = C3 ⊗ (C8 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C7 = C3 ⊗ (C8 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C8 = C3 ⊗ (C8 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C9 = C3 ⊗ (C8 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C1 = C3 ⊗ (C9 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C2 = C3 ⊗ (C9 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C3 = C3 ⊗ (C9 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C4 = C3 ⊗ (C9 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C5 = C3 ⊗ (C9 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C6 = C3 ⊗ (C9 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C7 = C3 ⊗ (C9 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C8 = C3 ⊗ (C9 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C9 = C3 ⊗ (C9 ⊗ C9) = {'C3'}\n",
            "(C4 ⊗ C1) ⊗ C1 = C4 ⊗ (C1 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C2 = C4 ⊗ (C1 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C3 = C4 ⊗ (C1 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C4 = C4 ⊗ (C1 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C5 = C4 ⊗ (C1 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C6 = C4 ⊗ (C1 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C7 = C4 ⊗ (C1 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C8 = C4 ⊗ (C1 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C9 = C4 ⊗ (C1 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C1 = C4 ⊗ (C2 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C2 = C4 ⊗ (C2 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C3 = C4 ⊗ (C2 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C4 = C4 ⊗ (C2 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C5 = C4 ⊗ (C2 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C6 = C4 ⊗ (C2 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C7 = C4 ⊗ (C2 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C8 = C4 ⊗ (C2 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C2) ⊗ C9 = C4 ⊗ (C2 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C1 = C4 ⊗ (C3 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C2 = C4 ⊗ (C3 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C3 = C4 ⊗ (C3 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C4 = C4 ⊗ (C3 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C5 = C4 ⊗ (C3 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C6 = C4 ⊗ (C3 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C7 = C4 ⊗ (C3 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C8 = C4 ⊗ (C3 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C9 = C4 ⊗ (C3 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C1 = C4 ⊗ (C4 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C2 = C4 ⊗ (C4 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C3 = C4 ⊗ (C4 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C4 = C4 ⊗ (C4 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C5 = C4 ⊗ (C4 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C6 = C4 ⊗ (C4 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C7 = C4 ⊗ (C4 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C8 = C4 ⊗ (C4 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C9 = C4 ⊗ (C4 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C1 = C4 ⊗ (C5 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C2 = C4 ⊗ (C5 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C3 = C4 ⊗ (C5 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C4 = C4 ⊗ (C5 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C5 = C4 ⊗ (C5 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C6 = C4 ⊗ (C5 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C7 = C4 ⊗ (C5 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C8 = C4 ⊗ (C5 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C9 = C4 ⊗ (C5 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C1 = C4 ⊗ (C6 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C2 = C4 ⊗ (C6 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C3 = C4 ⊗ (C6 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C4 = C4 ⊗ (C6 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C5 = C4 ⊗ (C6 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C6 = C4 ⊗ (C6 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C7 = C4 ⊗ (C6 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C8 = C4 ⊗ (C6 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C9 = C4 ⊗ (C6 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C1 = C4 ⊗ (C7 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C2 = C4 ⊗ (C7 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C3 = C4 ⊗ (C7 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C4 = C4 ⊗ (C7 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C5 = C4 ⊗ (C7 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C6 = C4 ⊗ (C7 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C7 = C4 ⊗ (C7 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C8 = C4 ⊗ (C7 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C9 = C4 ⊗ (C7 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C1 = C4 ⊗ (C8 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C2 = C4 ⊗ (C8 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C3 = C4 ⊗ (C8 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C4 = C4 ⊗ (C8 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C5 = C4 ⊗ (C8 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C6 = C4 ⊗ (C8 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C7 = C4 ⊗ (C8 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C8 = C4 ⊗ (C8 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C9 = C4 ⊗ (C8 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C1 = C4 ⊗ (C9 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C2 = C4 ⊗ (C9 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C3 = C4 ⊗ (C9 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C4 = C4 ⊗ (C9 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C5 = C4 ⊗ (C9 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C6 = C4 ⊗ (C9 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C7 = C4 ⊗ (C9 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C8 = C4 ⊗ (C9 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C9 = C4 ⊗ (C9 ⊗ C9) = {'C4'}\n",
            "(C5 ⊗ C1) ⊗ C1 = C5 ⊗ (C1 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C2 = C5 ⊗ (C1 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C3 = C5 ⊗ (C1 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C4 = C5 ⊗ (C1 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C5 = C5 ⊗ (C1 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C6 = C5 ⊗ (C1 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C7 = C5 ⊗ (C1 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C8 = C5 ⊗ (C1 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C9 = C5 ⊗ (C1 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C1 = C5 ⊗ (C2 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C2 = C5 ⊗ (C2 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C3 = C5 ⊗ (C2 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C4 = C5 ⊗ (C2 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C5 = C5 ⊗ (C2 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C6 = C5 ⊗ (C2 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C7 = C5 ⊗ (C2 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C8 = C5 ⊗ (C2 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C2) ⊗ C9 = C5 ⊗ (C2 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C1 = C5 ⊗ (C3 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C2 = C5 ⊗ (C3 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C3 = C5 ⊗ (C3 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C4 = C5 ⊗ (C3 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C5 = C5 ⊗ (C3 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C6 = C5 ⊗ (C3 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C7 = C5 ⊗ (C3 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C8 = C5 ⊗ (C3 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C9 = C5 ⊗ (C3 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C1 = C5 ⊗ (C4 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C2 = C5 ⊗ (C4 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C3 = C5 ⊗ (C4 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C4 = C5 ⊗ (C4 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C5 = C5 ⊗ (C4 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C6 = C5 ⊗ (C4 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C7 = C5 ⊗ (C4 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C8 = C5 ⊗ (C4 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C9 = C5 ⊗ (C4 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C1 = C5 ⊗ (C5 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C2 = C5 ⊗ (C5 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C3 = C5 ⊗ (C5 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C4 = C5 ⊗ (C5 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C5 = C5 ⊗ (C5 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C6 = C5 ⊗ (C5 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C7 = C5 ⊗ (C5 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C8 = C5 ⊗ (C5 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C9 = C5 ⊗ (C5 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C1 = C5 ⊗ (C6 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C2 = C5 ⊗ (C6 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C3 = C5 ⊗ (C6 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C4 = C5 ⊗ (C6 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C5 = C5 ⊗ (C6 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C6 = C5 ⊗ (C6 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C7 = C5 ⊗ (C6 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C8 = C5 ⊗ (C6 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C9 = C5 ⊗ (C6 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C1 = C5 ⊗ (C7 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C2 = C5 ⊗ (C7 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C3 = C5 ⊗ (C7 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C4 = C5 ⊗ (C7 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C5 = C5 ⊗ (C7 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C6 = C5 ⊗ (C7 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C7 = C5 ⊗ (C7 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C8 = C5 ⊗ (C7 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C9 = C5 ⊗ (C7 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C1 = C5 ⊗ (C8 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C2 = C5 ⊗ (C8 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C3 = C5 ⊗ (C8 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C4 = C5 ⊗ (C8 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C5 = C5 ⊗ (C8 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C6 = C5 ⊗ (C8 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C7 = C5 ⊗ (C8 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C8 = C5 ⊗ (C8 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C9 = C5 ⊗ (C8 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C1 = C5 ⊗ (C9 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C2 = C5 ⊗ (C9 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C3 = C5 ⊗ (C9 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C4 = C5 ⊗ (C9 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C5 = C5 ⊗ (C9 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C6 = C5 ⊗ (C9 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C7 = C5 ⊗ (C9 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C8 = C5 ⊗ (C9 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C9 = C5 ⊗ (C9 ⊗ C9) = {'C5'}\n",
            "(C6 ⊗ C1) ⊗ C1 = C6 ⊗ (C1 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C2 = C6 ⊗ (C1 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C3 = C6 ⊗ (C1 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C4 = C6 ⊗ (C1 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C5 = C6 ⊗ (C1 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C6 = C6 ⊗ (C1 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C7 = C6 ⊗ (C1 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C8 = C6 ⊗ (C1 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C9 = C6 ⊗ (C1 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C1 = C6 ⊗ (C2 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C2 = C6 ⊗ (C2 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C3 = C6 ⊗ (C2 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C4 = C6 ⊗ (C2 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C5 = C6 ⊗ (C2 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C6 = C6 ⊗ (C2 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C7 = C6 ⊗ (C2 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C8 = C6 ⊗ (C2 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C2) ⊗ C9 = C6 ⊗ (C2 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C1 = C6 ⊗ (C3 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C2 = C6 ⊗ (C3 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C3 = C6 ⊗ (C3 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C4 = C6 ⊗ (C3 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C5 = C6 ⊗ (C3 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C6 = C6 ⊗ (C3 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C7 = C6 ⊗ (C3 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C8 = C6 ⊗ (C3 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C9 = C6 ⊗ (C3 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C1 = C6 ⊗ (C4 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C2 = C6 ⊗ (C4 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C3 = C6 ⊗ (C4 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C4 = C6 ⊗ (C4 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C5 = C6 ⊗ (C4 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C6 = C6 ⊗ (C4 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C7 = C6 ⊗ (C4 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C8 = C6 ⊗ (C4 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C9 = C6 ⊗ (C4 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C1 = C6 ⊗ (C5 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C2 = C6 ⊗ (C5 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C3 = C6 ⊗ (C5 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C4 = C6 ⊗ (C5 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C5 = C6 ⊗ (C5 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C6 = C6 ⊗ (C5 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C7 = C6 ⊗ (C5 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C8 = C6 ⊗ (C5 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C9 = C6 ⊗ (C5 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C1 = C6 ⊗ (C6 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C2 = C6 ⊗ (C6 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C3 = C6 ⊗ (C6 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C4 = C6 ⊗ (C6 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C5 = C6 ⊗ (C6 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C6 = C6 ⊗ (C6 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C7 = C6 ⊗ (C6 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C8 = C6 ⊗ (C6 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C9 = C6 ⊗ (C6 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C1 = C6 ⊗ (C7 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C2 = C6 ⊗ (C7 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C3 = C6 ⊗ (C7 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C4 = C6 ⊗ (C7 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C5 = C6 ⊗ (C7 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C6 = C6 ⊗ (C7 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C7 = C6 ⊗ (C7 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C8 = C6 ⊗ (C7 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C9 = C6 ⊗ (C7 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C1 = C6 ⊗ (C8 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C2 = C6 ⊗ (C8 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C3 = C6 ⊗ (C8 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C4 = C6 ⊗ (C8 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C5 = C6 ⊗ (C8 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C6 = C6 ⊗ (C8 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C7 = C6 ⊗ (C8 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C8 = C6 ⊗ (C8 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C9 = C6 ⊗ (C8 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C1 = C6 ⊗ (C9 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C2 = C6 ⊗ (C9 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C3 = C6 ⊗ (C9 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C4 = C6 ⊗ (C9 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C5 = C6 ⊗ (C9 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C6 = C6 ⊗ (C9 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C7 = C6 ⊗ (C9 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C8 = C6 ⊗ (C9 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C9 = C6 ⊗ (C9 ⊗ C9) = {'C6'}\n",
            "(C7 ⊗ C1) ⊗ C1 = C7 ⊗ (C1 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C2 = C7 ⊗ (C1 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C3 = C7 ⊗ (C1 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C4 = C7 ⊗ (C1 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C5 = C7 ⊗ (C1 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C6 = C7 ⊗ (C1 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C7 = C7 ⊗ (C1 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C8 = C7 ⊗ (C1 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C9 = C7 ⊗ (C1 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C1 = C7 ⊗ (C2 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C2 = C7 ⊗ (C2 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C3 = C7 ⊗ (C2 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C4 = C7 ⊗ (C2 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C5 = C7 ⊗ (C2 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C6 = C7 ⊗ (C2 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C7 = C7 ⊗ (C2 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C8 = C7 ⊗ (C2 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C2) ⊗ C9 = C7 ⊗ (C2 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C1 = C7 ⊗ (C3 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C2 = C7 ⊗ (C3 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C3 = C7 ⊗ (C3 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C4 = C7 ⊗ (C3 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C5 = C7 ⊗ (C3 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C6 = C7 ⊗ (C3 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C7 = C7 ⊗ (C3 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C8 = C7 ⊗ (C3 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C9 = C7 ⊗ (C3 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C1 = C7 ⊗ (C4 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C2 = C7 ⊗ (C4 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C3 = C7 ⊗ (C4 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C4 = C7 ⊗ (C4 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C5 = C7 ⊗ (C4 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C6 = C7 ⊗ (C4 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C7 = C7 ⊗ (C4 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C8 = C7 ⊗ (C4 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C9 = C7 ⊗ (C4 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C1 = C7 ⊗ (C5 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C2 = C7 ⊗ (C5 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C3 = C7 ⊗ (C5 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C4 = C7 ⊗ (C5 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C5 = C7 ⊗ (C5 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C6 = C7 ⊗ (C5 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C7 = C7 ⊗ (C5 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C8 = C7 ⊗ (C5 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C9 = C7 ⊗ (C5 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C1 = C7 ⊗ (C6 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C2 = C7 ⊗ (C6 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C3 = C7 ⊗ (C6 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C4 = C7 ⊗ (C6 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C5 = C7 ⊗ (C6 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C6 = C7 ⊗ (C6 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C7 = C7 ⊗ (C6 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C8 = C7 ⊗ (C6 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C9 = C7 ⊗ (C6 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C1 = C7 ⊗ (C7 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C2 = C7 ⊗ (C7 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C3 = C7 ⊗ (C7 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C4 = C7 ⊗ (C7 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C5 = C7 ⊗ (C7 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C6 = C7 ⊗ (C7 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C7 = C7 ⊗ (C7 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C8 = C7 ⊗ (C7 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C9 = C7 ⊗ (C7 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C1 = C7 ⊗ (C8 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C2 = C7 ⊗ (C8 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C3 = C7 ⊗ (C8 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C4 = C7 ⊗ (C8 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C5 = C7 ⊗ (C8 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C6 = C7 ⊗ (C8 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C7 = C7 ⊗ (C8 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C8 = C7 ⊗ (C8 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C9 = C7 ⊗ (C8 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C1 = C7 ⊗ (C9 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C2 = C7 ⊗ (C9 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C3 = C7 ⊗ (C9 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C4 = C7 ⊗ (C9 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C5 = C7 ⊗ (C9 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C6 = C7 ⊗ (C9 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C7 = C7 ⊗ (C9 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C8 = C7 ⊗ (C9 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C9 = C7 ⊗ (C9 ⊗ C9) = {'C7'}\n",
            "(C8 ⊗ C1) ⊗ C1 = C8 ⊗ (C1 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C2 = C8 ⊗ (C1 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C3 = C8 ⊗ (C1 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C4 = C8 ⊗ (C1 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C5 = C8 ⊗ (C1 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C6 = C8 ⊗ (C1 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C7 = C8 ⊗ (C1 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C8 = C8 ⊗ (C1 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C9 = C8 ⊗ (C1 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C1 = C8 ⊗ (C2 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C2 = C8 ⊗ (C2 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C3 = C8 ⊗ (C2 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C4 = C8 ⊗ (C2 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C5 = C8 ⊗ (C2 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C6 = C8 ⊗ (C2 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C7 = C8 ⊗ (C2 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C8 = C8 ⊗ (C2 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C2) ⊗ C9 = C8 ⊗ (C2 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C1 = C8 ⊗ (C3 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C2 = C8 ⊗ (C3 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C3 = C8 ⊗ (C3 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C4 = C8 ⊗ (C3 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C5 = C8 ⊗ (C3 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C6 = C8 ⊗ (C3 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C7 = C8 ⊗ (C3 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C8 = C8 ⊗ (C3 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C9 = C8 ⊗ (C3 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C1 = C8 ⊗ (C4 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C2 = C8 ⊗ (C4 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C3 = C8 ⊗ (C4 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C4 = C8 ⊗ (C4 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C5 = C8 ⊗ (C4 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C6 = C8 ⊗ (C4 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C7 = C8 ⊗ (C4 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C8 = C8 ⊗ (C4 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C9 = C8 ⊗ (C4 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C1 = C8 ⊗ (C5 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C2 = C8 ⊗ (C5 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C3 = C8 ⊗ (C5 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C4 = C8 ⊗ (C5 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C5 = C8 ⊗ (C5 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C6 = C8 ⊗ (C5 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C7 = C8 ⊗ (C5 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C8 = C8 ⊗ (C5 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C9 = C8 ⊗ (C5 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C1 = C8 ⊗ (C6 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C2 = C8 ⊗ (C6 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C3 = C8 ⊗ (C6 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C4 = C8 ⊗ (C6 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C5 = C8 ⊗ (C6 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C6 = C8 ⊗ (C6 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C7 = C8 ⊗ (C6 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C8 = C8 ⊗ (C6 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C9 = C8 ⊗ (C6 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C1 = C8 ⊗ (C7 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C2 = C8 ⊗ (C7 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C3 = C8 ⊗ (C7 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C4 = C8 ⊗ (C7 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C5 = C8 ⊗ (C7 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C6 = C8 ⊗ (C7 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C7 = C8 ⊗ (C7 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C8 = C8 ⊗ (C7 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C9 = C8 ⊗ (C7 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C1 = C8 ⊗ (C8 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C2 = C8 ⊗ (C8 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C3 = C8 ⊗ (C8 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C4 = C8 ⊗ (C8 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C5 = C8 ⊗ (C8 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C6 = C8 ⊗ (C8 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C7 = C8 ⊗ (C8 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C8 = C8 ⊗ (C8 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C9 = C8 ⊗ (C8 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C1 = C8 ⊗ (C9 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C2 = C8 ⊗ (C9 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C3 = C8 ⊗ (C9 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C4 = C8 ⊗ (C9 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C5 = C8 ⊗ (C9 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C6 = C8 ⊗ (C9 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C7 = C8 ⊗ (C9 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C8 = C8 ⊗ (C9 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C9 = C8 ⊗ (C9 ⊗ C9) = {'C8'}\n",
            "(C9 ⊗ C1) ⊗ C1 = C9 ⊗ (C1 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C2 = C9 ⊗ (C1 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C3 = C9 ⊗ (C1 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C4 = C9 ⊗ (C1 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C5 = C9 ⊗ (C1 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C6 = C9 ⊗ (C1 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C7 = C9 ⊗ (C1 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C8 = C9 ⊗ (C1 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C9 = C9 ⊗ (C1 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C1 = C9 ⊗ (C2 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C2 = C9 ⊗ (C2 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C3 = C9 ⊗ (C2 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C4 = C9 ⊗ (C2 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C5 = C9 ⊗ (C2 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C6 = C9 ⊗ (C2 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C7 = C9 ⊗ (C2 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C8 = C9 ⊗ (C2 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C2) ⊗ C9 = C9 ⊗ (C2 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C1 = C9 ⊗ (C3 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C2 = C9 ⊗ (C3 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C3 = C9 ⊗ (C3 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C4 = C9 ⊗ (C3 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C5 = C9 ⊗ (C3 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C6 = C9 ⊗ (C3 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C7 = C9 ⊗ (C3 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C8 = C9 ⊗ (C3 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C9 = C9 ⊗ (C3 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C1 = C9 ⊗ (C4 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C2 = C9 ⊗ (C4 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C3 = C9 ⊗ (C4 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C4 = C9 ⊗ (C4 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C5 = C9 ⊗ (C4 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C6 = C9 ⊗ (C4 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C7 = C9 ⊗ (C4 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C8 = C9 ⊗ (C4 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C9 = C9 ⊗ (C4 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C1 = C9 ⊗ (C5 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C2 = C9 ⊗ (C5 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C3 = C9 ⊗ (C5 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C4 = C9 ⊗ (C5 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C5 = C9 ⊗ (C5 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C6 = C9 ⊗ (C5 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C7 = C9 ⊗ (C5 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C8 = C9 ⊗ (C5 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C9 = C9 ⊗ (C5 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C1 = C9 ⊗ (C6 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C2 = C9 ⊗ (C6 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C3 = C9 ⊗ (C6 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C4 = C9 ⊗ (C6 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C5 = C9 ⊗ (C6 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C6 = C9 ⊗ (C6 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C7 = C9 ⊗ (C6 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C8 = C9 ⊗ (C6 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C9 = C9 ⊗ (C6 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C1 = C9 ⊗ (C7 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C2 = C9 ⊗ (C7 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C3 = C9 ⊗ (C7 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C4 = C9 ⊗ (C7 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C5 = C9 ⊗ (C7 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C6 = C9 ⊗ (C7 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C7 = C9 ⊗ (C7 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C8 = C9 ⊗ (C7 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C9 = C9 ⊗ (C7 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C1 = C9 ⊗ (C8 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C2 = C9 ⊗ (C8 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C3 = C9 ⊗ (C8 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C4 = C9 ⊗ (C8 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C5 = C9 ⊗ (C8 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C6 = C9 ⊗ (C8 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C7 = C9 ⊗ (C8 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C8 = C9 ⊗ (C8 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C9 = C9 ⊗ (C8 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C1 = C9 ⊗ (C9 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C2 = C9 ⊗ (C9 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C3 = C9 ⊗ (C9 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C4 = C9 ⊗ (C9 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C5 = C9 ⊗ (C9 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C6 = C9 ⊗ (C9 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C7 = C9 ⊗ (C9 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C8 = C9 ⊗ (C9 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C9 = C9 ⊗ (C9 ⊗ C9) = {'C9'}\n",
            "(L,⊗^L) adalah semihipergrup\n",
            "(L,⊗^L) adalah hvsemigrup\n",
            "(L,⊗^L) bukan quasihipergrup\n",
            "(L,⊗^L) bukan hipergrup\n",
            "(L,⊗^L) tidak bersifat komutatif\n",
            "(L,⊗^L) tidak memiliki identitas skalar\n",
            "(L,⊗^L) bukan hipergrup kanonik\n",
            "(L,⊗^L) tidak memiliki identitas\n",
            "(L,⊗^L) bukan hipergrup reguler\n",
            "(L,⊗^L) bukan hipergrup siklik.\n",
            "Elemen idempoten dari (L,⊗^L) = ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9']\n",
            "(L,⊗^L) tidak memiliki subhipergrup\n",
            "(L,⊗^L) tidak memiliki subhipergrup normal\n",
            "(L,⊗^L) tidak memiliki subset linier\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Proposisi 4.6"
      ],
      "metadata": {
        "id": "xH0VsuJCwxuW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Himpunan L\n",
        "L = ['C1','C2','C3','C4','C5','C6','C7','C8','C9']\n",
        "\n",
        "#Hiperoperasi\n",
        "op_table = {\n",
        "    ('C1', 'C1'): {'C1'},\n",
        "    ('C1', 'C2'): {'C2'},\n",
        "    ('C1', 'C3'): {'C3'},\n",
        "    ('C1', 'C4'): {'C4'},\n",
        "    ('C1', 'C5'): {'C5'},\n",
        "    ('C1', 'C6'): {'C6'},\n",
        "    ('C1', 'C7'): {'C7'},\n",
        "    ('C1', 'C8'): {'C8'},\n",
        "    ('C1', 'C9'): {'C9'},\n",
        "    ('C2', 'C1'): {'C2'},\n",
        "    ('C2', 'C2'): {'C3'},\n",
        "    ('C2', 'C3'): {'C4'},\n",
        "    ('C2', 'C4'): {'C5'},\n",
        "    ('C2', 'C5'): {'C6'},\n",
        "    ('C2', 'C6'): {'C7'},\n",
        "    ('C2', 'C7'): {'C8'},\n",
        "    ('C2', 'C8'): {'C9'},\n",
        "    ('C2', 'C9'): {'C1'},\n",
        "    ('C3', 'C1'): {'C3'},\n",
        "    ('C3', 'C2'): {'C4'},\n",
        "    ('C3', 'C3'): {'C5'},\n",
        "    ('C3', 'C4'): {'C6'},\n",
        "    ('C3', 'C5'): {'C7'},\n",
        "    ('C3', 'C6'): {'C8'},\n",
        "    ('C3', 'C7'): {'C9'},\n",
        "    ('C3', 'C8'): {'C1'},\n",
        "    ('C3', 'C9'): {'C2'},\n",
        "    ('C4', 'C1'): {'C4'},\n",
        "    ('C4', 'C2'): {'C5'},\n",
        "    ('C4', 'C3'): {'C6'},\n",
        "    ('C4', 'C4'): {'C7'},\n",
        "    ('C4', 'C5'): {'C8'},\n",
        "    ('C4', 'C6'): {'C9'},\n",
        "    ('C4', 'C7'): {'C1'},\n",
        "    ('C4', 'C8'): {'C2'},\n",
        "    ('C4', 'C9'): {'C3'},\n",
        "    ('C5', 'C1'): {'C5'},\n",
        "    ('C5', 'C2'): {'C6'},\n",
        "    ('C5', 'C3'): {'C7'},\n",
        "    ('C5', 'C4'): {'C8'},\n",
        "    ('C5', 'C5'): {'C9'},\n",
        "    ('C5', 'C6'): {'C1'},\n",
        "    ('C5', 'C7'): {'C2'},\n",
        "    ('C5', 'C8'): {'C3'},\n",
        "    ('C5', 'C9'): {'C4'},\n",
        "    ('C6', 'C1'): {'C6'},\n",
        "    ('C6', 'C2'): {'C7'},\n",
        "    ('C6', 'C3'): {'C8'},\n",
        "    ('C6', 'C4'): {'C9'},\n",
        "    ('C6', 'C5'): {'C1'},\n",
        "    ('C6', 'C6'): {'C2'},\n",
        "    ('C6', 'C7'): {'C3'},\n",
        "    ('C6', 'C8'): {'C4'},\n",
        "    ('C6', 'C9'): {'C5'},\n",
        "    ('C7', 'C1'): {'C7'},\n",
        "    ('C7', 'C2'): {'C8'},\n",
        "    ('C7', 'C3'): {'C9'},\n",
        "    ('C7', 'C4'): {'C1'},\n",
        "    ('C7', 'C5'): {'C2'},\n",
        "    ('C7', 'C6'): {'C3'},\n",
        "    ('C7', 'C7'): {'C4'},\n",
        "    ('C7', 'C8'): {'C5'},\n",
        "    ('C7', 'C9'): {'C6'},\n",
        "    ('C8', 'C1'): {'C8'},\n",
        "    ('C8', 'C2'): {'C9'},\n",
        "    ('C8', 'C3'): {'C1'},\n",
        "    ('C8', 'C4'): {'C2'},\n",
        "    ('C8', 'C5'): {'C3'},\n",
        "    ('C8', 'C6'): {'C4'},\n",
        "    ('C8', 'C7'): {'C5'},\n",
        "    ('C8', 'C8'): {'C6'},\n",
        "    ('C8', 'C9'): {'C7'},\n",
        "    ('C9', 'C1'): {'C9'},\n",
        "    ('C9', 'C2'): {'C1'},\n",
        "    ('C9', 'C3'): {'C2'},\n",
        "    ('C9', 'C4'): {'C3'},\n",
        "    ('C9', 'C5'): {'C4'},\n",
        "    ('C9', 'C6'): {'C5'},\n",
        "    ('C9', 'C7'): {'C6'},\n",
        "    ('C9', 'C8'): {'C7'},\n",
        "    ('C9', 'C9'): {'C8'}\n",
        "}\n",
        "\n",
        "# Periksa hiperstruktur aljabar dan sifat-sifatnya\n",
        "semihipergrup = cek_semihipergrup(L, op_table)\n",
        "if semihipergrup==True:\n",
        "    print(\"(L,⊗^L') adalah semihipergrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan semihipergrup\")\n",
        "\n",
        "hvsemigrup = cek_hvsemigrup(L, op_table,semihipergrup)\n",
        "if hvsemigrup==True:\n",
        "    print(\"(L,⊗^L') adalah hvsemigrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan hvsemigrup\")\n",
        "\n",
        "kuasihipergrup = cek_kuasihipergrup(L, op_table)\n",
        "if kuasihipergrup==True:\n",
        "    print(\"(L,⊗^L') adalah quasihipergrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan quasihipergrup\")\n",
        "\n",
        "hipergrup = cek_hipergrup(semihipergrup, kuasihipergrup)\n",
        "if hipergrup==True:\n",
        "    print(\"(L,⊗^L') adalah hipergrup\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan hipergrup\")\n",
        "\n",
        "komutatif = cek_komutatif(L, op_table)\n",
        "if komutatif==True:\n",
        "    print(\"(L,⊗^L') bersifat komutatif\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak bersifat komutatif\")\n",
        "\n",
        "idenskalar, data1 = cek_identitas_skalar(L, op_table)\n",
        "if idenskalar==True:\n",
        "    print(f\"Identitas skalar dari (L,⊗^L') = {data1}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak memiliki identitas skalar\")\n",
        "\n",
        "kanonik = cek_kanonik(L,op_table,semihipergrup,idenskalar,data1,komutatif)\n",
        "if kanonik==True:\n",
        "    print(\"(L,⊗^L') adalah hipergrup kanonik\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan hipergrup kanonik\")\n",
        "\n",
        "identitas, data2 = cek_identitas(L, op_table)\n",
        "if identitas==True:\n",
        "    print(f\"Identitas dari (L,⊗^L') = {data2}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak memiliki identitas\")\n",
        "\n",
        "invers = cek_invers(L, op_table, data2)\n",
        "reguler = cek_reguler(identitas,invers,hipergrup)\n",
        "if reguler==True:\n",
        "    print(\"(L,⊗^L') adalah hipergrup reguler\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan hipergrup reguler\")\n",
        "\n",
        "siklik, generator= cek_hipergrup_siklik(L, op_table,hipergrup)\n",
        "if siklik==True:\n",
        "    print(f\"(L,⊗^L') adalah hipergrup siklik dengan elemen generator dan derajatnya {generator}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') bukan hipergrup siklik.\")\n",
        "\n",
        "idempoten, data3 = cek_idempoten(L, op_table)\n",
        "if idempoten==True:\n",
        "    print(f\"Elemen idempoten dari (L,⊗^L') = {data3}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak memiliki elemen idempoten\")\n",
        "\n",
        "subset_stabil = cari_subset_stabil(L, op_table)\n",
        "subhipergrup, data4 = cek_subhipergrup(subset_stabil, op_table,hipergrup)\n",
        "if subhipergrup==True:\n",
        "    print(f\"Subhipergrup dari (L,⊗^L') berjumlah {len(data4)} yaitu = {data4}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak memiliki subhipergrup\")\n",
        "\n",
        "subnormal, data5 = cek_subnormal(L,subhipergrup, op_table,hipergrup)\n",
        "if subnormal==True:\n",
        "    print(f\"Subhipergrup normal dari (L,⊗^L') berjumlah {len(data5)} yaitu = {data5}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak memiliki subhipergrup normal\")\n",
        "\n",
        "sublin, data6 = subset_linier(L,subset_stabil, op_table,hipergrup)\n",
        "if sublin==True:\n",
        "    print(f\"Subset linier dari (L,⊗^L') berjumlah {len(data6)} yaitu = {data6}\")\n",
        "else:\n",
        "    print(\"(L,⊗^L') tidak memiliki subset linier\")"
      ],
      "metadata": {
        "id": "PyNEYvwYwzdx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0235792a-a799-4214-c974-742daae72519"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(C1 ⊗ C1) ⊗ C1 = C1 ⊗ (C1 ⊗ C1) = {'C1'}\n",
            "(C1 ⊗ C1) ⊗ C2 = C1 ⊗ (C1 ⊗ C2) = {'C2'}\n",
            "(C1 ⊗ C1) ⊗ C3 = C1 ⊗ (C1 ⊗ C3) = {'C3'}\n",
            "(C1 ⊗ C1) ⊗ C4 = C1 ⊗ (C1 ⊗ C4) = {'C4'}\n",
            "(C1 ⊗ C1) ⊗ C5 = C1 ⊗ (C1 ⊗ C5) = {'C5'}\n",
            "(C1 ⊗ C1) ⊗ C6 = C1 ⊗ (C1 ⊗ C6) = {'C6'}\n",
            "(C1 ⊗ C1) ⊗ C7 = C1 ⊗ (C1 ⊗ C7) = {'C7'}\n",
            "(C1 ⊗ C1) ⊗ C8 = C1 ⊗ (C1 ⊗ C8) = {'C8'}\n",
            "(C1 ⊗ C1) ⊗ C9 = C1 ⊗ (C1 ⊗ C9) = {'C9'}\n",
            "(C1 ⊗ C2) ⊗ C1 = C1 ⊗ (C2 ⊗ C1) = {'C2'}\n",
            "(C1 ⊗ C2) ⊗ C2 = C1 ⊗ (C2 ⊗ C2) = {'C3'}\n",
            "(C1 ⊗ C2) ⊗ C3 = C1 ⊗ (C2 ⊗ C3) = {'C4'}\n",
            "(C1 ⊗ C2) ⊗ C4 = C1 ⊗ (C2 ⊗ C4) = {'C5'}\n",
            "(C1 ⊗ C2) ⊗ C5 = C1 ⊗ (C2 ⊗ C5) = {'C6'}\n",
            "(C1 ⊗ C2) ⊗ C6 = C1 ⊗ (C2 ⊗ C6) = {'C7'}\n",
            "(C1 ⊗ C2) ⊗ C7 = C1 ⊗ (C2 ⊗ C7) = {'C8'}\n",
            "(C1 ⊗ C2) ⊗ C8 = C1 ⊗ (C2 ⊗ C8) = {'C9'}\n",
            "(C1 ⊗ C2) ⊗ C9 = C1 ⊗ (C2 ⊗ C9) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C1 = C1 ⊗ (C3 ⊗ C1) = {'C3'}\n",
            "(C1 ⊗ C3) ⊗ C2 = C1 ⊗ (C3 ⊗ C2) = {'C4'}\n",
            "(C1 ⊗ C3) ⊗ C3 = C1 ⊗ (C3 ⊗ C3) = {'C5'}\n",
            "(C1 ⊗ C3) ⊗ C4 = C1 ⊗ (C3 ⊗ C4) = {'C6'}\n",
            "(C1 ⊗ C3) ⊗ C5 = C1 ⊗ (C3 ⊗ C5) = {'C7'}\n",
            "(C1 ⊗ C3) ⊗ C6 = C1 ⊗ (C3 ⊗ C6) = {'C8'}\n",
            "(C1 ⊗ C3) ⊗ C7 = C1 ⊗ (C3 ⊗ C7) = {'C9'}\n",
            "(C1 ⊗ C3) ⊗ C8 = C1 ⊗ (C3 ⊗ C8) = {'C1'}\n",
            "(C1 ⊗ C3) ⊗ C9 = C1 ⊗ (C3 ⊗ C9) = {'C2'}\n",
            "(C1 ⊗ C4) ⊗ C1 = C1 ⊗ (C4 ⊗ C1) = {'C4'}\n",
            "(C1 ⊗ C4) ⊗ C2 = C1 ⊗ (C4 ⊗ C2) = {'C5'}\n",
            "(C1 ⊗ C4) ⊗ C3 = C1 ⊗ (C4 ⊗ C3) = {'C6'}\n",
            "(C1 ⊗ C4) ⊗ C4 = C1 ⊗ (C4 ⊗ C4) = {'C7'}\n",
            "(C1 ⊗ C4) ⊗ C5 = C1 ⊗ (C4 ⊗ C5) = {'C8'}\n",
            "(C1 ⊗ C4) ⊗ C6 = C1 ⊗ (C4 ⊗ C6) = {'C9'}\n",
            "(C1 ⊗ C4) ⊗ C7 = C1 ⊗ (C4 ⊗ C7) = {'C1'}\n",
            "(C1 ⊗ C4) ⊗ C8 = C1 ⊗ (C4 ⊗ C8) = {'C2'}\n",
            "(C1 ⊗ C4) ⊗ C9 = C1 ⊗ (C4 ⊗ C9) = {'C3'}\n",
            "(C1 ⊗ C5) ⊗ C1 = C1 ⊗ (C5 ⊗ C1) = {'C5'}\n",
            "(C1 ⊗ C5) ⊗ C2 = C1 ⊗ (C5 ⊗ C2) = {'C6'}\n",
            "(C1 ⊗ C5) ⊗ C3 = C1 ⊗ (C5 ⊗ C3) = {'C7'}\n",
            "(C1 ⊗ C5) ⊗ C4 = C1 ⊗ (C5 ⊗ C4) = {'C8'}\n",
            "(C1 ⊗ C5) ⊗ C5 = C1 ⊗ (C5 ⊗ C5) = {'C9'}\n",
            "(C1 ⊗ C5) ⊗ C6 = C1 ⊗ (C5 ⊗ C6) = {'C1'}\n",
            "(C1 ⊗ C5) ⊗ C7 = C1 ⊗ (C5 ⊗ C7) = {'C2'}\n",
            "(C1 ⊗ C5) ⊗ C8 = C1 ⊗ (C5 ⊗ C8) = {'C3'}\n",
            "(C1 ⊗ C5) ⊗ C9 = C1 ⊗ (C5 ⊗ C9) = {'C4'}\n",
            "(C1 ⊗ C6) ⊗ C1 = C1 ⊗ (C6 ⊗ C1) = {'C6'}\n",
            "(C1 ⊗ C6) ⊗ C2 = C1 ⊗ (C6 ⊗ C2) = {'C7'}\n",
            "(C1 ⊗ C6) ⊗ C3 = C1 ⊗ (C6 ⊗ C3) = {'C8'}\n",
            "(C1 ⊗ C6) ⊗ C4 = C1 ⊗ (C6 ⊗ C4) = {'C9'}\n",
            "(C1 ⊗ C6) ⊗ C5 = C1 ⊗ (C6 ⊗ C5) = {'C1'}\n",
            "(C1 ⊗ C6) ⊗ C6 = C1 ⊗ (C6 ⊗ C6) = {'C2'}\n",
            "(C1 ⊗ C6) ⊗ C7 = C1 ⊗ (C6 ⊗ C7) = {'C3'}\n",
            "(C1 ⊗ C6) ⊗ C8 = C1 ⊗ (C6 ⊗ C8) = {'C4'}\n",
            "(C1 ⊗ C6) ⊗ C9 = C1 ⊗ (C6 ⊗ C9) = {'C5'}\n",
            "(C1 ⊗ C7) ⊗ C1 = C1 ⊗ (C7 ⊗ C1) = {'C7'}\n",
            "(C1 ⊗ C7) ⊗ C2 = C1 ⊗ (C7 ⊗ C2) = {'C8'}\n",
            "(C1 ⊗ C7) ⊗ C3 = C1 ⊗ (C7 ⊗ C3) = {'C9'}\n",
            "(C1 ⊗ C7) ⊗ C4 = C1 ⊗ (C7 ⊗ C4) = {'C1'}\n",
            "(C1 ⊗ C7) ⊗ C5 = C1 ⊗ (C7 ⊗ C5) = {'C2'}\n",
            "(C1 ⊗ C7) ⊗ C6 = C1 ⊗ (C7 ⊗ C6) = {'C3'}\n",
            "(C1 ⊗ C7) ⊗ C7 = C1 ⊗ (C7 ⊗ C7) = {'C4'}\n",
            "(C1 ⊗ C7) ⊗ C8 = C1 ⊗ (C7 ⊗ C8) = {'C5'}\n",
            "(C1 ⊗ C7) ⊗ C9 = C1 ⊗ (C7 ⊗ C9) = {'C6'}\n",
            "(C1 ⊗ C8) ⊗ C1 = C1 ⊗ (C8 ⊗ C1) = {'C8'}\n",
            "(C1 ⊗ C8) ⊗ C2 = C1 ⊗ (C8 ⊗ C2) = {'C9'}\n",
            "(C1 ⊗ C8) ⊗ C3 = C1 ⊗ (C8 ⊗ C3) = {'C1'}\n",
            "(C1 ⊗ C8) ⊗ C4 = C1 ⊗ (C8 ⊗ C4) = {'C2'}\n",
            "(C1 ⊗ C8) ⊗ C5 = C1 ⊗ (C8 ⊗ C5) = {'C3'}\n",
            "(C1 ⊗ C8) ⊗ C6 = C1 ⊗ (C8 ⊗ C6) = {'C4'}\n",
            "(C1 ⊗ C8) ⊗ C7 = C1 ⊗ (C8 ⊗ C7) = {'C5'}\n",
            "(C1 ⊗ C8) ⊗ C8 = C1 ⊗ (C8 ⊗ C8) = {'C6'}\n",
            "(C1 ⊗ C8) ⊗ C9 = C1 ⊗ (C8 ⊗ C9) = {'C7'}\n",
            "(C1 ⊗ C9) ⊗ C1 = C1 ⊗ (C9 ⊗ C1) = {'C9'}\n",
            "(C1 ⊗ C9) ⊗ C2 = C1 ⊗ (C9 ⊗ C2) = {'C1'}\n",
            "(C1 ⊗ C9) ⊗ C3 = C1 ⊗ (C9 ⊗ C3) = {'C2'}\n",
            "(C1 ⊗ C9) ⊗ C4 = C1 ⊗ (C9 ⊗ C4) = {'C3'}\n",
            "(C1 ⊗ C9) ⊗ C5 = C1 ⊗ (C9 ⊗ C5) = {'C4'}\n",
            "(C1 ⊗ C9) ⊗ C6 = C1 ⊗ (C9 ⊗ C6) = {'C5'}\n",
            "(C1 ⊗ C9) ⊗ C7 = C1 ⊗ (C9 ⊗ C7) = {'C6'}\n",
            "(C1 ⊗ C9) ⊗ C8 = C1 ⊗ (C9 ⊗ C8) = {'C7'}\n",
            "(C1 ⊗ C9) ⊗ C9 = C1 ⊗ (C9 ⊗ C9) = {'C8'}\n",
            "(C2 ⊗ C1) ⊗ C1 = C2 ⊗ (C1 ⊗ C1) = {'C2'}\n",
            "(C2 ⊗ C1) ⊗ C2 = C2 ⊗ (C1 ⊗ C2) = {'C3'}\n",
            "(C2 ⊗ C1) ⊗ C3 = C2 ⊗ (C1 ⊗ C3) = {'C4'}\n",
            "(C2 ⊗ C1) ⊗ C4 = C2 ⊗ (C1 ⊗ C4) = {'C5'}\n",
            "(C2 ⊗ C1) ⊗ C5 = C2 ⊗ (C1 ⊗ C5) = {'C6'}\n",
            "(C2 ⊗ C1) ⊗ C6 = C2 ⊗ (C1 ⊗ C6) = {'C7'}\n",
            "(C2 ⊗ C1) ⊗ C7 = C2 ⊗ (C1 ⊗ C7) = {'C8'}\n",
            "(C2 ⊗ C1) ⊗ C8 = C2 ⊗ (C1 ⊗ C8) = {'C9'}\n",
            "(C2 ⊗ C1) ⊗ C9 = C2 ⊗ (C1 ⊗ C9) = {'C1'}\n",
            "(C2 ⊗ C2) ⊗ C1 = C2 ⊗ (C2 ⊗ C1) = {'C3'}\n",
            "(C2 ⊗ C2) ⊗ C2 = C2 ⊗ (C2 ⊗ C2) = {'C4'}\n",
            "(C2 ⊗ C2) ⊗ C3 = C2 ⊗ (C2 ⊗ C3) = {'C5'}\n",
            "(C2 ⊗ C2) ⊗ C4 = C2 ⊗ (C2 ⊗ C4) = {'C6'}\n",
            "(C2 ⊗ C2) ⊗ C5 = C2 ⊗ (C2 ⊗ C5) = {'C7'}\n",
            "(C2 ⊗ C2) ⊗ C6 = C2 ⊗ (C2 ⊗ C6) = {'C8'}\n",
            "(C2 ⊗ C2) ⊗ C7 = C2 ⊗ (C2 ⊗ C7) = {'C9'}\n",
            "(C2 ⊗ C2) ⊗ C8 = C2 ⊗ (C2 ⊗ C8) = {'C1'}\n",
            "(C2 ⊗ C2) ⊗ C9 = C2 ⊗ (C2 ⊗ C9) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C1 = C2 ⊗ (C3 ⊗ C1) = {'C4'}\n",
            "(C2 ⊗ C3) ⊗ C2 = C2 ⊗ (C3 ⊗ C2) = {'C5'}\n",
            "(C2 ⊗ C3) ⊗ C3 = C2 ⊗ (C3 ⊗ C3) = {'C6'}\n",
            "(C2 ⊗ C3) ⊗ C4 = C2 ⊗ (C3 ⊗ C4) = {'C7'}\n",
            "(C2 ⊗ C3) ⊗ C5 = C2 ⊗ (C3 ⊗ C5) = {'C8'}\n",
            "(C2 ⊗ C3) ⊗ C6 = C2 ⊗ (C3 ⊗ C6) = {'C9'}\n",
            "(C2 ⊗ C3) ⊗ C7 = C2 ⊗ (C3 ⊗ C7) = {'C1'}\n",
            "(C2 ⊗ C3) ⊗ C8 = C2 ⊗ (C3 ⊗ C8) = {'C2'}\n",
            "(C2 ⊗ C3) ⊗ C9 = C2 ⊗ (C3 ⊗ C9) = {'C3'}\n",
            "(C2 ⊗ C4) ⊗ C1 = C2 ⊗ (C4 ⊗ C1) = {'C5'}\n",
            "(C2 ⊗ C4) ⊗ C2 = C2 ⊗ (C4 ⊗ C2) = {'C6'}\n",
            "(C2 ⊗ C4) ⊗ C3 = C2 ⊗ (C4 ⊗ C3) = {'C7'}\n",
            "(C2 ⊗ C4) ⊗ C4 = C2 ⊗ (C4 ⊗ C4) = {'C8'}\n",
            "(C2 ⊗ C4) ⊗ C5 = C2 ⊗ (C4 ⊗ C5) = {'C9'}\n",
            "(C2 ⊗ C4) ⊗ C6 = C2 ⊗ (C4 ⊗ C6) = {'C1'}\n",
            "(C2 ⊗ C4) ⊗ C7 = C2 ⊗ (C4 ⊗ C7) = {'C2'}\n",
            "(C2 ⊗ C4) ⊗ C8 = C2 ⊗ (C4 ⊗ C8) = {'C3'}\n",
            "(C2 ⊗ C4) ⊗ C9 = C2 ⊗ (C4 ⊗ C9) = {'C4'}\n",
            "(C2 ⊗ C5) ⊗ C1 = C2 ⊗ (C5 ⊗ C1) = {'C6'}\n",
            "(C2 ⊗ C5) ⊗ C2 = C2 ⊗ (C5 ⊗ C2) = {'C7'}\n",
            "(C2 ⊗ C5) ⊗ C3 = C2 ⊗ (C5 ⊗ C3) = {'C8'}\n",
            "(C2 ⊗ C5) ⊗ C4 = C2 ⊗ (C5 ⊗ C4) = {'C9'}\n",
            "(C2 ⊗ C5) ⊗ C5 = C2 ⊗ (C5 ⊗ C5) = {'C1'}\n",
            "(C2 ⊗ C5) ⊗ C6 = C2 ⊗ (C5 ⊗ C6) = {'C2'}\n",
            "(C2 ⊗ C5) ⊗ C7 = C2 ⊗ (C5 ⊗ C7) = {'C3'}\n",
            "(C2 ⊗ C5) ⊗ C8 = C2 ⊗ (C5 ⊗ C8) = {'C4'}\n",
            "(C2 ⊗ C5) ⊗ C9 = C2 ⊗ (C5 ⊗ C9) = {'C5'}\n",
            "(C2 ⊗ C6) ⊗ C1 = C2 ⊗ (C6 ⊗ C1) = {'C7'}\n",
            "(C2 ⊗ C6) ⊗ C2 = C2 ⊗ (C6 ⊗ C2) = {'C8'}\n",
            "(C2 ⊗ C6) ⊗ C3 = C2 ⊗ (C6 ⊗ C3) = {'C9'}\n",
            "(C2 ⊗ C6) ⊗ C4 = C2 ⊗ (C6 ⊗ C4) = {'C1'}\n",
            "(C2 ⊗ C6) ⊗ C5 = C2 ⊗ (C6 ⊗ C5) = {'C2'}\n",
            "(C2 ⊗ C6) ⊗ C6 = C2 ⊗ (C6 ⊗ C6) = {'C3'}\n",
            "(C2 ⊗ C6) ⊗ C7 = C2 ⊗ (C6 ⊗ C7) = {'C4'}\n",
            "(C2 ⊗ C6) ⊗ C8 = C2 ⊗ (C6 ⊗ C8) = {'C5'}\n",
            "(C2 ⊗ C6) ⊗ C9 = C2 ⊗ (C6 ⊗ C9) = {'C6'}\n",
            "(C2 ⊗ C7) ⊗ C1 = C2 ⊗ (C7 ⊗ C1) = {'C8'}\n",
            "(C2 ⊗ C7) ⊗ C2 = C2 ⊗ (C7 ⊗ C2) = {'C9'}\n",
            "(C2 ⊗ C7) ⊗ C3 = C2 ⊗ (C7 ⊗ C3) = {'C1'}\n",
            "(C2 ⊗ C7) ⊗ C4 = C2 ⊗ (C7 ⊗ C4) = {'C2'}\n",
            "(C2 ⊗ C7) ⊗ C5 = C2 ⊗ (C7 ⊗ C5) = {'C3'}\n",
            "(C2 ⊗ C7) ⊗ C6 = C2 ⊗ (C7 ⊗ C6) = {'C4'}\n",
            "(C2 ⊗ C7) ⊗ C7 = C2 ⊗ (C7 ⊗ C7) = {'C5'}\n",
            "(C2 ⊗ C7) ⊗ C8 = C2 ⊗ (C7 ⊗ C8) = {'C6'}\n",
            "(C2 ⊗ C7) ⊗ C9 = C2 ⊗ (C7 ⊗ C9) = {'C7'}\n",
            "(C2 ⊗ C8) ⊗ C1 = C2 ⊗ (C8 ⊗ C1) = {'C9'}\n",
            "(C2 ⊗ C8) ⊗ C2 = C2 ⊗ (C8 ⊗ C2) = {'C1'}\n",
            "(C2 ⊗ C8) ⊗ C3 = C2 ⊗ (C8 ⊗ C3) = {'C2'}\n",
            "(C2 ⊗ C8) ⊗ C4 = C2 ⊗ (C8 ⊗ C4) = {'C3'}\n",
            "(C2 ⊗ C8) ⊗ C5 = C2 ⊗ (C8 ⊗ C5) = {'C4'}\n",
            "(C2 ⊗ C8) ⊗ C6 = C2 ⊗ (C8 ⊗ C6) = {'C5'}\n",
            "(C2 ⊗ C8) ⊗ C7 = C2 ⊗ (C8 ⊗ C7) = {'C6'}\n",
            "(C2 ⊗ C8) ⊗ C8 = C2 ⊗ (C8 ⊗ C8) = {'C7'}\n",
            "(C2 ⊗ C8) ⊗ C9 = C2 ⊗ (C8 ⊗ C9) = {'C8'}\n",
            "(C2 ⊗ C9) ⊗ C1 = C2 ⊗ (C9 ⊗ C1) = {'C1'}\n",
            "(C2 ⊗ C9) ⊗ C2 = C2 ⊗ (C9 ⊗ C2) = {'C2'}\n",
            "(C2 ⊗ C9) ⊗ C3 = C2 ⊗ (C9 ⊗ C3) = {'C3'}\n",
            "(C2 ⊗ C9) ⊗ C4 = C2 ⊗ (C9 ⊗ C4) = {'C4'}\n",
            "(C2 ⊗ C9) ⊗ C5 = C2 ⊗ (C9 ⊗ C5) = {'C5'}\n",
            "(C2 ⊗ C9) ⊗ C6 = C2 ⊗ (C9 ⊗ C6) = {'C6'}\n",
            "(C2 ⊗ C9) ⊗ C7 = C2 ⊗ (C9 ⊗ C7) = {'C7'}\n",
            "(C2 ⊗ C9) ⊗ C8 = C2 ⊗ (C9 ⊗ C8) = {'C8'}\n",
            "(C2 ⊗ C9) ⊗ C9 = C2 ⊗ (C9 ⊗ C9) = {'C9'}\n",
            "(C3 ⊗ C1) ⊗ C1 = C3 ⊗ (C1 ⊗ C1) = {'C3'}\n",
            "(C3 ⊗ C1) ⊗ C2 = C3 ⊗ (C1 ⊗ C2) = {'C4'}\n",
            "(C3 ⊗ C1) ⊗ C3 = C3 ⊗ (C1 ⊗ C3) = {'C5'}\n",
            "(C3 ⊗ C1) ⊗ C4 = C3 ⊗ (C1 ⊗ C4) = {'C6'}\n",
            "(C3 ⊗ C1) ⊗ C5 = C3 ⊗ (C1 ⊗ C5) = {'C7'}\n",
            "(C3 ⊗ C1) ⊗ C6 = C3 ⊗ (C1 ⊗ C6) = {'C8'}\n",
            "(C3 ⊗ C1) ⊗ C7 = C3 ⊗ (C1 ⊗ C7) = {'C9'}\n",
            "(C3 ⊗ C1) ⊗ C8 = C3 ⊗ (C1 ⊗ C8) = {'C1'}\n",
            "(C3 ⊗ C1) ⊗ C9 = C3 ⊗ (C1 ⊗ C9) = {'C2'}\n",
            "(C3 ⊗ C2) ⊗ C1 = C3 ⊗ (C2 ⊗ C1) = {'C4'}\n",
            "(C3 ⊗ C2) ⊗ C2 = C3 ⊗ (C2 ⊗ C2) = {'C5'}\n",
            "(C3 ⊗ C2) ⊗ C3 = C3 ⊗ (C2 ⊗ C3) = {'C6'}\n",
            "(C3 ⊗ C2) ⊗ C4 = C3 ⊗ (C2 ⊗ C4) = {'C7'}\n",
            "(C3 ⊗ C2) ⊗ C5 = C3 ⊗ (C2 ⊗ C5) = {'C8'}\n",
            "(C3 ⊗ C2) ⊗ C6 = C3 ⊗ (C2 ⊗ C6) = {'C9'}\n",
            "(C3 ⊗ C2) ⊗ C7 = C3 ⊗ (C2 ⊗ C7) = {'C1'}\n",
            "(C3 ⊗ C2) ⊗ C8 = C3 ⊗ (C2 ⊗ C8) = {'C2'}\n",
            "(C3 ⊗ C2) ⊗ C9 = C3 ⊗ (C2 ⊗ C9) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C1 = C3 ⊗ (C3 ⊗ C1) = {'C5'}\n",
            "(C3 ⊗ C3) ⊗ C2 = C3 ⊗ (C3 ⊗ C2) = {'C6'}\n",
            "(C3 ⊗ C3) ⊗ C3 = C3 ⊗ (C3 ⊗ C3) = {'C7'}\n",
            "(C3 ⊗ C3) ⊗ C4 = C3 ⊗ (C3 ⊗ C4) = {'C8'}\n",
            "(C3 ⊗ C3) ⊗ C5 = C3 ⊗ (C3 ⊗ C5) = {'C9'}\n",
            "(C3 ⊗ C3) ⊗ C6 = C3 ⊗ (C3 ⊗ C6) = {'C1'}\n",
            "(C3 ⊗ C3) ⊗ C7 = C3 ⊗ (C3 ⊗ C7) = {'C2'}\n",
            "(C3 ⊗ C3) ⊗ C8 = C3 ⊗ (C3 ⊗ C8) = {'C3'}\n",
            "(C3 ⊗ C3) ⊗ C9 = C3 ⊗ (C3 ⊗ C9) = {'C4'}\n",
            "(C3 ⊗ C4) ⊗ C1 = C3 ⊗ (C4 ⊗ C1) = {'C6'}\n",
            "(C3 ⊗ C4) ⊗ C2 = C3 ⊗ (C4 ⊗ C2) = {'C7'}\n",
            "(C3 ⊗ C4) ⊗ C3 = C3 ⊗ (C4 ⊗ C3) = {'C8'}\n",
            "(C3 ⊗ C4) ⊗ C4 = C3 ⊗ (C4 ⊗ C4) = {'C9'}\n",
            "(C3 ⊗ C4) ⊗ C5 = C3 ⊗ (C4 ⊗ C5) = {'C1'}\n",
            "(C3 ⊗ C4) ⊗ C6 = C3 ⊗ (C4 ⊗ C6) = {'C2'}\n",
            "(C3 ⊗ C4) ⊗ C7 = C3 ⊗ (C4 ⊗ C7) = {'C3'}\n",
            "(C3 ⊗ C4) ⊗ C8 = C3 ⊗ (C4 ⊗ C8) = {'C4'}\n",
            "(C3 ⊗ C4) ⊗ C9 = C3 ⊗ (C4 ⊗ C9) = {'C5'}\n",
            "(C3 ⊗ C5) ⊗ C1 = C3 ⊗ (C5 ⊗ C1) = {'C7'}\n",
            "(C3 ⊗ C5) ⊗ C2 = C3 ⊗ (C5 ⊗ C2) = {'C8'}\n",
            "(C3 ⊗ C5) ⊗ C3 = C3 ⊗ (C5 ⊗ C3) = {'C9'}\n",
            "(C3 ⊗ C5) ⊗ C4 = C3 ⊗ (C5 ⊗ C4) = {'C1'}\n",
            "(C3 ⊗ C5) ⊗ C5 = C3 ⊗ (C5 ⊗ C5) = {'C2'}\n",
            "(C3 ⊗ C5) ⊗ C6 = C3 ⊗ (C5 ⊗ C6) = {'C3'}\n",
            "(C3 ⊗ C5) ⊗ C7 = C3 ⊗ (C5 ⊗ C7) = {'C4'}\n",
            "(C3 ⊗ C5) ⊗ C8 = C3 ⊗ (C5 ⊗ C8) = {'C5'}\n",
            "(C3 ⊗ C5) ⊗ C9 = C3 ⊗ (C5 ⊗ C9) = {'C6'}\n",
            "(C3 ⊗ C6) ⊗ C1 = C3 ⊗ (C6 ⊗ C1) = {'C8'}\n",
            "(C3 ⊗ C6) ⊗ C2 = C3 ⊗ (C6 ⊗ C2) = {'C9'}\n",
            "(C3 ⊗ C6) ⊗ C3 = C3 ⊗ (C6 ⊗ C3) = {'C1'}\n",
            "(C3 ⊗ C6) ⊗ C4 = C3 ⊗ (C6 ⊗ C4) = {'C2'}\n",
            "(C3 ⊗ C6) ⊗ C5 = C3 ⊗ (C6 ⊗ C5) = {'C3'}\n",
            "(C3 ⊗ C6) ⊗ C6 = C3 ⊗ (C6 ⊗ C6) = {'C4'}\n",
            "(C3 ⊗ C6) ⊗ C7 = C3 ⊗ (C6 ⊗ C7) = {'C5'}\n",
            "(C3 ⊗ C6) ⊗ C8 = C3 ⊗ (C6 ⊗ C8) = {'C6'}\n",
            "(C3 ⊗ C6) ⊗ C9 = C3 ⊗ (C6 ⊗ C9) = {'C7'}\n",
            "(C3 ⊗ C7) ⊗ C1 = C3 ⊗ (C7 ⊗ C1) = {'C9'}\n",
            "(C3 ⊗ C7) ⊗ C2 = C3 ⊗ (C7 ⊗ C2) = {'C1'}\n",
            "(C3 ⊗ C7) ⊗ C3 = C3 ⊗ (C7 ⊗ C3) = {'C2'}\n",
            "(C3 ⊗ C7) ⊗ C4 = C3 ⊗ (C7 ⊗ C4) = {'C3'}\n",
            "(C3 ⊗ C7) ⊗ C5 = C3 ⊗ (C7 ⊗ C5) = {'C4'}\n",
            "(C3 ⊗ C7) ⊗ C6 = C3 ⊗ (C7 ⊗ C6) = {'C5'}\n",
            "(C3 ⊗ C7) ⊗ C7 = C3 ⊗ (C7 ⊗ C7) = {'C6'}\n",
            "(C3 ⊗ C7) ⊗ C8 = C3 ⊗ (C7 ⊗ C8) = {'C7'}\n",
            "(C3 ⊗ C7) ⊗ C9 = C3 ⊗ (C7 ⊗ C9) = {'C8'}\n",
            "(C3 ⊗ C8) ⊗ C1 = C3 ⊗ (C8 ⊗ C1) = {'C1'}\n",
            "(C3 ⊗ C8) ⊗ C2 = C3 ⊗ (C8 ⊗ C2) = {'C2'}\n",
            "(C3 ⊗ C8) ⊗ C3 = C3 ⊗ (C8 ⊗ C3) = {'C3'}\n",
            "(C3 ⊗ C8) ⊗ C4 = C3 ⊗ (C8 ⊗ C4) = {'C4'}\n",
            "(C3 ⊗ C8) ⊗ C5 = C3 ⊗ (C8 ⊗ C5) = {'C5'}\n",
            "(C3 ⊗ C8) ⊗ C6 = C3 ⊗ (C8 ⊗ C6) = {'C6'}\n",
            "(C3 ⊗ C8) ⊗ C7 = C3 ⊗ (C8 ⊗ C7) = {'C7'}\n",
            "(C3 ⊗ C8) ⊗ C8 = C3 ⊗ (C8 ⊗ C8) = {'C8'}\n",
            "(C3 ⊗ C8) ⊗ C9 = C3 ⊗ (C8 ⊗ C9) = {'C9'}\n",
            "(C3 ⊗ C9) ⊗ C1 = C3 ⊗ (C9 ⊗ C1) = {'C2'}\n",
            "(C3 ⊗ C9) ⊗ C2 = C3 ⊗ (C9 ⊗ C2) = {'C3'}\n",
            "(C3 ⊗ C9) ⊗ C3 = C3 ⊗ (C9 ⊗ C3) = {'C4'}\n",
            "(C3 ⊗ C9) ⊗ C4 = C3 ⊗ (C9 ⊗ C4) = {'C5'}\n",
            "(C3 ⊗ C9) ⊗ C5 = C3 ⊗ (C9 ⊗ C5) = {'C6'}\n",
            "(C3 ⊗ C9) ⊗ C6 = C3 ⊗ (C9 ⊗ C6) = {'C7'}\n",
            "(C3 ⊗ C9) ⊗ C7 = C3 ⊗ (C9 ⊗ C7) = {'C8'}\n",
            "(C3 ⊗ C9) ⊗ C8 = C3 ⊗ (C9 ⊗ C8) = {'C9'}\n",
            "(C3 ⊗ C9) ⊗ C9 = C3 ⊗ (C9 ⊗ C9) = {'C1'}\n",
            "(C4 ⊗ C1) ⊗ C1 = C4 ⊗ (C1 ⊗ C1) = {'C4'}\n",
            "(C4 ⊗ C1) ⊗ C2 = C4 ⊗ (C1 ⊗ C2) = {'C5'}\n",
            "(C4 ⊗ C1) ⊗ C3 = C4 ⊗ (C1 ⊗ C3) = {'C6'}\n",
            "(C4 ⊗ C1) ⊗ C4 = C4 ⊗ (C1 ⊗ C4) = {'C7'}\n",
            "(C4 ⊗ C1) ⊗ C5 = C4 ⊗ (C1 ⊗ C5) = {'C8'}\n",
            "(C4 ⊗ C1) ⊗ C6 = C4 ⊗ (C1 ⊗ C6) = {'C9'}\n",
            "(C4 ⊗ C1) ⊗ C7 = C4 ⊗ (C1 ⊗ C7) = {'C1'}\n",
            "(C4 ⊗ C1) ⊗ C8 = C4 ⊗ (C1 ⊗ C8) = {'C2'}\n",
            "(C4 ⊗ C1) ⊗ C9 = C4 ⊗ (C1 ⊗ C9) = {'C3'}\n",
            "(C4 ⊗ C2) ⊗ C1 = C4 ⊗ (C2 ⊗ C1) = {'C5'}\n",
            "(C4 ⊗ C2) ⊗ C2 = C4 ⊗ (C2 ⊗ C2) = {'C6'}\n",
            "(C4 ⊗ C2) ⊗ C3 = C4 ⊗ (C2 ⊗ C3) = {'C7'}\n",
            "(C4 ⊗ C2) ⊗ C4 = C4 ⊗ (C2 ⊗ C4) = {'C8'}\n",
            "(C4 ⊗ C2) ⊗ C5 = C4 ⊗ (C2 ⊗ C5) = {'C9'}\n",
            "(C4 ⊗ C2) ⊗ C6 = C4 ⊗ (C2 ⊗ C6) = {'C1'}\n",
            "(C4 ⊗ C2) ⊗ C7 = C4 ⊗ (C2 ⊗ C7) = {'C2'}\n",
            "(C4 ⊗ C2) ⊗ C8 = C4 ⊗ (C2 ⊗ C8) = {'C3'}\n",
            "(C4 ⊗ C2) ⊗ C9 = C4 ⊗ (C2 ⊗ C9) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C1 = C4 ⊗ (C3 ⊗ C1) = {'C6'}\n",
            "(C4 ⊗ C3) ⊗ C2 = C4 ⊗ (C3 ⊗ C2) = {'C7'}\n",
            "(C4 ⊗ C3) ⊗ C3 = C4 ⊗ (C3 ⊗ C3) = {'C8'}\n",
            "(C4 ⊗ C3) ⊗ C4 = C4 ⊗ (C3 ⊗ C4) = {'C9'}\n",
            "(C4 ⊗ C3) ⊗ C5 = C4 ⊗ (C3 ⊗ C5) = {'C1'}\n",
            "(C4 ⊗ C3) ⊗ C6 = C4 ⊗ (C3 ⊗ C6) = {'C2'}\n",
            "(C4 ⊗ C3) ⊗ C7 = C4 ⊗ (C3 ⊗ C7) = {'C3'}\n",
            "(C4 ⊗ C3) ⊗ C8 = C4 ⊗ (C3 ⊗ C8) = {'C4'}\n",
            "(C4 ⊗ C3) ⊗ C9 = C4 ⊗ (C3 ⊗ C9) = {'C5'}\n",
            "(C4 ⊗ C4) ⊗ C1 = C4 ⊗ (C4 ⊗ C1) = {'C7'}\n",
            "(C4 ⊗ C4) ⊗ C2 = C4 ⊗ (C4 ⊗ C2) = {'C8'}\n",
            "(C4 ⊗ C4) ⊗ C3 = C4 ⊗ (C4 ⊗ C3) = {'C9'}\n",
            "(C4 ⊗ C4) ⊗ C4 = C4 ⊗ (C4 ⊗ C4) = {'C1'}\n",
            "(C4 ⊗ C4) ⊗ C5 = C4 ⊗ (C4 ⊗ C5) = {'C2'}\n",
            "(C4 ⊗ C4) ⊗ C6 = C4 ⊗ (C4 ⊗ C6) = {'C3'}\n",
            "(C4 ⊗ C4) ⊗ C7 = C4 ⊗ (C4 ⊗ C7) = {'C4'}\n",
            "(C4 ⊗ C4) ⊗ C8 = C4 ⊗ (C4 ⊗ C8) = {'C5'}\n",
            "(C4 ⊗ C4) ⊗ C9 = C4 ⊗ (C4 ⊗ C9) = {'C6'}\n",
            "(C4 ⊗ C5) ⊗ C1 = C4 ⊗ (C5 ⊗ C1) = {'C8'}\n",
            "(C4 ⊗ C5) ⊗ C2 = C4 ⊗ (C5 ⊗ C2) = {'C9'}\n",
            "(C4 ⊗ C5) ⊗ C3 = C4 ⊗ (C5 ⊗ C3) = {'C1'}\n",
            "(C4 ⊗ C5) ⊗ C4 = C4 ⊗ (C5 ⊗ C4) = {'C2'}\n",
            "(C4 ⊗ C5) ⊗ C5 = C4 ⊗ (C5 ⊗ C5) = {'C3'}\n",
            "(C4 ⊗ C5) ⊗ C6 = C4 ⊗ (C5 ⊗ C6) = {'C4'}\n",
            "(C4 ⊗ C5) ⊗ C7 = C4 ⊗ (C5 ⊗ C7) = {'C5'}\n",
            "(C4 ⊗ C5) ⊗ C8 = C4 ⊗ (C5 ⊗ C8) = {'C6'}\n",
            "(C4 ⊗ C5) ⊗ C9 = C4 ⊗ (C5 ⊗ C9) = {'C7'}\n",
            "(C4 ⊗ C6) ⊗ C1 = C4 ⊗ (C6 ⊗ C1) = {'C9'}\n",
            "(C4 ⊗ C6) ⊗ C2 = C4 ⊗ (C6 ⊗ C2) = {'C1'}\n",
            "(C4 ⊗ C6) ⊗ C3 = C4 ⊗ (C6 ⊗ C3) = {'C2'}\n",
            "(C4 ⊗ C6) ⊗ C4 = C4 ⊗ (C6 ⊗ C4) = {'C3'}\n",
            "(C4 ⊗ C6) ⊗ C5 = C4 ⊗ (C6 ⊗ C5) = {'C4'}\n",
            "(C4 ⊗ C6) ⊗ C6 = C4 ⊗ (C6 ⊗ C6) = {'C5'}\n",
            "(C4 ⊗ C6) ⊗ C7 = C4 ⊗ (C6 ⊗ C7) = {'C6'}\n",
            "(C4 ⊗ C6) ⊗ C8 = C4 ⊗ (C6 ⊗ C8) = {'C7'}\n",
            "(C4 ⊗ C6) ⊗ C9 = C4 ⊗ (C6 ⊗ C9) = {'C8'}\n",
            "(C4 ⊗ C7) ⊗ C1 = C4 ⊗ (C7 ⊗ C1) = {'C1'}\n",
            "(C4 ⊗ C7) ⊗ C2 = C4 ⊗ (C7 ⊗ C2) = {'C2'}\n",
            "(C4 ⊗ C7) ⊗ C3 = C4 ⊗ (C7 ⊗ C3) = {'C3'}\n",
            "(C4 ⊗ C7) ⊗ C4 = C4 ⊗ (C7 ⊗ C4) = {'C4'}\n",
            "(C4 ⊗ C7) ⊗ C5 = C4 ⊗ (C7 ⊗ C5) = {'C5'}\n",
            "(C4 ⊗ C7) ⊗ C6 = C4 ⊗ (C7 ⊗ C6) = {'C6'}\n",
            "(C4 ⊗ C7) ⊗ C7 = C4 ⊗ (C7 ⊗ C7) = {'C7'}\n",
            "(C4 ⊗ C7) ⊗ C8 = C4 ⊗ (C7 ⊗ C8) = {'C8'}\n",
            "(C4 ⊗ C7) ⊗ C9 = C4 ⊗ (C7 ⊗ C9) = {'C9'}\n",
            "(C4 ⊗ C8) ⊗ C1 = C4 ⊗ (C8 ⊗ C1) = {'C2'}\n",
            "(C4 ⊗ C8) ⊗ C2 = C4 ⊗ (C8 ⊗ C2) = {'C3'}\n",
            "(C4 ⊗ C8) ⊗ C3 = C4 ⊗ (C8 ⊗ C3) = {'C4'}\n",
            "(C4 ⊗ C8) ⊗ C4 = C4 ⊗ (C8 ⊗ C4) = {'C5'}\n",
            "(C4 ⊗ C8) ⊗ C5 = C4 ⊗ (C8 ⊗ C5) = {'C6'}\n",
            "(C4 ⊗ C8) ⊗ C6 = C4 ⊗ (C8 ⊗ C6) = {'C7'}\n",
            "(C4 ⊗ C8) ⊗ C7 = C4 ⊗ (C8 ⊗ C7) = {'C8'}\n",
            "(C4 ⊗ C8) ⊗ C8 = C4 ⊗ (C8 ⊗ C8) = {'C9'}\n",
            "(C4 ⊗ C8) ⊗ C9 = C4 ⊗ (C8 ⊗ C9) = {'C1'}\n",
            "(C4 ⊗ C9) ⊗ C1 = C4 ⊗ (C9 ⊗ C1) = {'C3'}\n",
            "(C4 ⊗ C9) ⊗ C2 = C4 ⊗ (C9 ⊗ C2) = {'C4'}\n",
            "(C4 ⊗ C9) ⊗ C3 = C4 ⊗ (C9 ⊗ C3) = {'C5'}\n",
            "(C4 ⊗ C9) ⊗ C4 = C4 ⊗ (C9 ⊗ C4) = {'C6'}\n",
            "(C4 ⊗ C9) ⊗ C5 = C4 ⊗ (C9 ⊗ C5) = {'C7'}\n",
            "(C4 ⊗ C9) ⊗ C6 = C4 ⊗ (C9 ⊗ C6) = {'C8'}\n",
            "(C4 ⊗ C9) ⊗ C7 = C4 ⊗ (C9 ⊗ C7) = {'C9'}\n",
            "(C4 ⊗ C9) ⊗ C8 = C4 ⊗ (C9 ⊗ C8) = {'C1'}\n",
            "(C4 ⊗ C9) ⊗ C9 = C4 ⊗ (C9 ⊗ C9) = {'C2'}\n",
            "(C5 ⊗ C1) ⊗ C1 = C5 ⊗ (C1 ⊗ C1) = {'C5'}\n",
            "(C5 ⊗ C1) ⊗ C2 = C5 ⊗ (C1 ⊗ C2) = {'C6'}\n",
            "(C5 ⊗ C1) ⊗ C3 = C5 ⊗ (C1 ⊗ C3) = {'C7'}\n",
            "(C5 ⊗ C1) ⊗ C4 = C5 ⊗ (C1 ⊗ C4) = {'C8'}\n",
            "(C5 ⊗ C1) ⊗ C5 = C5 ⊗ (C1 ⊗ C5) = {'C9'}\n",
            "(C5 ⊗ C1) ⊗ C6 = C5 ⊗ (C1 ⊗ C6) = {'C1'}\n",
            "(C5 ⊗ C1) ⊗ C7 = C5 ⊗ (C1 ⊗ C7) = {'C2'}\n",
            "(C5 ⊗ C1) ⊗ C8 = C5 ⊗ (C1 ⊗ C8) = {'C3'}\n",
            "(C5 ⊗ C1) ⊗ C9 = C5 ⊗ (C1 ⊗ C9) = {'C4'}\n",
            "(C5 ⊗ C2) ⊗ C1 = C5 ⊗ (C2 ⊗ C1) = {'C6'}\n",
            "(C5 ⊗ C2) ⊗ C2 = C5 ⊗ (C2 ⊗ C2) = {'C7'}\n",
            "(C5 ⊗ C2) ⊗ C3 = C5 ⊗ (C2 ⊗ C3) = {'C8'}\n",
            "(C5 ⊗ C2) ⊗ C4 = C5 ⊗ (C2 ⊗ C4) = {'C9'}\n",
            "(C5 ⊗ C2) ⊗ C5 = C5 ⊗ (C2 ⊗ C5) = {'C1'}\n",
            "(C5 ⊗ C2) ⊗ C6 = C5 ⊗ (C2 ⊗ C6) = {'C2'}\n",
            "(C5 ⊗ C2) ⊗ C7 = C5 ⊗ (C2 ⊗ C7) = {'C3'}\n",
            "(C5 ⊗ C2) ⊗ C8 = C5 ⊗ (C2 ⊗ C8) = {'C4'}\n",
            "(C5 ⊗ C2) ⊗ C9 = C5 ⊗ (C2 ⊗ C9) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C1 = C5 ⊗ (C3 ⊗ C1) = {'C7'}\n",
            "(C5 ⊗ C3) ⊗ C2 = C5 ⊗ (C3 ⊗ C2) = {'C8'}\n",
            "(C5 ⊗ C3) ⊗ C3 = C5 ⊗ (C3 ⊗ C3) = {'C9'}\n",
            "(C5 ⊗ C3) ⊗ C4 = C5 ⊗ (C3 ⊗ C4) = {'C1'}\n",
            "(C5 ⊗ C3) ⊗ C5 = C5 ⊗ (C3 ⊗ C5) = {'C2'}\n",
            "(C5 ⊗ C3) ⊗ C6 = C5 ⊗ (C3 ⊗ C6) = {'C3'}\n",
            "(C5 ⊗ C3) ⊗ C7 = C5 ⊗ (C3 ⊗ C7) = {'C4'}\n",
            "(C5 ⊗ C3) ⊗ C8 = C5 ⊗ (C3 ⊗ C8) = {'C5'}\n",
            "(C5 ⊗ C3) ⊗ C9 = C5 ⊗ (C3 ⊗ C9) = {'C6'}\n",
            "(C5 ⊗ C4) ⊗ C1 = C5 ⊗ (C4 ⊗ C1) = {'C8'}\n",
            "(C5 ⊗ C4) ⊗ C2 = C5 ⊗ (C4 ⊗ C2) = {'C9'}\n",
            "(C5 ⊗ C4) ⊗ C3 = C5 ⊗ (C4 ⊗ C3) = {'C1'}\n",
            "(C5 ⊗ C4) ⊗ C4 = C5 ⊗ (C4 ⊗ C4) = {'C2'}\n",
            "(C5 ⊗ C4) ⊗ C5 = C5 ⊗ (C4 ⊗ C5) = {'C3'}\n",
            "(C5 ⊗ C4) ⊗ C6 = C5 ⊗ (C4 ⊗ C6) = {'C4'}\n",
            "(C5 ⊗ C4) ⊗ C7 = C5 ⊗ (C4 ⊗ C7) = {'C5'}\n",
            "(C5 ⊗ C4) ⊗ C8 = C5 ⊗ (C4 ⊗ C8) = {'C6'}\n",
            "(C5 ⊗ C4) ⊗ C9 = C5 ⊗ (C4 ⊗ C9) = {'C7'}\n",
            "(C5 ⊗ C5) ⊗ C1 = C5 ⊗ (C5 ⊗ C1) = {'C9'}\n",
            "(C5 ⊗ C5) ⊗ C2 = C5 ⊗ (C5 ⊗ C2) = {'C1'}\n",
            "(C5 ⊗ C5) ⊗ C3 = C5 ⊗ (C5 ⊗ C3) = {'C2'}\n",
            "(C5 ⊗ C5) ⊗ C4 = C5 ⊗ (C5 ⊗ C4) = {'C3'}\n",
            "(C5 ⊗ C5) ⊗ C5 = C5 ⊗ (C5 ⊗ C5) = {'C4'}\n",
            "(C5 ⊗ C5) ⊗ C6 = C5 ⊗ (C5 ⊗ C6) = {'C5'}\n",
            "(C5 ⊗ C5) ⊗ C7 = C5 ⊗ (C5 ⊗ C7) = {'C6'}\n",
            "(C5 ⊗ C5) ⊗ C8 = C5 ⊗ (C5 ⊗ C8) = {'C7'}\n",
            "(C5 ⊗ C5) ⊗ C9 = C5 ⊗ (C5 ⊗ C9) = {'C8'}\n",
            "(C5 ⊗ C6) ⊗ C1 = C5 ⊗ (C6 ⊗ C1) = {'C1'}\n",
            "(C5 ⊗ C6) ⊗ C2 = C5 ⊗ (C6 ⊗ C2) = {'C2'}\n",
            "(C5 ⊗ C6) ⊗ C3 = C5 ⊗ (C6 ⊗ C3) = {'C3'}\n",
            "(C5 ⊗ C6) ⊗ C4 = C5 ⊗ (C6 ⊗ C4) = {'C4'}\n",
            "(C5 ⊗ C6) ⊗ C5 = C5 ⊗ (C6 ⊗ C5) = {'C5'}\n",
            "(C5 ⊗ C6) ⊗ C6 = C5 ⊗ (C6 ⊗ C6) = {'C6'}\n",
            "(C5 ⊗ C6) ⊗ C7 = C5 ⊗ (C6 ⊗ C7) = {'C7'}\n",
            "(C5 ⊗ C6) ⊗ C8 = C5 ⊗ (C6 ⊗ C8) = {'C8'}\n",
            "(C5 ⊗ C6) ⊗ C9 = C5 ⊗ (C6 ⊗ C9) = {'C9'}\n",
            "(C5 ⊗ C7) ⊗ C1 = C5 ⊗ (C7 ⊗ C1) = {'C2'}\n",
            "(C5 ⊗ C7) ⊗ C2 = C5 ⊗ (C7 ⊗ C2) = {'C3'}\n",
            "(C5 ⊗ C7) ⊗ C3 = C5 ⊗ (C7 ⊗ C3) = {'C4'}\n",
            "(C5 ⊗ C7) ⊗ C4 = C5 ⊗ (C7 ⊗ C4) = {'C5'}\n",
            "(C5 ⊗ C7) ⊗ C5 = C5 ⊗ (C7 ⊗ C5) = {'C6'}\n",
            "(C5 ⊗ C7) ⊗ C6 = C5 ⊗ (C7 ⊗ C6) = {'C7'}\n",
            "(C5 ⊗ C7) ⊗ C7 = C5 ⊗ (C7 ⊗ C7) = {'C8'}\n",
            "(C5 ⊗ C7) ⊗ C8 = C5 ⊗ (C7 ⊗ C8) = {'C9'}\n",
            "(C5 ⊗ C7) ⊗ C9 = C5 ⊗ (C7 ⊗ C9) = {'C1'}\n",
            "(C5 ⊗ C8) ⊗ C1 = C5 ⊗ (C8 ⊗ C1) = {'C3'}\n",
            "(C5 ⊗ C8) ⊗ C2 = C5 ⊗ (C8 ⊗ C2) = {'C4'}\n",
            "(C5 ⊗ C8) ⊗ C3 = C5 ⊗ (C8 ⊗ C3) = {'C5'}\n",
            "(C5 ⊗ C8) ⊗ C4 = C5 ⊗ (C8 ⊗ C4) = {'C6'}\n",
            "(C5 ⊗ C8) ⊗ C5 = C5 ⊗ (C8 ⊗ C5) = {'C7'}\n",
            "(C5 ⊗ C8) ⊗ C6 = C5 ⊗ (C8 ⊗ C6) = {'C8'}\n",
            "(C5 ⊗ C8) ⊗ C7 = C5 ⊗ (C8 ⊗ C7) = {'C9'}\n",
            "(C5 ⊗ C8) ⊗ C8 = C5 ⊗ (C8 ⊗ C8) = {'C1'}\n",
            "(C5 ⊗ C8) ⊗ C9 = C5 ⊗ (C8 ⊗ C9) = {'C2'}\n",
            "(C5 ⊗ C9) ⊗ C1 = C5 ⊗ (C9 ⊗ C1) = {'C4'}\n",
            "(C5 ⊗ C9) ⊗ C2 = C5 ⊗ (C9 ⊗ C2) = {'C5'}\n",
            "(C5 ⊗ C9) ⊗ C3 = C5 ⊗ (C9 ⊗ C3) = {'C6'}\n",
            "(C5 ⊗ C9) ⊗ C4 = C5 ⊗ (C9 ⊗ C4) = {'C7'}\n",
            "(C5 ⊗ C9) ⊗ C5 = C5 ⊗ (C9 ⊗ C5) = {'C8'}\n",
            "(C5 ⊗ C9) ⊗ C6 = C5 ⊗ (C9 ⊗ C6) = {'C9'}\n",
            "(C5 ⊗ C9) ⊗ C7 = C5 ⊗ (C9 ⊗ C7) = {'C1'}\n",
            "(C5 ⊗ C9) ⊗ C8 = C5 ⊗ (C9 ⊗ C8) = {'C2'}\n",
            "(C5 ⊗ C9) ⊗ C9 = C5 ⊗ (C9 ⊗ C9) = {'C3'}\n",
            "(C6 ⊗ C1) ⊗ C1 = C6 ⊗ (C1 ⊗ C1) = {'C6'}\n",
            "(C6 ⊗ C1) ⊗ C2 = C6 ⊗ (C1 ⊗ C2) = {'C7'}\n",
            "(C6 ⊗ C1) ⊗ C3 = C6 ⊗ (C1 ⊗ C3) = {'C8'}\n",
            "(C6 ⊗ C1) ⊗ C4 = C6 ⊗ (C1 ⊗ C4) = {'C9'}\n",
            "(C6 ⊗ C1) ⊗ C5 = C6 ⊗ (C1 ⊗ C5) = {'C1'}\n",
            "(C6 ⊗ C1) ⊗ C6 = C6 ⊗ (C1 ⊗ C6) = {'C2'}\n",
            "(C6 ⊗ C1) ⊗ C7 = C6 ⊗ (C1 ⊗ C7) = {'C3'}\n",
            "(C6 ⊗ C1) ⊗ C8 = C6 ⊗ (C1 ⊗ C8) = {'C4'}\n",
            "(C6 ⊗ C1) ⊗ C9 = C6 ⊗ (C1 ⊗ C9) = {'C5'}\n",
            "(C6 ⊗ C2) ⊗ C1 = C6 ⊗ (C2 ⊗ C1) = {'C7'}\n",
            "(C6 ⊗ C2) ⊗ C2 = C6 ⊗ (C2 ⊗ C2) = {'C8'}\n",
            "(C6 ⊗ C2) ⊗ C3 = C6 ⊗ (C2 ⊗ C3) = {'C9'}\n",
            "(C6 ⊗ C2) ⊗ C4 = C6 ⊗ (C2 ⊗ C4) = {'C1'}\n",
            "(C6 ⊗ C2) ⊗ C5 = C6 ⊗ (C2 ⊗ C5) = {'C2'}\n",
            "(C6 ⊗ C2) ⊗ C6 = C6 ⊗ (C2 ⊗ C6) = {'C3'}\n",
            "(C6 ⊗ C2) ⊗ C7 = C6 ⊗ (C2 ⊗ C7) = {'C4'}\n",
            "(C6 ⊗ C2) ⊗ C8 = C6 ⊗ (C2 ⊗ C8) = {'C5'}\n",
            "(C6 ⊗ C2) ⊗ C9 = C6 ⊗ (C2 ⊗ C9) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C1 = C6 ⊗ (C3 ⊗ C1) = {'C8'}\n",
            "(C6 ⊗ C3) ⊗ C2 = C6 ⊗ (C3 ⊗ C2) = {'C9'}\n",
            "(C6 ⊗ C3) ⊗ C3 = C6 ⊗ (C3 ⊗ C3) = {'C1'}\n",
            "(C6 ⊗ C3) ⊗ C4 = C6 ⊗ (C3 ⊗ C4) = {'C2'}\n",
            "(C6 ⊗ C3) ⊗ C5 = C6 ⊗ (C3 ⊗ C5) = {'C3'}\n",
            "(C6 ⊗ C3) ⊗ C6 = C6 ⊗ (C3 ⊗ C6) = {'C4'}\n",
            "(C6 ⊗ C3) ⊗ C7 = C6 ⊗ (C3 ⊗ C7) = {'C5'}\n",
            "(C6 ⊗ C3) ⊗ C8 = C6 ⊗ (C3 ⊗ C8) = {'C6'}\n",
            "(C6 ⊗ C3) ⊗ C9 = C6 ⊗ (C3 ⊗ C9) = {'C7'}\n",
            "(C6 ⊗ C4) ⊗ C1 = C6 ⊗ (C4 ⊗ C1) = {'C9'}\n",
            "(C6 ⊗ C4) ⊗ C2 = C6 ⊗ (C4 ⊗ C2) = {'C1'}\n",
            "(C6 ⊗ C4) ⊗ C3 = C6 ⊗ (C4 ⊗ C3) = {'C2'}\n",
            "(C6 ⊗ C4) ⊗ C4 = C6 ⊗ (C4 ⊗ C4) = {'C3'}\n",
            "(C6 ⊗ C4) ⊗ C5 = C6 ⊗ (C4 ⊗ C5) = {'C4'}\n",
            "(C6 ⊗ C4) ⊗ C6 = C6 ⊗ (C4 ⊗ C6) = {'C5'}\n",
            "(C6 ⊗ C4) ⊗ C7 = C6 ⊗ (C4 ⊗ C7) = {'C6'}\n",
            "(C6 ⊗ C4) ⊗ C8 = C6 ⊗ (C4 ⊗ C8) = {'C7'}\n",
            "(C6 ⊗ C4) ⊗ C9 = C6 ⊗ (C4 ⊗ C9) = {'C8'}\n",
            "(C6 ⊗ C5) ⊗ C1 = C6 ⊗ (C5 ⊗ C1) = {'C1'}\n",
            "(C6 ⊗ C5) ⊗ C2 = C6 ⊗ (C5 ⊗ C2) = {'C2'}\n",
            "(C6 ⊗ C5) ⊗ C3 = C6 ⊗ (C5 ⊗ C3) = {'C3'}\n",
            "(C6 ⊗ C5) ⊗ C4 = C6 ⊗ (C5 ⊗ C4) = {'C4'}\n",
            "(C6 ⊗ C5) ⊗ C5 = C6 ⊗ (C5 ⊗ C5) = {'C5'}\n",
            "(C6 ⊗ C5) ⊗ C6 = C6 ⊗ (C5 ⊗ C6) = {'C6'}\n",
            "(C6 ⊗ C5) ⊗ C7 = C6 ⊗ (C5 ⊗ C7) = {'C7'}\n",
            "(C6 ⊗ C5) ⊗ C8 = C6 ⊗ (C5 ⊗ C8) = {'C8'}\n",
            "(C6 ⊗ C5) ⊗ C9 = C6 ⊗ (C5 ⊗ C9) = {'C9'}\n",
            "(C6 ⊗ C6) ⊗ C1 = C6 ⊗ (C6 ⊗ C1) = {'C2'}\n",
            "(C6 ⊗ C6) ⊗ C2 = C6 ⊗ (C6 ⊗ C2) = {'C3'}\n",
            "(C6 ⊗ C6) ⊗ C3 = C6 ⊗ (C6 ⊗ C3) = {'C4'}\n",
            "(C6 ⊗ C6) ⊗ C4 = C6 ⊗ (C6 ⊗ C4) = {'C5'}\n",
            "(C6 ⊗ C6) ⊗ C5 = C6 ⊗ (C6 ⊗ C5) = {'C6'}\n",
            "(C6 ⊗ C6) ⊗ C6 = C6 ⊗ (C6 ⊗ C6) = {'C7'}\n",
            "(C6 ⊗ C6) ⊗ C7 = C6 ⊗ (C6 ⊗ C7) = {'C8'}\n",
            "(C6 ⊗ C6) ⊗ C8 = C6 ⊗ (C6 ⊗ C8) = {'C9'}\n",
            "(C6 ⊗ C6) ⊗ C9 = C6 ⊗ (C6 ⊗ C9) = {'C1'}\n",
            "(C6 ⊗ C7) ⊗ C1 = C6 ⊗ (C7 ⊗ C1) = {'C3'}\n",
            "(C6 ⊗ C7) ⊗ C2 = C6 ⊗ (C7 ⊗ C2) = {'C4'}\n",
            "(C6 ⊗ C7) ⊗ C3 = C6 ⊗ (C7 ⊗ C3) = {'C5'}\n",
            "(C6 ⊗ C7) ⊗ C4 = C6 ⊗ (C7 ⊗ C4) = {'C6'}\n",
            "(C6 ⊗ C7) ⊗ C5 = C6 ⊗ (C7 ⊗ C5) = {'C7'}\n",
            "(C6 ⊗ C7) ⊗ C6 = C6 ⊗ (C7 ⊗ C6) = {'C8'}\n",
            "(C6 ⊗ C7) ⊗ C7 = C6 ⊗ (C7 ⊗ C7) = {'C9'}\n",
            "(C6 ⊗ C7) ⊗ C8 = C6 ⊗ (C7 ⊗ C8) = {'C1'}\n",
            "(C6 ⊗ C7) ⊗ C9 = C6 ⊗ (C7 ⊗ C9) = {'C2'}\n",
            "(C6 ⊗ C8) ⊗ C1 = C6 ⊗ (C8 ⊗ C1) = {'C4'}\n",
            "(C6 ⊗ C8) ⊗ C2 = C6 ⊗ (C8 ⊗ C2) = {'C5'}\n",
            "(C6 ⊗ C8) ⊗ C3 = C6 ⊗ (C8 ⊗ C3) = {'C6'}\n",
            "(C6 ⊗ C8) ⊗ C4 = C6 ⊗ (C8 ⊗ C4) = {'C7'}\n",
            "(C6 ⊗ C8) ⊗ C5 = C6 ⊗ (C8 ⊗ C5) = {'C8'}\n",
            "(C6 ⊗ C8) ⊗ C6 = C6 ⊗ (C8 ⊗ C6) = {'C9'}\n",
            "(C6 ⊗ C8) ⊗ C7 = C6 ⊗ (C8 ⊗ C7) = {'C1'}\n",
            "(C6 ⊗ C8) ⊗ C8 = C6 ⊗ (C8 ⊗ C8) = {'C2'}\n",
            "(C6 ⊗ C8) ⊗ C9 = C6 ⊗ (C8 ⊗ C9) = {'C3'}\n",
            "(C6 ⊗ C9) ⊗ C1 = C6 ⊗ (C9 ⊗ C1) = {'C5'}\n",
            "(C6 ⊗ C9) ⊗ C2 = C6 ⊗ (C9 ⊗ C2) = {'C6'}\n",
            "(C6 ⊗ C9) ⊗ C3 = C6 ⊗ (C9 ⊗ C3) = {'C7'}\n",
            "(C6 ⊗ C9) ⊗ C4 = C6 ⊗ (C9 ⊗ C4) = {'C8'}\n",
            "(C6 ⊗ C9) ⊗ C5 = C6 ⊗ (C9 ⊗ C5) = {'C9'}\n",
            "(C6 ⊗ C9) ⊗ C6 = C6 ⊗ (C9 ⊗ C6) = {'C1'}\n",
            "(C6 ⊗ C9) ⊗ C7 = C6 ⊗ (C9 ⊗ C7) = {'C2'}\n",
            "(C6 ⊗ C9) ⊗ C8 = C6 ⊗ (C9 ⊗ C8) = {'C3'}\n",
            "(C6 ⊗ C9) ⊗ C9 = C6 ⊗ (C9 ⊗ C9) = {'C4'}\n",
            "(C7 ⊗ C1) ⊗ C1 = C7 ⊗ (C1 ⊗ C1) = {'C7'}\n",
            "(C7 ⊗ C1) ⊗ C2 = C7 ⊗ (C1 ⊗ C2) = {'C8'}\n",
            "(C7 ⊗ C1) ⊗ C3 = C7 ⊗ (C1 ⊗ C3) = {'C9'}\n",
            "(C7 ⊗ C1) ⊗ C4 = C7 ⊗ (C1 ⊗ C4) = {'C1'}\n",
            "(C7 ⊗ C1) ⊗ C5 = C7 ⊗ (C1 ⊗ C5) = {'C2'}\n",
            "(C7 ⊗ C1) ⊗ C6 = C7 ⊗ (C1 ⊗ C6) = {'C3'}\n",
            "(C7 ⊗ C1) ⊗ C7 = C7 ⊗ (C1 ⊗ C7) = {'C4'}\n",
            "(C7 ⊗ C1) ⊗ C8 = C7 ⊗ (C1 ⊗ C8) = {'C5'}\n",
            "(C7 ⊗ C1) ⊗ C9 = C7 ⊗ (C1 ⊗ C9) = {'C6'}\n",
            "(C7 ⊗ C2) ⊗ C1 = C7 ⊗ (C2 ⊗ C1) = {'C8'}\n",
            "(C7 ⊗ C2) ⊗ C2 = C7 ⊗ (C2 ⊗ C2) = {'C9'}\n",
            "(C7 ⊗ C2) ⊗ C3 = C7 ⊗ (C2 ⊗ C3) = {'C1'}\n",
            "(C7 ⊗ C2) ⊗ C4 = C7 ⊗ (C2 ⊗ C4) = {'C2'}\n",
            "(C7 ⊗ C2) ⊗ C5 = C7 ⊗ (C2 ⊗ C5) = {'C3'}\n",
            "(C7 ⊗ C2) ⊗ C6 = C7 ⊗ (C2 ⊗ C6) = {'C4'}\n",
            "(C7 ⊗ C2) ⊗ C7 = C7 ⊗ (C2 ⊗ C7) = {'C5'}\n",
            "(C7 ⊗ C2) ⊗ C8 = C7 ⊗ (C2 ⊗ C8) = {'C6'}\n",
            "(C7 ⊗ C2) ⊗ C9 = C7 ⊗ (C2 ⊗ C9) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C1 = C7 ⊗ (C3 ⊗ C1) = {'C9'}\n",
            "(C7 ⊗ C3) ⊗ C2 = C7 ⊗ (C3 ⊗ C2) = {'C1'}\n",
            "(C7 ⊗ C3) ⊗ C3 = C7 ⊗ (C3 ⊗ C3) = {'C2'}\n",
            "(C7 ⊗ C3) ⊗ C4 = C7 ⊗ (C3 ⊗ C4) = {'C3'}\n",
            "(C7 ⊗ C3) ⊗ C5 = C7 ⊗ (C3 ⊗ C5) = {'C4'}\n",
            "(C7 ⊗ C3) ⊗ C6 = C7 ⊗ (C3 ⊗ C6) = {'C5'}\n",
            "(C7 ⊗ C3) ⊗ C7 = C7 ⊗ (C3 ⊗ C7) = {'C6'}\n",
            "(C7 ⊗ C3) ⊗ C8 = C7 ⊗ (C3 ⊗ C8) = {'C7'}\n",
            "(C7 ⊗ C3) ⊗ C9 = C7 ⊗ (C3 ⊗ C9) = {'C8'}\n",
            "(C7 ⊗ C4) ⊗ C1 = C7 ⊗ (C4 ⊗ C1) = {'C1'}\n",
            "(C7 ⊗ C4) ⊗ C2 = C7 ⊗ (C4 ⊗ C2) = {'C2'}\n",
            "(C7 ⊗ C4) ⊗ C3 = C7 ⊗ (C4 ⊗ C3) = {'C3'}\n",
            "(C7 ⊗ C4) ⊗ C4 = C7 ⊗ (C4 ⊗ C4) = {'C4'}\n",
            "(C7 ⊗ C4) ⊗ C5 = C7 ⊗ (C4 ⊗ C5) = {'C5'}\n",
            "(C7 ⊗ C4) ⊗ C6 = C7 ⊗ (C4 ⊗ C6) = {'C6'}\n",
            "(C7 ⊗ C4) ⊗ C7 = C7 ⊗ (C4 ⊗ C7) = {'C7'}\n",
            "(C7 ⊗ C4) ⊗ C8 = C7 ⊗ (C4 ⊗ C8) = {'C8'}\n",
            "(C7 ⊗ C4) ⊗ C9 = C7 ⊗ (C4 ⊗ C9) = {'C9'}\n",
            "(C7 ⊗ C5) ⊗ C1 = C7 ⊗ (C5 ⊗ C1) = {'C2'}\n",
            "(C7 ⊗ C5) ⊗ C2 = C7 ⊗ (C5 ⊗ C2) = {'C3'}\n",
            "(C7 ⊗ C5) ⊗ C3 = C7 ⊗ (C5 ⊗ C3) = {'C4'}\n",
            "(C7 ⊗ C5) ⊗ C4 = C7 ⊗ (C5 ⊗ C4) = {'C5'}\n",
            "(C7 ⊗ C5) ⊗ C5 = C7 ⊗ (C5 ⊗ C5) = {'C6'}\n",
            "(C7 ⊗ C5) ⊗ C6 = C7 ⊗ (C5 ⊗ C6) = {'C7'}\n",
            "(C7 ⊗ C5) ⊗ C7 = C7 ⊗ (C5 ⊗ C7) = {'C8'}\n",
            "(C7 ⊗ C5) ⊗ C8 = C7 ⊗ (C5 ⊗ C8) = {'C9'}\n",
            "(C7 ⊗ C5) ⊗ C9 = C7 ⊗ (C5 ⊗ C9) = {'C1'}\n",
            "(C7 ⊗ C6) ⊗ C1 = C7 ⊗ (C6 ⊗ C1) = {'C3'}\n",
            "(C7 ⊗ C6) ⊗ C2 = C7 ⊗ (C6 ⊗ C2) = {'C4'}\n",
            "(C7 ⊗ C6) ⊗ C3 = C7 ⊗ (C6 ⊗ C3) = {'C5'}\n",
            "(C7 ⊗ C6) ⊗ C4 = C7 ⊗ (C6 ⊗ C4) = {'C6'}\n",
            "(C7 ⊗ C6) ⊗ C5 = C7 ⊗ (C6 ⊗ C5) = {'C7'}\n",
            "(C7 ⊗ C6) ⊗ C6 = C7 ⊗ (C6 ⊗ C6) = {'C8'}\n",
            "(C7 ⊗ C6) ⊗ C7 = C7 ⊗ (C6 ⊗ C7) = {'C9'}\n",
            "(C7 ⊗ C6) ⊗ C8 = C7 ⊗ (C6 ⊗ C8) = {'C1'}\n",
            "(C7 ⊗ C6) ⊗ C9 = C7 ⊗ (C6 ⊗ C9) = {'C2'}\n",
            "(C7 ⊗ C7) ⊗ C1 = C7 ⊗ (C7 ⊗ C1) = {'C4'}\n",
            "(C7 ⊗ C7) ⊗ C2 = C7 ⊗ (C7 ⊗ C2) = {'C5'}\n",
            "(C7 ⊗ C7) ⊗ C3 = C7 ⊗ (C7 ⊗ C3) = {'C6'}\n",
            "(C7 ⊗ C7) ⊗ C4 = C7 ⊗ (C7 ⊗ C4) = {'C7'}\n",
            "(C7 ⊗ C7) ⊗ C5 = C7 ⊗ (C7 ⊗ C5) = {'C8'}\n",
            "(C7 ⊗ C7) ⊗ C6 = C7 ⊗ (C7 ⊗ C6) = {'C9'}\n",
            "(C7 ⊗ C7) ⊗ C7 = C7 ⊗ (C7 ⊗ C7) = {'C1'}\n",
            "(C7 ⊗ C7) ⊗ C8 = C7 ⊗ (C7 ⊗ C8) = {'C2'}\n",
            "(C7 ⊗ C7) ⊗ C9 = C7 ⊗ (C7 ⊗ C9) = {'C3'}\n",
            "(C7 ⊗ C8) ⊗ C1 = C7 ⊗ (C8 ⊗ C1) = {'C5'}\n",
            "(C7 ⊗ C8) ⊗ C2 = C7 ⊗ (C8 ⊗ C2) = {'C6'}\n",
            "(C7 ⊗ C8) ⊗ C3 = C7 ⊗ (C8 ⊗ C3) = {'C7'}\n",
            "(C7 ⊗ C8) ⊗ C4 = C7 ⊗ (C8 ⊗ C4) = {'C8'}\n",
            "(C7 ⊗ C8) ⊗ C5 = C7 ⊗ (C8 ⊗ C5) = {'C9'}\n",
            "(C7 ⊗ C8) ⊗ C6 = C7 ⊗ (C8 ⊗ C6) = {'C1'}\n",
            "(C7 ⊗ C8) ⊗ C7 = C7 ⊗ (C8 ⊗ C7) = {'C2'}\n",
            "(C7 ⊗ C8) ⊗ C8 = C7 ⊗ (C8 ⊗ C8) = {'C3'}\n",
            "(C7 ⊗ C8) ⊗ C9 = C7 ⊗ (C8 ⊗ C9) = {'C4'}\n",
            "(C7 ⊗ C9) ⊗ C1 = C7 ⊗ (C9 ⊗ C1) = {'C6'}\n",
            "(C7 ⊗ C9) ⊗ C2 = C7 ⊗ (C9 ⊗ C2) = {'C7'}\n",
            "(C7 ⊗ C9) ⊗ C3 = C7 ⊗ (C9 ⊗ C3) = {'C8'}\n",
            "(C7 ⊗ C9) ⊗ C4 = C7 ⊗ (C9 ⊗ C4) = {'C9'}\n",
            "(C7 ⊗ C9) ⊗ C5 = C7 ⊗ (C9 ⊗ C5) = {'C1'}\n",
            "(C7 ⊗ C9) ⊗ C6 = C7 ⊗ (C9 ⊗ C6) = {'C2'}\n",
            "(C7 ⊗ C9) ⊗ C7 = C7 ⊗ (C9 ⊗ C7) = {'C3'}\n",
            "(C7 ⊗ C9) ⊗ C8 = C7 ⊗ (C9 ⊗ C8) = {'C4'}\n",
            "(C7 ⊗ C9) ⊗ C9 = C7 ⊗ (C9 ⊗ C9) = {'C5'}\n",
            "(C8 ⊗ C1) ⊗ C1 = C8 ⊗ (C1 ⊗ C1) = {'C8'}\n",
            "(C8 ⊗ C1) ⊗ C2 = C8 ⊗ (C1 ⊗ C2) = {'C9'}\n",
            "(C8 ⊗ C1) ⊗ C3 = C8 ⊗ (C1 ⊗ C3) = {'C1'}\n",
            "(C8 ⊗ C1) ⊗ C4 = C8 ⊗ (C1 ⊗ C4) = {'C2'}\n",
            "(C8 ⊗ C1) ⊗ C5 = C8 ⊗ (C1 ⊗ C5) = {'C3'}\n",
            "(C8 ⊗ C1) ⊗ C6 = C8 ⊗ (C1 ⊗ C6) = {'C4'}\n",
            "(C8 ⊗ C1) ⊗ C7 = C8 ⊗ (C1 ⊗ C7) = {'C5'}\n",
            "(C8 ⊗ C1) ⊗ C8 = C8 ⊗ (C1 ⊗ C8) = {'C6'}\n",
            "(C8 ⊗ C1) ⊗ C9 = C8 ⊗ (C1 ⊗ C9) = {'C7'}\n",
            "(C8 ⊗ C2) ⊗ C1 = C8 ⊗ (C2 ⊗ C1) = {'C9'}\n",
            "(C8 ⊗ C2) ⊗ C2 = C8 ⊗ (C2 ⊗ C2) = {'C1'}\n",
            "(C8 ⊗ C2) ⊗ C3 = C8 ⊗ (C2 ⊗ C3) = {'C2'}\n",
            "(C8 ⊗ C2) ⊗ C4 = C8 ⊗ (C2 ⊗ C4) = {'C3'}\n",
            "(C8 ⊗ C2) ⊗ C5 = C8 ⊗ (C2 ⊗ C5) = {'C4'}\n",
            "(C8 ⊗ C2) ⊗ C6 = C8 ⊗ (C2 ⊗ C6) = {'C5'}\n",
            "(C8 ⊗ C2) ⊗ C7 = C8 ⊗ (C2 ⊗ C7) = {'C6'}\n",
            "(C8 ⊗ C2) ⊗ C8 = C8 ⊗ (C2 ⊗ C8) = {'C7'}\n",
            "(C8 ⊗ C2) ⊗ C9 = C8 ⊗ (C2 ⊗ C9) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C1 = C8 ⊗ (C3 ⊗ C1) = {'C1'}\n",
            "(C8 ⊗ C3) ⊗ C2 = C8 ⊗ (C3 ⊗ C2) = {'C2'}\n",
            "(C8 ⊗ C3) ⊗ C3 = C8 ⊗ (C3 ⊗ C3) = {'C3'}\n",
            "(C8 ⊗ C3) ⊗ C4 = C8 ⊗ (C3 ⊗ C4) = {'C4'}\n",
            "(C8 ⊗ C3) ⊗ C5 = C8 ⊗ (C3 ⊗ C5) = {'C5'}\n",
            "(C8 ⊗ C3) ⊗ C6 = C8 ⊗ (C3 ⊗ C6) = {'C6'}\n",
            "(C8 ⊗ C3) ⊗ C7 = C8 ⊗ (C3 ⊗ C7) = {'C7'}\n",
            "(C8 ⊗ C3) ⊗ C8 = C8 ⊗ (C3 ⊗ C8) = {'C8'}\n",
            "(C8 ⊗ C3) ⊗ C9 = C8 ⊗ (C3 ⊗ C9) = {'C9'}\n",
            "(C8 ⊗ C4) ⊗ C1 = C8 ⊗ (C4 ⊗ C1) = {'C2'}\n",
            "(C8 ⊗ C4) ⊗ C2 = C8 ⊗ (C4 ⊗ C2) = {'C3'}\n",
            "(C8 ⊗ C4) ⊗ C3 = C8 ⊗ (C4 ⊗ C3) = {'C4'}\n",
            "(C8 ⊗ C4) ⊗ C4 = C8 ⊗ (C4 ⊗ C4) = {'C5'}\n",
            "(C8 ⊗ C4) ⊗ C5 = C8 ⊗ (C4 ⊗ C5) = {'C6'}\n",
            "(C8 ⊗ C4) ⊗ C6 = C8 ⊗ (C4 ⊗ C6) = {'C7'}\n",
            "(C8 ⊗ C4) ⊗ C7 = C8 ⊗ (C4 ⊗ C7) = {'C8'}\n",
            "(C8 ⊗ C4) ⊗ C8 = C8 ⊗ (C4 ⊗ C8) = {'C9'}\n",
            "(C8 ⊗ C4) ⊗ C9 = C8 ⊗ (C4 ⊗ C9) = {'C1'}\n",
            "(C8 ⊗ C5) ⊗ C1 = C8 ⊗ (C5 ⊗ C1) = {'C3'}\n",
            "(C8 ⊗ C5) ⊗ C2 = C8 ⊗ (C5 ⊗ C2) = {'C4'}\n",
            "(C8 ⊗ C5) ⊗ C3 = C8 ⊗ (C5 ⊗ C3) = {'C5'}\n",
            "(C8 ⊗ C5) ⊗ C4 = C8 ⊗ (C5 ⊗ C4) = {'C6'}\n",
            "(C8 ⊗ C5) ⊗ C5 = C8 ⊗ (C5 ⊗ C5) = {'C7'}\n",
            "(C8 ⊗ C5) ⊗ C6 = C8 ⊗ (C5 ⊗ C6) = {'C8'}\n",
            "(C8 ⊗ C5) ⊗ C7 = C8 ⊗ (C5 ⊗ C7) = {'C9'}\n",
            "(C8 ⊗ C5) ⊗ C8 = C8 ⊗ (C5 ⊗ C8) = {'C1'}\n",
            "(C8 ⊗ C5) ⊗ C9 = C8 ⊗ (C5 ⊗ C9) = {'C2'}\n",
            "(C8 ⊗ C6) ⊗ C1 = C8 ⊗ (C6 ⊗ C1) = {'C4'}\n",
            "(C8 ⊗ C6) ⊗ C2 = C8 ⊗ (C6 ⊗ C2) = {'C5'}\n",
            "(C8 ⊗ C6) ⊗ C3 = C8 ⊗ (C6 ⊗ C3) = {'C6'}\n",
            "(C8 ⊗ C6) ⊗ C4 = C8 ⊗ (C6 ⊗ C4) = {'C7'}\n",
            "(C8 ⊗ C6) ⊗ C5 = C8 ⊗ (C6 ⊗ C5) = {'C8'}\n",
            "(C8 ⊗ C6) ⊗ C6 = C8 ⊗ (C6 ⊗ C6) = {'C9'}\n",
            "(C8 ⊗ C6) ⊗ C7 = C8 ⊗ (C6 ⊗ C7) = {'C1'}\n",
            "(C8 ⊗ C6) ⊗ C8 = C8 ⊗ (C6 ⊗ C8) = {'C2'}\n",
            "(C8 ⊗ C6) ⊗ C9 = C8 ⊗ (C6 ⊗ C9) = {'C3'}\n",
            "(C8 ⊗ C7) ⊗ C1 = C8 ⊗ (C7 ⊗ C1) = {'C5'}\n",
            "(C8 ⊗ C7) ⊗ C2 = C8 ⊗ (C7 ⊗ C2) = {'C6'}\n",
            "(C8 ⊗ C7) ⊗ C3 = C8 ⊗ (C7 ⊗ C3) = {'C7'}\n",
            "(C8 ⊗ C7) ⊗ C4 = C8 ⊗ (C7 ⊗ C4) = {'C8'}\n",
            "(C8 ⊗ C7) ⊗ C5 = C8 ⊗ (C7 ⊗ C5) = {'C9'}\n",
            "(C8 ⊗ C7) ⊗ C6 = C8 ⊗ (C7 ⊗ C6) = {'C1'}\n",
            "(C8 ⊗ C7) ⊗ C7 = C8 ⊗ (C7 ⊗ C7) = {'C2'}\n",
            "(C8 ⊗ C7) ⊗ C8 = C8 ⊗ (C7 ⊗ C8) = {'C3'}\n",
            "(C8 ⊗ C7) ⊗ C9 = C8 ⊗ (C7 ⊗ C9) = {'C4'}\n",
            "(C8 ⊗ C8) ⊗ C1 = C8 ⊗ (C8 ⊗ C1) = {'C6'}\n",
            "(C8 ⊗ C8) ⊗ C2 = C8 ⊗ (C8 ⊗ C2) = {'C7'}\n",
            "(C8 ⊗ C8) ⊗ C3 = C8 ⊗ (C8 ⊗ C3) = {'C8'}\n",
            "(C8 ⊗ C8) ⊗ C4 = C8 ⊗ (C8 ⊗ C4) = {'C9'}\n",
            "(C8 ⊗ C8) ⊗ C5 = C8 ⊗ (C8 ⊗ C5) = {'C1'}\n",
            "(C8 ⊗ C8) ⊗ C6 = C8 ⊗ (C8 ⊗ C6) = {'C2'}\n",
            "(C8 ⊗ C8) ⊗ C7 = C8 ⊗ (C8 ⊗ C7) = {'C3'}\n",
            "(C8 ⊗ C8) ⊗ C8 = C8 ⊗ (C8 ⊗ C8) = {'C4'}\n",
            "(C8 ⊗ C8) ⊗ C9 = C8 ⊗ (C8 ⊗ C9) = {'C5'}\n",
            "(C8 ⊗ C9) ⊗ C1 = C8 ⊗ (C9 ⊗ C1) = {'C7'}\n",
            "(C8 ⊗ C9) ⊗ C2 = C8 ⊗ (C9 ⊗ C2) = {'C8'}\n",
            "(C8 ⊗ C9) ⊗ C3 = C8 ⊗ (C9 ⊗ C3) = {'C9'}\n",
            "(C8 ⊗ C9) ⊗ C4 = C8 ⊗ (C9 ⊗ C4) = {'C1'}\n",
            "(C8 ⊗ C9) ⊗ C5 = C8 ⊗ (C9 ⊗ C5) = {'C2'}\n",
            "(C8 ⊗ C9) ⊗ C6 = C8 ⊗ (C9 ⊗ C6) = {'C3'}\n",
            "(C8 ⊗ C9) ⊗ C7 = C8 ⊗ (C9 ⊗ C7) = {'C4'}\n",
            "(C8 ⊗ C9) ⊗ C8 = C8 ⊗ (C9 ⊗ C8) = {'C5'}\n",
            "(C8 ⊗ C9) ⊗ C9 = C8 ⊗ (C9 ⊗ C9) = {'C6'}\n",
            "(C9 ⊗ C1) ⊗ C1 = C9 ⊗ (C1 ⊗ C1) = {'C9'}\n",
            "(C9 ⊗ C1) ⊗ C2 = C9 ⊗ (C1 ⊗ C2) = {'C1'}\n",
            "(C9 ⊗ C1) ⊗ C3 = C9 ⊗ (C1 ⊗ C3) = {'C2'}\n",
            "(C9 ⊗ C1) ⊗ C4 = C9 ⊗ (C1 ⊗ C4) = {'C3'}\n",
            "(C9 ⊗ C1) ⊗ C5 = C9 ⊗ (C1 ⊗ C5) = {'C4'}\n",
            "(C9 ⊗ C1) ⊗ C6 = C9 ⊗ (C1 ⊗ C6) = {'C5'}\n",
            "(C9 ⊗ C1) ⊗ C7 = C9 ⊗ (C1 ⊗ C7) = {'C6'}\n",
            "(C9 ⊗ C1) ⊗ C8 = C9 ⊗ (C1 ⊗ C8) = {'C7'}\n",
            "(C9 ⊗ C1) ⊗ C9 = C9 ⊗ (C1 ⊗ C9) = {'C8'}\n",
            "(C9 ⊗ C2) ⊗ C1 = C9 ⊗ (C2 ⊗ C1) = {'C1'}\n",
            "(C9 ⊗ C2) ⊗ C2 = C9 ⊗ (C2 ⊗ C2) = {'C2'}\n",
            "(C9 ⊗ C2) ⊗ C3 = C9 ⊗ (C2 ⊗ C3) = {'C3'}\n",
            "(C9 ⊗ C2) ⊗ C4 = C9 ⊗ (C2 ⊗ C4) = {'C4'}\n",
            "(C9 ⊗ C2) ⊗ C5 = C9 ⊗ (C2 ⊗ C5) = {'C5'}\n",
            "(C9 ⊗ C2) ⊗ C6 = C9 ⊗ (C2 ⊗ C6) = {'C6'}\n",
            "(C9 ⊗ C2) ⊗ C7 = C9 ⊗ (C2 ⊗ C7) = {'C7'}\n",
            "(C9 ⊗ C2) ⊗ C8 = C9 ⊗ (C2 ⊗ C8) = {'C8'}\n",
            "(C9 ⊗ C2) ⊗ C9 = C9 ⊗ (C2 ⊗ C9) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C1 = C9 ⊗ (C3 ⊗ C1) = {'C2'}\n",
            "(C9 ⊗ C3) ⊗ C2 = C9 ⊗ (C3 ⊗ C2) = {'C3'}\n",
            "(C9 ⊗ C3) ⊗ C3 = C9 ⊗ (C3 ⊗ C3) = {'C4'}\n",
            "(C9 ⊗ C3) ⊗ C4 = C9 ⊗ (C3 ⊗ C4) = {'C5'}\n",
            "(C9 ⊗ C3) ⊗ C5 = C9 ⊗ (C3 ⊗ C5) = {'C6'}\n",
            "(C9 ⊗ C3) ⊗ C6 = C9 ⊗ (C3 ⊗ C6) = {'C7'}\n",
            "(C9 ⊗ C3) ⊗ C7 = C9 ⊗ (C3 ⊗ C7) = {'C8'}\n",
            "(C9 ⊗ C3) ⊗ C8 = C9 ⊗ (C3 ⊗ C8) = {'C9'}\n",
            "(C9 ⊗ C3) ⊗ C9 = C9 ⊗ (C3 ⊗ C9) = {'C1'}\n",
            "(C9 ⊗ C4) ⊗ C1 = C9 ⊗ (C4 ⊗ C1) = {'C3'}\n",
            "(C9 ⊗ C4) ⊗ C2 = C9 ⊗ (C4 ⊗ C2) = {'C4'}\n",
            "(C9 ⊗ C4) ⊗ C3 = C9 ⊗ (C4 ⊗ C3) = {'C5'}\n",
            "(C9 ⊗ C4) ⊗ C4 = C9 ⊗ (C4 ⊗ C4) = {'C6'}\n",
            "(C9 ⊗ C4) ⊗ C5 = C9 ⊗ (C4 ⊗ C5) = {'C7'}\n",
            "(C9 ⊗ C4) ⊗ C6 = C9 ⊗ (C4 ⊗ C6) = {'C8'}\n",
            "(C9 ⊗ C4) ⊗ C7 = C9 ⊗ (C4 ⊗ C7) = {'C9'}\n",
            "(C9 ⊗ C4) ⊗ C8 = C9 ⊗ (C4 ⊗ C8) = {'C1'}\n",
            "(C9 ⊗ C4) ⊗ C9 = C9 ⊗ (C4 ⊗ C9) = {'C2'}\n",
            "(C9 ⊗ C5) ⊗ C1 = C9 ⊗ (C5 ⊗ C1) = {'C4'}\n",
            "(C9 ⊗ C5) ⊗ C2 = C9 ⊗ (C5 ⊗ C2) = {'C5'}\n",
            "(C9 ⊗ C5) ⊗ C3 = C9 ⊗ (C5 ⊗ C3) = {'C6'}\n",
            "(C9 ⊗ C5) ⊗ C4 = C9 ⊗ (C5 ⊗ C4) = {'C7'}\n",
            "(C9 ⊗ C5) ⊗ C5 = C9 ⊗ (C5 ⊗ C5) = {'C8'}\n",
            "(C9 ⊗ C5) ⊗ C6 = C9 ⊗ (C5 ⊗ C6) = {'C9'}\n",
            "(C9 ⊗ C5) ⊗ C7 = C9 ⊗ (C5 ⊗ C7) = {'C1'}\n",
            "(C9 ⊗ C5) ⊗ C8 = C9 ⊗ (C5 ⊗ C8) = {'C2'}\n",
            "(C9 ⊗ C5) ⊗ C9 = C9 ⊗ (C5 ⊗ C9) = {'C3'}\n",
            "(C9 ⊗ C6) ⊗ C1 = C9 ⊗ (C6 ⊗ C1) = {'C5'}\n",
            "(C9 ⊗ C6) ⊗ C2 = C9 ⊗ (C6 ⊗ C2) = {'C6'}\n",
            "(C9 ⊗ C6) ⊗ C3 = C9 ⊗ (C6 ⊗ C3) = {'C7'}\n",
            "(C9 ⊗ C6) ⊗ C4 = C9 ⊗ (C6 ⊗ C4) = {'C8'}\n",
            "(C9 ⊗ C6) ⊗ C5 = C9 ⊗ (C6 ⊗ C5) = {'C9'}\n",
            "(C9 ⊗ C6) ⊗ C6 = C9 ⊗ (C6 ⊗ C6) = {'C1'}\n",
            "(C9 ⊗ C6) ⊗ C7 = C9 ⊗ (C6 ⊗ C7) = {'C2'}\n",
            "(C9 ⊗ C6) ⊗ C8 = C9 ⊗ (C6 ⊗ C8) = {'C3'}\n",
            "(C9 ⊗ C6) ⊗ C9 = C9 ⊗ (C6 ⊗ C9) = {'C4'}\n",
            "(C9 ⊗ C7) ⊗ C1 = C9 ⊗ (C7 ⊗ C1) = {'C6'}\n",
            "(C9 ⊗ C7) ⊗ C2 = C9 ⊗ (C7 ⊗ C2) = {'C7'}\n",
            "(C9 ⊗ C7) ⊗ C3 = C9 ⊗ (C7 ⊗ C3) = {'C8'}\n",
            "(C9 ⊗ C7) ⊗ C4 = C9 ⊗ (C7 ⊗ C4) = {'C9'}\n",
            "(C9 ⊗ C7) ⊗ C5 = C9 ⊗ (C7 ⊗ C5) = {'C1'}\n",
            "(C9 ⊗ C7) ⊗ C6 = C9 ⊗ (C7 ⊗ C6) = {'C2'}\n",
            "(C9 ⊗ C7) ⊗ C7 = C9 ⊗ (C7 ⊗ C7) = {'C3'}\n",
            "(C9 ⊗ C7) ⊗ C8 = C9 ⊗ (C7 ⊗ C8) = {'C4'}\n",
            "(C9 ⊗ C7) ⊗ C9 = C9 ⊗ (C7 ⊗ C9) = {'C5'}\n",
            "(C9 ⊗ C8) ⊗ C1 = C9 ⊗ (C8 ⊗ C1) = {'C7'}\n",
            "(C9 ⊗ C8) ⊗ C2 = C9 ⊗ (C8 ⊗ C2) = {'C8'}\n",
            "(C9 ⊗ C8) ⊗ C3 = C9 ⊗ (C8 ⊗ C3) = {'C9'}\n",
            "(C9 ⊗ C8) ⊗ C4 = C9 ⊗ (C8 ⊗ C4) = {'C1'}\n",
            "(C9 ⊗ C8) ⊗ C5 = C9 ⊗ (C8 ⊗ C5) = {'C2'}\n",
            "(C9 ⊗ C8) ⊗ C6 = C9 ⊗ (C8 ⊗ C6) = {'C3'}\n",
            "(C9 ⊗ C8) ⊗ C7 = C9 ⊗ (C8 ⊗ C7) = {'C4'}\n",
            "(C9 ⊗ C8) ⊗ C8 = C9 ⊗ (C8 ⊗ C8) = {'C5'}\n",
            "(C9 ⊗ C8) ⊗ C9 = C9 ⊗ (C8 ⊗ C9) = {'C6'}\n",
            "(C9 ⊗ C9) ⊗ C1 = C9 ⊗ (C9 ⊗ C1) = {'C8'}\n",
            "(C9 ⊗ C9) ⊗ C2 = C9 ⊗ (C9 ⊗ C2) = {'C9'}\n",
            "(C9 ⊗ C9) ⊗ C3 = C9 ⊗ (C9 ⊗ C3) = {'C1'}\n",
            "(C9 ⊗ C9) ⊗ C4 = C9 ⊗ (C9 ⊗ C4) = {'C2'}\n",
            "(C9 ⊗ C9) ⊗ C5 = C9 ⊗ (C9 ⊗ C5) = {'C3'}\n",
            "(C9 ⊗ C9) ⊗ C6 = C9 ⊗ (C9 ⊗ C6) = {'C4'}\n",
            "(C9 ⊗ C9) ⊗ C7 = C9 ⊗ (C9 ⊗ C7) = {'C5'}\n",
            "(C9 ⊗ C9) ⊗ C8 = C9 ⊗ (C9 ⊗ C8) = {'C6'}\n",
            "(C9 ⊗ C9) ⊗ C9 = C9 ⊗ (C9 ⊗ C9) = {'C7'}\n",
            "(L,⊗^L') adalah semihipergrup\n",
            "(L,⊗^L') adalah hvsemigrup\n",
            "(L,⊗^L') adalah quasihipergrup\n",
            "(L,⊗^L') adalah hipergrup\n",
            "(L,⊗^L') bersifat komutatif\n",
            "Identitas skalar dari (L,⊗^L') = C1\n",
            "(L,⊗^L') adalah hipergrup kanonik\n",
            "Identitas dari (L,⊗^L') = ['C1']\n",
            "(L,⊗^L') adalah hipergrup reguler\n",
            "(L,⊗^L') bukan hipergrup siklik.\n",
            "Elemen idempoten dari (L,⊗^L') = ['C1']\n",
            "Subhipergrup dari (L,⊗^L') berjumlah 3 yaitu = [{'C1'}, {'C7', 'C1', 'C4'}, {'C5', 'C8', 'C9', 'C2', 'C4', 'C3', 'C6', 'C7', 'C1'}]\n",
            "Subhipergrup normal dari (L,⊗^L') berjumlah 1 yaitu = [{'C5', 'C8', 'C9', 'C2', 'C4', 'C3', 'C6', 'C7', 'C1'}]\n",
            "Subset linier dari (L,⊗^L') berjumlah 3 yaitu = [{'C1'}, {'C7', 'C1', 'C4'}, {'C5', 'C8', 'C9', 'C2', 'C4', 'C3', 'C6', 'C7', 'C1'}]\n"
          ]
        }
      ]
    }
  ]
}
